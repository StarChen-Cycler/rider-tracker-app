地图 JSAPI 2.0
基础类
LngLat
Instance members
#lat
#lng
#setLng
#setLat
#getLng
#getLat
#equals
#add
#subtract
#offset
#toString
#toArray
#distance
Bounds
Instance members
#getSouthWest
#getNorthEast
#getNorthWest
#getSouthEast
#contains
#getCenter
#toString
Pixel
Instance members
#getX
#getY
#toString
#equals
Size
Instance members
#getWidth
#getHeight
#toString
事件
Event
Instance members
#on
#off
#hasEvents
#clearEvents
#emit
地图
Map
Instance members
#resize
#center
#setCenter
#zoom
#setZoomAndCenter
#getBounds
#getCenter
#setZoom
#getContainer
#getSize
#getZoom
#zoomIn
#addLayer
#zoomOut
#getPitch
#setPitch
#getRotation
#setRotation
#removeLayer
#setBounds
#panTo
#setLayers
#getLayers
#panBy
#getStatus
#setStatus
#add
#getDefaultCursor
#setDefaultCursor
#remove
#destroy
#lngLatToCoords
#coordsToLngLat
#getLimitBounds
#lngLatToContainer
#setLimitBounds
#clearLimitBounds
#getAltitude
#getZooms
#setZooms
#containerToLngLat
#coordToContainer
#containerToCoord
#getAltitudeByContainer
#pixelToLngLat
#lngLatToPixel
#getResolution
#getScale
#getCity
#setCity
#setFitView
#getFitZoomAndCenterByOverlays
#getFitZoomAndCenterByBounds
#addControl
#removeControl
#setMapStyle
#getMapStyle
#getAllOverlays
#clearMap
#clearInfoWindow
#getFeatures
#setFeatures
#getMapApprovalNumber
#setMask
#setLabelRejectMask
Events
ⓔ resize
ⓔ complete
ⓔ click
ⓔ dblclick
ⓔ mapmove
ⓔ hotspotclick
ⓔ hotspotover
ⓔ hotspotout
ⓔ movestart
ⓔ moveend
ⓔ zoomchange
ⓔ zoomstart
ⓔ zoomend
ⓔ rotatechange
ⓔ rotatestart
ⓔ rotateend
ⓔ mousemove
ⓔ mousewheel
ⓔ mouseover
ⓔ mouseout
ⓔ mouseup
ⓔ mousedown
ⓔ rightclick
ⓔ dragstart
ⓔ dragging
ⓔ dragend
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
MapsEvent
高德官方图层
TileLayer
Instance members
#setTileUrl
#reload
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
Events
ⓔ complete
Traffic
Instance members
#stopFresh
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
Events
ⓔ complete
Satellite
Instance members
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
#destroy
Events
ⓔ complete
RoadNet
Instance members
#show
#hide
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#destroy
Events
ⓔ complete
Buildings
Instance members
#setStyle
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
#destroy
DistrictLayer
Static members
.World
.Country
.Province
Instance members
#setSOC
#setDistricts
#getDistricts
#setStyles
#getStyles
#setAdcode
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
IndoorMap
Instance members
#showIndoorMap
#showFloor
#show
#hide
#setMap
#setzIndex
#showFloorBar
#hideFloorBar
#setOpacity
#getOpacity
#showLabels
#hideLabels
#getSelectedBuildingId
#getSelectedBuilding
行业标准图层
WMS
Instance members
#setParams
#getParams
#setUrl
#setUrl
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
Events
ⓔ complete
WMTS
Instance members
#setParams
#getParams
#getUrl
#setUrl
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
Events
ⓔ complete
MapboxVectorTileLayer
Instance members
#setStyles
#filterByRect
#getStyles
#on
#hide
#hide
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
自有数据图层
HeatMap
Instance members
#getMap
#setMap
#getOptions
#setOptions
#getDataSet
#setDataSet
#addDataPoint
#getzIndex
#setzIndex
#show
#hide
VectorLayer
Instance members
#add
#remove
#show
#hide
#has
#clear
#setOptions
#query
#getBounds
LabelsLayer
Instance members
#getCollision
#setCollision
#getAllowCollision
#setAllowCollision
#getOpacity
#setOpacity
#getZooms
#setZooms
#getzIndex
#setzIndex
#add
#remove
#clear
#show
#hide
#getAllOverlays
CustomLayer
Instance members
#getOptions
#getzIndex
#setzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
#setMap
Flexible
Instance members
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
#destroy
Events
ⓔ complete
ImageLayer
Instance members
#getImageUrl
#setImageUrl
#getBounds
#setBounds
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
Events
ⓔ complete
CanvasLayer
Instance members
#setCanvas
#getElement
#getBounds
#setBounds
#reFresh
#getOptions
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
GLCustomLayer
Instance members
#getMap
#getzIndex
#setzIndex
#getOpacity
#setOpacity
#getZooms
#setZooms
#show
#hide
点标记
Marker
Instance members
#getTitle
#getHeight
#getIcon
#setIcon
#getLabel
#setLabel
#getClickable
#setClickable
#getDraggable
#setDraggable
#getTop
#setTop
#getCursor
#setCursor
#getExtData
#setExtData
#remove
#moveTo
#moveAlong
#startMove
#stopMove
#pauseMove
#resumeMove
#getMap
#setMap
#addTo
#add
#show
#hide
#getPosition
#setPosition
#getAnchor
#setAnchor
#getOffset
#setOffset
#getAngle
#setAngle
#getSize
#setSize
#getzIndex
#setzIndex
#getOptions
#getContent
#setContent
#getBounds
Events
ⓔ click
ⓔ dblclick
ⓔ rightclick
ⓔ mousemove
ⓔ mouseover
ⓔ mouseout
ⓔ mousedown
ⓔ mouseup
ⓔ dragstart
ⓔ dragging
ⓔ dragend
ⓔ moving
ⓔ moveend
ⓔ movealong
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
Text
Instance members
#getText
#setText
#setStyle
#getTitle
#setTitle
#getClickable
#setClickable
#getDraggable
#getMap
#setMap
#addTo
#add
#show
#hide
#getPosition
#setPosition
#getAnchor
#setAnchor
#getOffset
#setOffset
#getAngle
#setAngle
#getzIndex
#setzIndex
#getOptions
#getBounds
#moveTo
#moveAlong
#startMove
#stopMove
#pauseMove
#resumeMove
#setDraggable
#getTop
#setTop
#getCursor
#setCursor
#getExtData
#setExtData
#remove
Events
ⓔ click
ⓔ dblclick
ⓔ rightclick
ⓔ mousemove
ⓔ mouseover
ⓔ mouseout
ⓔ mousedown
ⓔ mouseup
ⓔ dragstart
ⓔ dragging
ⓔ dragend
ⓔ moving
ⓔ moveend
ⓔ movealong
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
Icon
Instance members
#setImageSize
#getImageSize
#setSize
#getSize
#setImageOffset
#getImageOffset
#getImage
#setImage
#setOriginSize
#getOriginSize
LabelMarker
Instance members
#getName
#setName
#getPosition
#setPosition
#getZooms
#setZooms
#getOpacity
#setOpacity
#getzIndex
#setzIndex
#getRank
#setRank
#getText
#setText
#getIcon
#setIcon
#getOptions
#getExtData
#setExtData
#setTop
#getVisible
#getCollision
#show
#hide
#remove
#moveTo
#moveAlong
#startMove
#stopMove
#pauseMove
#resumeMove
Events
ⓔ click
ⓔ mousemove
ⓔ mouseover
ⓔ mouseout
ⓔ mousedown
ⓔ mouseup
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
ElasticMarker
Instance members
#getTitle
#setTitle
#getClickable
#getMap
#setMap
#show
#hide
#getPosition
#setPosition
#setAnchor
#getzIndex
#setzIndex
#getOptions
#getBounds
#setClickable
#getDraggable
#setDraggable
#getTop
#setTop
#getCursor
#setCursor
#getExtData
#setExtData
#remove
Events
ⓔ click
ⓔ dblclick
ⓔ rightclick
ⓔ mousemove
ⓔ mouseover
ⓔ mouseout
ⓔ mousedown
ⓔ mouseup
ⓔ dragstart
ⓔ dragging
ⓔ dragend
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
MarkerCluster
Instance members
#addData
#setData
#getClustersCount
#getGridSize
#setGridSize
#getMaxZoom
#setMaxZoom
#setStyles
#getStyles
#getMap
#setMap
#isAverageCenter
#setAverageCenter
Events
ⓔ click
MassMarks
Instance members
#setMap
#getMap
#getData
#setData
#getStyle
#setStyle
#setOpacity
#setzIndex
#setzIndex
#getzIndex
#getZooms
#setZooms
#show
#hide
#clear
Events
ⓔ complete
ⓔ click
ⓔ dbclick
ⓔ mousemove
ⓔ mouseover
ⓔ mouseout
ⓔ mousedown
ⓔ mouseup
ⓔ touchstart
ⓔ touchend
MoveAnimation
Static members
.moveTo
.moveAlong
.startMove
.stopMove
.resumeMove
AnimationCallback
EasingCallback
信息窗体
InfoWindow
Instance members
#open
#getIsOpen
#setSize
#setContent
#setAnchor
#getExtData
#setExtData
Events
ⓔ open
ⓔ close
右键菜单
ContextMenu
Instance members
#open
#close
#addItem
#removeItem
Events
ⓔ open
ⓔ close
矢量图形
Polygon
Instance members
#hide
#show
#getExtData
#setExtData
#getOptions
#setOptions
#getPath
#setHeight
#setExtrusionHeight
#getExtrusionHeight
#getBounds
#destroy
#getArea
#contains
#setPath
#getPlaneHeight
Events
ⓔ hide
ⓔ show
ⓔ click
ⓔ dblclick
ⓔ rightclick
ⓔ mousedown
ⓔ mouseup
ⓔ mouseover
ⓔ mouseout
ⓔ dragstart
ⓔ dragging
ⓔ dragend
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
Polyline
Instance members
#hide
#show
#getExtData
#getOptions
#getPath
#setExtData
#setHeight
#destroy
#getBounds
#setPath
#moveWithPos
#getLength
#getEndDistance
#generateBuffer
#setOptions
#contains
#getPolylineHeight
Events
ⓔ hide
ⓔ show
ⓔ click
ⓔ dblclick
ⓔ rightclick
ⓔ mousedown
ⓔ mouseup
ⓔ mouseover
ⓔ mouseout
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
BezierCurve
Instance members
#setOptions
#generateBuffer
#getPath
#setPath
#getBounds
#getBounds
#hide
#show
#setHeight
#getPolylineHeight
#getExtData
#setExtData
#destroy
#getOptions
#contains
#getLength
Events
ⓔ hide
ⓔ show
ⓔ click
ⓔ dblclick
ⓔ rightclick
ⓔ mousedown
ⓔ mouseup
ⓔ mouseover
ⓔ mouseout
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
Circle
Instance members
#svgDom
#svgDom
#setCenter
#setRadius
#getCenter
#getRadius
#contains
#setOptions
#hide
#setHeight
#getPlaneHeight
#show
#getExtData
#setExtData
#destroy
#getArea
#getOptions
Events
ⓔ hide
ⓔ show
ⓔ click
ⓔ dblclick
ⓔ rightclick
ⓔ mousedown
ⓔ mouseup
ⓔ mouseover
ⓔ mouseout
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
CircleMarker
Instance members
#contains
#hide
#setRadius
#generateBuffer
#getCenter
#getRadius
#show
#setOptions
#getOptions
#getExtData
#getCurAltitude
#setExtData
#destroy
Events
ⓔ hide
ⓔ show
ⓔ click
ⓔ dblclick
ⓔ rightclick
ⓔ mousedown
ⓔ mouseup
ⓔ mouseover
ⓔ mouseout
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
Ellipse
Instance members
#path
#svgDom
#centroid
#setCenter
#setRadius
#setHeight
#getCenter
#getRadius
#generateBuffer
#hide
#setOptions
#getPlaneHeight
#show
#getExtData
#setExtData
#destroy
#getArea
#contains
#getOptions
Events
ⓔ hide
ⓔ show
ⓔ click
ⓔ dblclick
ⓔ rightclick
ⓔ mousedown
ⓔ mouseup
ⓔ mouseover
ⓔ mouseout
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
Rectangle
Instance members
#contains
#setBounds
#generateBuffer
#setOptions
#getPlaneHeight
#hide
#setHeight
#getCenter
#show
#getExtData
#setExtData
#destroy
#getArea
#getOptions
Events
ⓔ hide
ⓔ show
ⓔ click
ⓔ dblclick
ⓔ rightclick
ⓔ mousedown
ⓔ mouseup
ⓔ mouseover
ⓔ mouseout
ⓔ touchstart
ⓔ touchmove
ⓔ touchend
GeoJSON
Instance members
#importData
#toGeoJSON
群组
LayerGroup
Instance members
#setMap
#hasLayer
#setOptions
#eachLayer
#addLayer
#addLayers
#removeLayer
#removeLayers
#getLayers
#clearLayers
#hide
#show
#on
#reload
OverlayGroup
Instance members
#addOverlay
#addOverlays
#getOverlays
#hasOverlay
#removeOverlay
#removeOverlays
#clearOverlays
#eachOverlay
#show
#hide
#setOptions
Events
ⓔ *
地图控件
Control
Instance members
#addTo
#remove
#show
#hide
Events
ⓔ show
ⓔ hide
Scale
Instance members
#addTo
#removeFrom
#show
#hide
Events
ⓔ show
ⓔ hide
ToolBar
Instance members
#addTo
#remove
#show
#hide
Events
ⓔ show
ⓔ hide
ControlBar
Instance members
#addTo
#remove
#show
#hide
Events
ⓔ show
ⓔ hide
MapType
Instance members
#addLayer
#removeLayer
#addTo
#remove
#show
#hide
Events
ⓔ show
ⓔ hide
HawkEye
Instance members
#show
#hide
工具类
RangingTool
Instance members
#turnOn
#turnOff
Events
ⓔ addnode
ⓔ removenode
ⓔ end
MouseTool
Instance members
#marker
#circle
#rectangle
#polyline
#polygon
#measureArea
#rule
#rectZoomIn
#rectZoomOut
#close
Events
ⓔ draw
PolygonEditor
Instance members
#open
#setTarget
#getTarget
#setAdsorbPolygons
#clearAdsorbPolygons
#addAdsorbPolygons
#removeAdsorbPolygons
#close
Events
ⓔ addnode
ⓔ removenode
ⓔ adjust
ⓔ move
ⓔ add
ⓔ end
PolylineEditor
Instance members
#setTarget
#getTarget
#open
#close
Events
ⓔ addnode
ⓔ adjust
ⓔ removenode
ⓔ add
ⓔ end
CircleEditor
Instance members
#setTarget
#getTarget
#open
#close
Events
ⓔ addnode
ⓔ adjust
ⓔ move
ⓔ add
ⓔ end
BezierCurveEditor
Instance members
#setTarget
#getTarget
#open
#close
Events
ⓔ addnode
ⓔ adjust
ⓔ removenode
ⓔ add
ⓔ end
EllipseEditor
Instance members
#setTarget
#getTarget
#open
#close
Events
ⓔ addnode
ⓔ adjust
ⓔ move
ⓔ add
ⓔ end
RectangleEditor
Instance members
#setTarget
#getTarget
#open
#close
Events
ⓔ addnode
ⓔ adjust
ⓔ move
ⓔ add
ⓔ end
服务类
WebService
Static members
.get
.post
WebServiceCallback
搜索
AutoComplete
Instance members
#setType
#setCity
#setCityLimit
#search
Events
ⓔ select
ⓔ choose
AutoCompleteSearchCallback
PlaceSearch
Instance members
#search
#searchInBounds
#searchNearBy
#getDetails
#setType
#setPageIndex
#setPageSize
#setCity
#setCityLimit
#poiOnAMAP
#detailOnAMAP
Events
ⓔ selectChanged
ⓔ markerClick
ⓔ listElementClick
searchCallback
CloudDataSearch
Instance members
#setOptions
#clear
#searchNearBy
#searchById
#searchByDistrict
#searchInPolygon
CloudDataSearchCallback
地理编码
Geocoder
Instance members
#getLocation
#setCity
#getAddress
Events
ⓔ complete
ⓔ error
GeocoderCallback
ReGeocoderCallback
convertFrom
路线规划
Driving
Instance members
#search
#search
#clear
#setAvoidPolygons
#clearAvoidPolygons
#getAvoidPolygons
#setAvoidRoad
#clearAvoidRoad
#getAvoidRoad
#setProvinceAndNumber
#setPolicy
Events
ⓔ complete
ⓔ error
DrivingCallback
DrivingResult
DriveStepBasic
DriveStepDetail
TruckDriving
Instance members
#clear
#search
#search
#setProvinceAndNumber
#setPolicy
Events
ⓔ complete
ⓔ error
Walking
Instance members
#clear
#search
#search
Events
ⓔ complete
ⓔ error
WalkingCallback
WalkingResult
Transfer
Instance members
#search
#search
#leaveAt
#clear
#setPolicy
#setCity
#setCityd
Events
ⓔ complete
ⓔ error
TransferCallback
TransferResult
Riding
Instance members
#clear
#setPolicy
#search
#search
Events
ⓔ complete
ⓔ error
RidingCallback
RidingResult
DragRoute
Instance members
#search
#getWays
#getRoute
#destroy
Events
ⓔ addway
ⓔ complete
DragRouteTruck
Instance members
#setAvoidPolygons
#clearAvoidPolygons
#getAvoidPolygons
#search
#updatePath
#getWays
#getRoute
#destroy
#setOption
Events
ⓔ addway
ⓔ complete
GraspRoad
Instance members
#driving
GraspRoadCallback
其他服务
DistrictSearch
Static members
.setLevel
.setSubdistrict
.search
Events
ⓔ complete
ⓔ error
Weather
Instance members
#getLive
#getForecast
Events
ⓔ error
ⓔ complete
WeatherLiveResult
WeatherForecastResult
StationSearch
Static members
.StationSearchOptions
Instance members
#setPageIndex
#setPageSize
#setCity
#setCity
#setCity
Events
ⓔ StationSearchEvent
LineSearch
Static members
.LineSearchOptions
Instance members
#setPageIndex
#setPageSize
#setCity
#setCity
#setCity
#setCity
Events
ⓔ LineSearchEvent
定位
Geolocation
Instance members
#getCurrentPosition
#getCityInfo
GeolocationCallBack
GeolocationResult
CitySearch
Instance members
#getLocalCity
#getCityByIp
Events
ⓔ complete
ⓔ error
通用库
GeometryUtil
Instance members
#distance
#ringArea
#ringAreaByAltitude
#isClockwise
#typePolygon
#makesureClockwise
#makesureAntiClockwise
#distanceOfLine
#distanceOfLineByAltitude
#distanceLineByAltitude
#ringRingClip
#doesSegmentsIntersect
#doesSegmentLineIntersect
#doesSegmentRingIntersect
#doesSegmentPolygonIntersect
#doesLineLineIntersect
#doesLineRingIntersect
#doesRingRingIntersect
#pointInRing
#isPointInRing
#isPointInBbox
#isRingInRing
#isPointInPolygon
#isPointInPolygons
#isPointOnSegment
#isPointOnLine
#isPointOnRing
#isPointOnPolygon
#closestOnSegment
#closestOnLine
#distanceToSegment
#distanceToLine
DomUtil
Instance members
#getViewport
#getViewportOffset
#create
#hasClass
#addClass
#setClass
#removeClass
#remove
#empty
#rotate
#setCss
#setOpacity
Browser
Util
Instance members
#isDOM
#colorNameToHex
#rgbHex2Rgba
#argbHex2Rgba
#isEmpty
#deleteItemFromArray
#deleteItemFromArrayByIndex
#indexOf
#format
#isArray
#includes
#requestIdleCallback
#cancelIdleCallback
#requestAnimFrame
#cancelAnimFrame
基础类
经纬度、像素、边界、大小、这些是地图 JSAPI 开发必须了解的基本类型

AMap.LngLat
经纬度坐标，用来描述地图上的一个点位置, 目前高德地图使用的是 GCJ-02 坐标，如果你采集的是 WGS84 坐标，请先进行坐标转换

new AMap.LngLat(lng: Number?, lat: Number?, noWrap: Boolean?)
参数说明：
lng (Number?) 经度值
lat (Number?) 纬度值
noWrap (Boolean?) 是否自动将经度值修正到 [-180,180] 区间内，缺省时为false。
noWrap 为false时传入 [190,30] ，会被自动修正为 [-170,30] , noWrap 为true时不会自动修正，可以用来进行跨日期限的覆盖物绘制
示例代码：
var lnglat = new AMap.LngLat(116, 39);
成员函数：
lat
纬度

Type: number

lng
经度

Type: number

setLng(lng)
设置经度值

参数说明：
lng (number) 经度
setLat(lat)
设置纬度值

参数说明：
lat (number)
getLng()
获取经度值

返回值：
number:
getLat()
获取纬度值

返回值：
number:
equals(another)
判断经纬度坐标和另外一个经纬度坐标是否相等

参数说明：
another (LngLat) 另外一个经纬度坐标
返回值：
Boolean: 是否相等
add(another, noWrap)
与另外一个经纬度相加

参数说明：
another (LngLat) 另外一个经纬度坐标
noWrap (boolean) 是否将相加的结果经度值修正到 [-180,180] 区间内
返回值：
LngLat: 两个经纬度相加的结果
subtract(another, noWrap)
与另外一个经纬度相减

参数说明：
another (LngLat) 另外一个经纬度坐标
noWrap (boolean) 是否将相减的结果经度值修正到 [-180,180] 区间内
返回值：
LngLat: 两个经纬度相减的结果
offset(E, N)
获取从当前经纬度位置向东移动 E 米，向北移动 N 米的坐标位置

参数说明：
E (Number) 经度方向移动，向东为正
N (Number) 维度方向移动，向北为正
返回值：
LngLat: 移动后的新经纬度
toString()
LngLat对象以字符串的形式返回

返回值：
string: 格式如'lng值,lat值'的字符串
toArray()
LngLat对象以字符串的形式返回

返回值：
string: 格式如'lng值,lat值'的字符串
distance()
计算当前经纬度距离另一个经纬度或者经纬度数组组成的路径的距离 相关示例

返回值：
number: 距离值，单位为米
AMap.Bounds
地物对象的经纬度矩形范围。

new AMap.Bounds(southWest: LngLat, northEast: LngLat)
参数说明：
southWest (LngLat) 西南角经纬度
northEast (LngLat) 东北角经纬度值
成员函数：
getSouthWest()
获取西南角坐标。

返回值：
LngLat:
getNorthEast()
获取东北角坐标

返回值：
LngLat:
getNorthWest()
获取西北角坐标

返回值：
LngLat:
getSouthEast()
获取东南角坐标

返回值：
LngLat:
contains(obj)
指定点坐标是否在矩形范围内

参数说明：
obj (LngLat)
返回值：
Boolean:
示例代码：
bounds.contains(new AMap.LngLat(116,39));
getCenter()
获取当前Bounds的中心点经纬度坐标。

返回值：
LngLat:
toString()
以字符串形式返回地图对象的矩形范围

返回值：
String:
AMap.Pixel
像素坐标，确定地图上的一个像素点。

new AMap.Pixel(x: number, y: number)
参数说明：
x (number)
y (number)
成员函数：
getX()
获取像素横坐标

返回值：
Number:
getY()
获取像素纵坐标

返回值：
Number:
toString()
以字符串形式返回像素坐标对象

返回值：
string:
equals(point)
当前像素坐标与传入像素坐标是否相等

参数说明：
point (Pixel)
返回值：
boolean:
AMap.Size
地物对象的像素尺寸

new AMap.Size(width: number, height: number)
参数说明：
width (number) 宽度
height (number) 高度
成员函数：
getWidth()
获取像素横坐标

返回值：
Number:
getHeight()
获取像素纵坐标

返回值：
Number:
toString()
以字符串形式返回尺寸大小对象

返回值：
string:
事件
地图 JSAPI 具有完备的事件体系，在 2.0 版本中所有类型的实例均使用 on/off 方法进行事件的绑定和移除

Event
JSAPI 的所有类型（地图、图层、覆盖物等）都实现了事件接口，用于给当前实例对象绑定、移除、清理事件回调

示例代码：
// 声明点击事件的回调函数
function onClick(e){
    console.log(e);
}
// 给地图实例绑定点击事件 onClick
map.on('click', onClick);
// 移除地图实例的 onClick 事件绑定
map.off('click', onClick);
// 清除地图实例上的所有 click 事件绑定
map.clearEvents('click');
// 覆盖物绑定鼠标移动事件
polygon.on('mousemove',console.log);
// 覆盖物绑定事件判断
polygon.hasEvents('mousemove',console.log);
成员函数：
on(type, function, context, once)
给实例绑定事件回调函数，同一个类型、同一个回调函数、同一个上下文只会绑定一次

参数说明：
type (String) 事件类型
function (Function) 回调函数
context (Object) 事件上下文，缺省为实例本身
once (Boolean) 是否只执行一次
返回值：
Object: 当前实例
off(type, function, context)
移除当前实例的某一个事件回调

参数说明：
type (String) 事件类型
function (Function) 事件回调函数
context (Object) 事件上下文，缺省为当前实例
返回值：
Object: 当前实例
hasEvents(type, function, context)
判断当前实例是否已经绑定了某个事件回调

参数说明：
type (String) 事件类型
function (Function) 事件回调
context (Object) 事件上下文
返回值：
Boolean:
clearEvents(type)
清除当前实例某一类型的全部事件回调

参数说明：
type (String) 事件类型，如果此参数为空，清除实例上的所有绑定的事件回调
返回值：
Object: 当前实例
emit(type, data)
模拟触发当前实例的某个事件

参数说明：
type (String) 事件类型
data (Object) 事件回调时返回的数据，模拟的事件体应该完整，否则可能导致报错
返回值：
Object: 当前实例
地图
AMap.Map
地图对象类，封装了地图的属性设置、图层变更、事件交互等接口的类。
相关示例

new AMap.Map(div: (String | HTMLDivElement), opts: MapOptions)
参数说明：
div ((String | HTMLDivElement)) 构造一个地图对象，参数 container 中传入地图容器 DIV 的 ID 值或者 DIV 对象， Options 地图初始化参数对象，参数详情参看 MapOptions 列表。注意：地图容器在创建之前必须拥有实际大小，否则可能出现底图无法渲染的问题。
opts (MapOptions) 地图初始化参数
属性	描述
opts.center
类型：([Number, Number] | LngLat)?	初始地图中心经纬度。
opts.zoom
类型：Number?	初始地图缩放级别。可以设置为浮点数；若 center 与 level 未赋值，地图初始化默认显示用户所在当前城市范围。
opts.rotation
类型：Number
default 0	初始地图顺时针旋转的角度，取值范围 [0-360] ，默认值：0
opts.pitch
类型：Number
default 0	初始地图俯仰角度，默认 0，最大值根据地图当前 zoom 级别不断增大， 2D 地图下无效 。
opts.viewMode
类型：String
default '2D'	初始地图视图模式，默认为 2D ，可选 3D ，选择 3D 会显示 3D 地图效果。
opts.terrain
类型：Boolean
default false	初始地图是否展示地形，此属性适用于 3D 地图。默认为值 false 不展示地形，可选 true ，选择 true 会展示地形效果。(注意：此属性适用于 JSAPI v2.1Beta 及以上版本)。
opts.features
类型：Array<String>
default ['bg','point','road','building']	设置地图上显示的元素种类, 支持 'bg' （地图背景）、 'point' （POI点）、 'road' （道路）、 'building' （建筑物）
opts.layers
类型：Array<Layer>	地图图层数组，数组可以是图层 中的一个或多个，默认为普通二维地图。当叠加多个图层，
如：' https://lbs.amap.com/api/jsapi-v2/documentation#tilelayer ' 时，普通二维地图需通过实例化一个 TileLayer 类实现。
如果你希望创建一个默认底图图层，使用 AMap.createDefaultLayer()；
opts.zooms
类型：[Number, Number]
default [2,20]	地图显示的缩放级别范围, 默认为 [2, 20] ，取值范围 [2 ~ 26]
opts.dragEnable
类型：Boolean
default true	地图是否可通过鼠标拖拽平移, 默认为 true 。此属性可被 setStatus/getStatus 方法控制
opts.zoomEnable
类型：Boolean
default true	地图是否可缩放，默认值为 true 。此属性可被 setStatus/getStatus 方法控制
opts.jogEnable
类型：Boolean
default true	地图是否使用缓动效果，默认值为 true 。此属性可被 setStatus/getStatus 方法控制
opts.pitchEnable
类型：Boolean
default true	是否允许设置俯仰角度, 3D 视图下为 true , 2D 视图下无效。
opts.rotateEnable
类型：Boolean
default true	地图是否可旋转, 图默认为 true 。
opts.animateEnable
类型：Boolean
default true	地图平移过程中是否使用动画（如调用 panBy、panTo、setCenter、setZoomAndCenter 等函数, 将对地图产生平移操作, 是否使用动画平移的效果）, 默认为 true , 即使用动画
opts.keyboardEnable
类型：Boolean
default true	地图是否可通过键盘控制, 默认为 true , 方向键控制地图平移，"+" 和 "-" 可以控制地图的缩放, Ctrl+“→”顺时针旋转，Ctrl+“←”逆时针旋转。此属性可被 setStatus/getStatus 方法控制
opts.doubleClickZoom
类型：Boolean
default true	地图是否可通过双击鼠标放大地图, 默认为 true 。此属性可被 setStatus/getStatus 方法控制
opts.scrollWheel
类型：Boolean
default true	地图是否可通过鼠标滚轮缩放浏览，默认为 true 。此属性可被 setStatus/getStatus 方法控制
opts.touchZoom
类型：Boolean
default true	地图在移动终端上是否可通过多点触控缩放浏览地图，默认为 true 。关闭手势缩放地图，请设置为 false 。
opts.touchZoomCenter
类型：Boolean
default 1	可缺省，当 touchZoomCenter=1 的时候，手机端双指缩放的以地图中心为中心，否则默认以双指中间点为中心。
opts.showLabel
类型：Boolean
default true	是否展示地图文字和 POI 信息。
opts.defaultCursor
类型：String?	地图默认鼠标样式。参数 defaultCursor 应符合 CSS 的 cursor 属性规范。
opts.isHotspot
类型：Boolean?	是否开启地图热点和标注的 hover 效果。PC端默认是 true , 移动端默认是 false 。
opts.mapStyle
类型：String?	设置地图的显示样式，目前支持两种地图样式：
第一种：自定义地图样式，如:
amap://styles/d6bf8c1d69cea9f5c696185ad4ac4c86.
可前往地图自定义平台定制自己的个性地图样式；
第二种：官方样式模版，如：
amap://styles/normal
amap://styles/grey
amap://styles/whitesmoke
amap://styles/dark
amap://styles/light
amap://styles/graffiti.
其他模版样式及自定义地图的使用说明见开发指南。
opts.wallColor
类型：(String | Array<Number>)?	地图楼块的侧面颜色
opts.roofColor
类型：(String | Array<Number>)?	地图楼块的顶面颜色
opts.showBuildingBlock
类型：Boolean
default true	是否展示地图 3D 楼块，默认 true 。
opts.showIndoorMap
类型：Boolean
default false	是否自动展示室内地图，默认是 false 。
opts.skyColor
类型：(String | Array<Number>)?	天空颜色， 3D 模式下带有俯仰角时会显示
opts.labelRejectMask
类型：Boolean
default false	文字是否拒绝掩模图层进行掩模
opts.mask
类型：Array<Number>	为 Map 实例指定掩模的路径，各图层将只显示路径范围内图像， 3D 视图下有效。 格式为一个经纬度的一维、二维或三维数组。
[相关示例] 如：' https://lbs.amap.com/api/jsapi-v2/example/3d/mask '
一维数组时代表一个普通多边形路径，如:
[[lng1,lat1], [lng2,lat2], [lng3,lat3]]. 二维数组时代表一个带洞的多边形路径，如:
[[[lng4,lat4], [lng5,lat5], [lng6,lat6]], [[lng7,lat7], [lng8,lat8], [lng9,lat9]]]. 三维数组时代表多个多边形路径，如:
[ [[lng1,lat1], [lng2,lat2], [lng3,lat3]], [ [[lng4,lat4], [lng5,lat5], [lng6,lat6]], [[lng7,lat7], [lng8,lat8], [lng9,lat9]] ] ].
opts.WebGLParams
类型：Object
default {}	额外配置的 WebGL 参数 eg: preserveDrawingBuffer
示例代码：
var map = new AMap.Map('map', {
  viewMode: '3D',
  center: [116.397083, 39.874531],
  layers: [
             AMap.createDefaultLayer()
          ],  // layers 字段为空或者不赋值将会自动创建默认底图。
  zoom: 12,
})
成员函数：
resize()
重新计算容器大小

center(center, immediately, duration)
参数说明：
center (any)
immediately (any = false)
duration (any)
setCenter(center, immediately, duration?)
设置中心点
相关示例

参数说明：
center (([number, number] | LngLat)) 中心点经纬度
immediately (Boolean = false) 是否立即过渡到目标位置
duration (Number?) 如果使用动画过度，动画过度的时长控制，单位 ms，默认值是内部自动计算的一个动态值。
zoom(zoom, center, immediately, duration)
参数说明：
zoom (any)
center (any)
immediately (any = false)
duration (any)
setZoomAndCenter(zoom, center, immediately, duration?)
地图缩放至指定级别并以指定点为地图显示中心点
相关示例

参数说明：
zoom (Number) 缩放等级
center ((LngLat | [number, number])) 地图中心点位置
immediately (Boolean = false) 是否立即过渡到目位置
duration (Number?) 如果使用动画过度，动画过度的时长控制，单位 ms，默认值是内部自动计算的一个动态值。
getBounds()
获取当前地图视图范围/可视区域。
相关示例

返回值：
Bounds: 边界经纬度
getCenter()
获取地图中心点经纬度坐标值。
相关示例

返回值：
LngLat: 地图中心点经纬度
setZoom(zoom, immediately, duration?)
设置地图显示的缩放级别，参数 zoom 可设范围：[2, 30]

参数说明：
zoom (Number) 地图缩放等级
immediately (Boolean = false) 是否立即过渡到目标位置
duration (Number?) 如果使用动画过度，动画过度的时长控制，单位 ms，默认值是内部自动计算的一个动态值。
getContainer()
返回地图对象的容器

返回值：
HTMLElement: 地图 DOM 容器
getSize()
获取地图容器尺寸，单位：像素

返回值：
Size: 地图容器尺寸
getZoom(digits)
获取当前地图缩放级别, 默认取值范围为[2, 20]

参数说明：
digits (Number) zoom级别的小数位精度，缺省为2
返回值：
Number: 地图缩放等级
zoomIn()
地图放大一级显示

addLayer(layer)
添加图层到地图上

参数说明：
layer (Layer) 地图图层对象
zoomOut()
地图缩小一级显示

getPitch()
获取地图当前俯仰角

返回值：
Number: 角度
setPitch(Pitch, immediately, duration?)
设置地图俯仰角

参数说明：
Pitch (Number) 角度
immediately (Boolean = false) 是否立即过渡到目标位置
duration (Number?) 如果使用动画过度，动画过度的时长控制，单位 ms，默认值是内部自动计算的一个动态值。
getRotation()
获取地图顺时针旋转角度, 范围: [0 ~ 360]

返回值：
Number: 旋转角度值
setRotation(rotation, immediately, duration?)
设置地图顺时针旋转角度, 旋转原点为地图容器中心点, 取值范围: 任意数字

参数说明：
rotation (Number) 旋转角度
immediately (Boolean = false) 是否立即过渡到目标位置
duration (Number?) 动画过度的时长控制，单位 ms，默认值是内部自动计算的一个动态值。
removeLayer(layer)
从地图上移除图层

参数说明：
layer (Layer) 地图图层
setBounds(bounds, immediately, avoid)
指定当前地图显示范围，参数 bounds 为指定的范围

参数说明：
bounds ((Array<number> | Bounds)) 经纬度范围
immediately (boolean = false) 立即缩放到指定位置
avoid (Array<number> = [0,0,0,0]) 距离边框的内边距，顺序：上、下、左、右
panTo(lnglat, duration?)
地图中心点平移至指定点位置

参数说明：
lnglat (([number, number] | LngLat))
duration (Number?) 动画过度的时长控制，单位 ms，默认值是内部自动计算的一个动态值。
setLayers(layers)
将多个图层一次替代地图上原有图层，会移除地图原有图层

参数说明：
layers (Array<Layer>) 地图图层数组
getLayers()
获取地图图层数组，数组为一个或多个图层

返回值：
Array<Layer>: 地图图层数组
panBy(x, y, duration?)
以像素为单位, 沿 x 方向和 y 方向移动地图, x 向右为正, y 向下为正

参数说明：
x (Number) 横轴方向
y (Number) 纵轴方向
duration (Number?) 如果使用动画过度，动画过度的时长控制，单位 ms，默认值是内部自动计算的一个动态值。
getStatus()
获取当前地图状态信息，包括是否可鼠标拖拽移动地图、地图是否可缩放、地图是否可旋转（rotateEnable）、 是否可双击放大地图、是否可以通过键盘控制地图旋转（keyboardEnable）等

返回值：
object: 地图状态信息映射集合
setStatus(status)
设置当前地图显示状态，包括是否可鼠标拖拽移动地图、地图是否可缩放、地图是否可旋转（rotateEnable）、 是否可双击放大地图、是否可以通过键盘控制地图旋转（keyboardEnable）等， 相关示例

参数说明：
status (object) 地图状态值映射集合
add(features)
添加覆盖物/图层。参数为单个覆盖物/图层，或覆盖物/图层的数组。

参数说明：
features ((VectorOverlay | Array<any>)) 覆盖物对象或者数组
getDefaultCursor()
获取地图默认鼠标指针样式

返回值：
string: 地图鼠标指针样式
setDefaultCursor(cursor)
设置地图默认鼠标指针样式

参数说明：
cursor (string) 设置鼠标指针默认样式，参数cursor应符合CSS的cursor属性规范。可为CSS标注中的光标样式， 如：setCursor(“pointer”)等；或者自定义的光标样式， 如：setCursor("url(' https://lbs.amap.com/webapi/static/Images//0.png' ),pointer")
remove(features)
删除覆盖物/图层。参数为单个覆盖物/图层，或覆盖物/图层的数组。

参数说明：
features ((Overlay | Layer | Array<(Overlay | Layer)>)) 覆盖物对象或者数组
destroy()
注销地图对象，并清空地图容器

lngLatToCoords(lnglat)
经纬度转莫卡托坐标（单位：米）

参数说明：
lnglat (([number, number] | LngLat)) 经纬度
返回值：
any: 莫卡托坐标（单位：米）
coordsToLngLat(coords)
莫卡托坐标（单位：米）转经纬度

参数说明：
coords (([number, number])) 莫卡托坐标（单位：米）
返回值：
any: 经纬度
getLimitBounds()
获取Map的限制区域

lngLatToContainer(lnglat)
地图经纬度坐标转为地图容器像素坐标
相关示例

参数说明：
lnglat ((Array<number> | LngLat)) 经纬度
返回值：
Pixel: 容器像素坐标
setLimitBounds()
设置 Map 的限制区域，设定区域限制后，传入参数为限制的 Bounds。地图仅在区域内可拖拽 相关示例

clearLimitBounds()
清除 Map 的限制区域

getAltitude(lnglat)
获取当前位置的海拔高度并返回 ：altitude 空间高度 (注意：此方法适用于 JSAPI v2.1Beta 及以上版本)。

参数说明：
lnglat ((Array<number> | LngLat)) lnglat 经纬度
返回值：
number: 海拔高度
getZooms()
获取地图缩放等级范围

返回值：
[number, number]: zooms
setZooms(zooms)
设置地图缩放等级范围

参数说明：
zooms ([number, number])
containerToLngLat(pixel)
地图容器坐标转换成经纬度
相关示例

参数说明：
pixel ((Array<number> | Pixel)) 容器像素坐标
返回值：
LngLat: 转换成功的经纬度
coordToContainer(coord)
莫卡托（单位：米）转成地图容器坐标

参数说明：
coord (Array<Number>) 莫卡托坐标（单位：米）
返回值：
Array<Number>: 容器像素坐标
containerToCoord(pixel)
地图容器坐标转成莫卡托坐标（单位：米）。3D视图下天空范围返回null，如果开启高程的时候同时返回高度

参数说明：
pixel ((Array<Number> | Pixel)) 容器像素坐标
返回值：
Array<Number>: 莫卡托坐标（单位：米）
getAltitudeByContainer(pixel)
参数说明：
pixel ((Array<Number> | Pixel)) 容器像素坐标
返回值：
(Number | number): 海拔高度（单位：米）
pixelToLngLat(pixel, zoom?)
平面地图像素坐标转换为地图经纬度坐标

参数说明：
pixel ((Array<number> | Pixel)) 像素坐标
zoom (Number?) 某个地图级别
返回值：
LngLat:
lngLatToPixel(lnglat, zoom?)
经纬度坐标转换成平面地图像素坐标

参数说明：
lnglat ((Array<number> | LngLat)) 经纬度
zoom (Number?) 某个地图级别，默认是地图当前级别
返回值：
Pixel: 转换后的平面像素坐标
getResolution()
获取指定位置的地图分辨率，单位：米/像素。 参数point有指定值时，返回指定点地图分辨率，point缺省时，默认返回当前地图中心点位置的分辨率

返回值：
Number: 分辨率
getScale(dpi)
获取当前地图比例尺。表示当前屏幕距离一米代表实际距离多少米

参数说明：
dpi (Number)
返回值：
Number: 比例尺的值
getCity(getCityCallBack, lnglat)
获取地图中心点所在区域，回调函数返回对象属性分别对应为{省，市，区/县}
相关示例

参数说明：
getCityCallBack (Function) 查询成功的回调函数
lnglat (Array<Number>) 查询的经纬度
setCity(cityName)
按照行政区名称或adcode来设置地图显示的中心点。
行政区名称支持中国、省、市、区/县名称，如遇重名的情况，会按城市编码表顺序返回第一个。adcode请在城市编码表中查询。
建议不要同时使用center/setCenter()和setCity()，如一起使用程序将以setCity()作为最后结果。
相关示例

参数说明：
cityName (String) 城市名称
setFitView(overlays, immediately, avoid, maxZoom)
根据地图上添加的覆盖物分布情况，自动缩放地图到合适的视野级别，参数均可缺省。
overlayList为覆盖物数组，缺省时为当前地图上添加的所有覆盖物图层，
immediately代表是否需要动画过程，avoid代表上下左右的像素避让宽度，maxZoom代表fitView之后的最大级
相关示例

参数说明：
overlays (Array<Overlay>) 覆盖物
immediately (Boolean = false) 是否立即过渡
avoid (Array<Number> = [60,60,60,60]) 四周边距，上、下、左、右
maxZoom (Number = zooms[1]) 最大 zoom 级别
返回值：
Bounds: bounds 新的地图视口范围
示例代码：
var map = new AMap.Map({
    zoom: 10,
});
var marker = new AMap.Marker({
    map: map,
    position: [112, 30],
    icon: "https://webapi.amap.com/images/car.png",
    offset: new AMap.Pixel(-26, -13),
});
var marker1 = new AMap.Marker({
    map: map,
    position: [110, 31],
    icon: "https://webapi.amap.com/images/car.png",
    offset: new AMap.Pixel(-26, -13),
});
map.setFitView(
    [marker, marker1],  // 覆盖物数组
    false,  // 动画过渡到制定位置
    [60, 60, 60, 60],  // 周围边距，上、下、左、右
    10,  // 最大 zoom 级别
);
getFitZoomAndCenterByOverlays(overlays, avoid, maxZoom)
根据 overlays 计算出合适的中心点和 zoom 级别

参数说明：
overlays (Array<Overlay>) 覆盖物
avoid (Array<Number> = [0,0,0,0]) 四周边距，上、下、左、右
maxZoom (Number = CoreMap.defaultZooms[1]) 最大 zoom 级别
返回值：
[number, LngLat]: zoom 级别和中心点经纬度
getFitZoomAndCenterByBounds(bounds, avoid, maxZoom)
根据 bounds 计算出合适的中心点和 zoom 级别

参数说明：
bounds ((Array<number> | Bounds)) 需要计算的范围
avoid (Array<Number> = [0,0,0,0]) 四周边距，上、下、左、右
maxZoom (Number = 20) 最大 zoom 级别
返回值：
[number, LngLat]: zoom 级别和中心点经纬度
addControl(control)
添加控件。参数可以是插件列表中的任何插件对象，如：ToolBar、OverView、Scale等
相关示例

参数说明：
control (Control) 控件对象
removeControl(control)
移除地图上的指定控件
相关示例

参数说明：
control (Control) 控件对象
setMapStyle(value)
设置地图的显示样式，目前支持两种地图样式：
第一种：自定义地图样式，如 "amap://styles/d6bf8c1d69cea9f5c696185ad4ac4c86"
可前往地图自定义平台定制自己的个性地图样式；
第二种：官方样式模版,如 "amap://styles/grey"。
其他模版样式及自定义地图的使用说明见 开发指南
相关示例

参数说明：
value (String)
getMapStyle()
getAllOverlays(type?)
返回添加的覆盖物对象，可选类型包括marker、circle、polyline、polygon；
Type可缺省，缺省时返回所有覆盖物（marker、circle、polyline、polygon）。
返回结果不包含官方覆盖物等，比如定位marker，周边搜索圆等
相关示例

参数说明：
type (String?) 可选，覆盖物类型
返回值：
Array<Overlay>: 覆盖物数组
clearMap()
删除地图上所有的覆盖物

clearInfoWindow()
清除地图上的信息窗体。

getFeatures()
获取地图显示元素种类

返回值：
Array<String>: 返回 features 的集合，可能有 bg（地图背景）、point（兴趣点）、 road（道路）、building（建筑物）
setFeatures(features)
设置地图上显示的元素种类，支持bg（地图背景）、point（兴趣点）、
road（道路）、building（建筑物）
相关示例

参数说明：
features (Array<string>) 类型数组
示例代码：
map.setFeatures(['bg', 'road']);
getMapApprovalNumber()
返回值：
string:
setMask(maskPath)
参数说明：
maskPath (Array<Array<number>>) 掩模范围
setLabelRejectMask(reject)
设置文字是否拒绝掩模，true：不进行掩模，false：掩模

参数说明：
reject (boolean) 是否拒绝掩模
事件：
resize
地图容器尺寸改变事件

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('resize', () => {
 console.log('触发地图容器尺寸改变事件');
});
complete
地图资源加载完成后触发事件

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('complete', () => {
 console.log('触发地图资源加载完成事件');
});
click
鼠标左键单击事件

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('click', () => {
 console.log('触发地图鼠标左键单击事件');
});
dblclick
鼠标左键双击事件

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('dblclick', () => {
 console.log('触发地图鼠标左键双击事件');
});
mapmove
地图平移时触发事件

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('mapmove', () => {
 console.log('触发地图平移时的事件');
});
hotspotclick
鼠标点击热点时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('hotspotclick', () => {
 console.log('触发地图鼠标点击热点时的事件');
});
hotspotover
鼠标滑过热点时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('hotspotover', () => {
 console.log('触发地图鼠标滑过热点时的事件');
});
hotspotout
鼠标移出热点时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('hotspotout', () => {
 console.log('触发地图鼠标移出热点时的事件');
});
movestart
地图平移开始时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('movestart', () => {
 console.log('触发地图平移开始时的事件');
});
moveend
地图移动结束后触发，包括平移，以及中心点变化的缩放。如地图有拖拽缓动效果，则在缓动结束后触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('movestart', () => {
 console.log('触发地图移动结束后的事件');
});
zoomchange
地图缩放级别更改后触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('movestart', () => {
 console.log('触发地图级别更改后的事件');
});
zoomstart
缩放开始时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('zoomstart', () => {
 console.log('触发地图缩放开始时的事件');
});
zoomend
缩放结束时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('zoomend', () => {
 console.log('触发地图缩放结束时的事件');
});
rotatechange
地图旋转 rotation 更改后触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('rotatechange', () => {
 console.log('触发地图旋转 rotation 更改后时的事件');
});
rotatestart
地图旋转 rotation 开始时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('rotatestart', () => {
 console.log('触发地图旋转 rotation 开始时的事件');
});
rotateend
地图旋转 rotation 结束时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('rotateend', () => {
 console.log('触发地图旋转 rotation 结束时的事件');
});
mousemove
鼠标在地图上移动时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('mousemove', () => {
 console.log('触发鼠标在地图上移动时的事件');
});
mousewheel
鼠标滚轮开始缩放地图时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('mousewheel', () => {
 console.log('触发地图鼠标滚轮开始缩放时的事件');
});
mouseover
鼠标移入地图容器内时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('mouseover', () => {
 console.log('触发鼠标移入地图容器内时的事件');
});
mouseout
鼠标移出地图容器时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('mouseout', () => {
 console.log('触发鼠标移出地图容器时的事件');
});
mouseup
鼠标在地图上单击抬起时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('mouseup', () => {
 console.log('触发鼠标在地图上单击抬起时的事件');
});
mousedown
鼠标在地图上单击按下时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('mousedown', () => {
 console.log('触发鼠标在地图上单击按下时的事件');
});
rightclick
鼠标右键单击事件

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('rightclick', () => {
 console.log('触发地图鼠标右键单击时的事件');
});
dragstart
开始拖拽地图时触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('dragstart', () => {
 console.log('触发开始拖拽地图时的事件');
});
dragging
拖拽地图过程中触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('dragging', () => {
 console.log('触发拖拽地图过程中的事件');
});
dragend
停止拖拽地图时触发。如地图有拖拽缓动效果，则在拽停止，缓动开始前触发

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('dragend', () => {
 console.log('触发停止拖拽地图时的事件');
});
touchstart
触摸开始时触发事件，仅适用移动设备

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('touchstart', () => {
 console.log('触发移动设备触摸开始时的事件');
});
touchmove
拖拽地图过程中触发，仅适用移动设备

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('touchmove', () => {
 console.log('触发移动设备拖拽地图过程中时的事件');
});
touchend
触摸结束时触发事件，仅适用移动设备

示例代码：
// 初始化地图
const map = new AMap.Map('container',{});
map.on('touchend', () => {
 console.log('触发移动设备触摸结束时的事件');
});
MapsEvent
此对象用于表示地图、覆盖物、叠加层上的各种鼠标事件返回，包含以下字段：

Type: Object

属性说明：
lnglat (LngLat) : 发生事件时光标所在处的经纬度坐标。
pixel (Pixel) : 发生事件时光标所在处的像素坐标。
type (string) : 事件类型。
target (Object) : 发生事件的目标对象，不同类型返回target不同。例如，事件对象是Marker，则target表示目标对象为Marker，事件对象是其他，则随之改变。
高德官方图层
由高德官方提供数据或图像的地图图层

AMap.TileLayer
切片图层类，该类为基础类。
相关示例

new AMap.TileLayer(opts: TileLayerOptions)
参数说明：
opts (TileLayerOptions)
属性	描述
opts.tileUrl
类型：String	切片取图地址 如：' https://abc{0,1,2,3}.amap.com/tile?x=[x]&y=[y]&z=[z] ' [x] 、 [y] 、 [z] 分别替代切片的xyz。
opts.zooms
类型：[Number, Number]
default [2,30]	支持的缩放级别范围，默认范围 [2-30]
opts.dataZooms
类型：[Number, Number]
default [2,30]	数据支持的缩放级别范围，默认范围 [2-30]
opts.opacity
类型：Number
default 1	透明度，默认 1
opts.visible
类型：Boolean
default true	是否显示，默认 true
opts.zIndex
类型：Number
default 4	图层叠加的顺序值，1 表示最底层。默认 zIndex：4
opts.tileSize
类型：Number
default 256	切片大小，取值： 256，表示切片大小为256 256， 128，表示切片大小为128 128， 64，表示切片大小为64*64。默认值为256
成员函数：
setTileUrl(url)
设置图层的取图地址

参数说明：
url (String) 瓦片图地址
reload()
重新加载图层资源，重新渲染

getOptions()
获取图层参数信息

返回值：
Object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-30]

返回值：
[Number, Number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([Number, Number]) 缩放范围
show()
设置图层可见

hide()
设置图层隐藏

事件：
complete
图块切片加载完成事件

AMap.TileLayer.Traffic
实时交通图层类，继承自TileLayer。
相关示例

new AMap.TileLayer.Traffic(opts: TrafficLayerOptions)
参数说明：
opts (TrafficLayerOptions)
属性	描述
opts.autoRefresh
类型：Boolean	是否自动更新数据，默认开启
opts.interval
类型：Number	自动更新数据的间隔毫秒数，默认 180ms
opts.zooms
类型：[Number, Number]
default [2,30]	支持的缩放级别范围，默认范围 [2-30]
opts.opacity
类型：Number
default 1	透明度，默认 1
opts.visible
类型：Boolean
default true	是否显示，默认 true
opts.zIndex
类型：Number
default 4	图层叠加的顺序值，1 表示最底层。默认 zIndex：4
opts.tileSize
类型：Number
default 256	切片大小，取值： 256，表示切片大小为256 256， 128，表示切片大小为128 128， 64，表示切片大小为64*64。默认值为256
成员函数：
stopFresh()
停止自动更新数据

getOptions()
获取图层参数信息

返回值：
Object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-30]

返回值：
[Number, Number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([Number, Number]) 缩放范围
show()
设置图层可见

hide()
设置图层隐藏

事件：
complete
图块切片加载完成事件

AMap.TileLayer.Satellite
卫星图层类，继承自 TileLayer。 相关示例

new AMap.TileLayer.Satellite(opts: SatelliteLayerOptions)
参数说明：
opts (SatelliteLayerOptions)
属性	描述
opts.zooms
类型：[Number, Number]
default [2,30]	支持的缩放级别范围，默认范围 [2-30]
opts.opacity
类型：Number
default 1	透明度，默认 1
opts.visible
类型：Boolean
default true	是否显示，默认 true
opts.zIndex
类型：Number
default 4	图层叠加的顺序值，1 表示最底层。默认 zIndex：4
opts.tileSize
类型：Number
default 256	切片大小，取值：
256，表示切片大小为256 256，
128，表示切片大小为128 128，
64，表示切片大小为64*64。默认值为256
成员函数：
getOptions()
获取图层参数信息

返回值：
Object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-30]

返回值：
[Number, Number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([Number, Number]) 缩放范围
show()
设置图层可见

hide()
设置图层隐藏

destroy()
销毁图层

事件：
complete
图块切片加载完成事件

AMap.TileLayer.RoadNet
路网图层，展示道路信息
相关示例

new AMap.TileLayer.RoadNet(opts: RoadnetLayerOptions)
参数说明：
opts (RoadnetLayerOptions)
属性	描述
opts.zooms
类型：[Number, Number]
default [2,30]	支持的缩放级别范围，默认范围 [2-30]
opts.opacity
类型：Number
default 1	透明度，默认 1
opts.visible
类型：Boolean
default true	是否显示，默认 true
opts.zIndex
类型：Number
default 4	图层叠加的顺序值，1 表示最底层。默认 zIndex：4
opts.tileSize
类型：Number
default 256	切片大小，取值：
256，表示切片大小为256 256，
128，表示切片大小为128 128，
64，表示切片大小为64*64。默认值为256
成员函数：
show()
设置图层可见

hide()
设置图层隐藏

getOptions()
获取图层参数信息

返回值：
Object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-30]

返回值：
[Number, Number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([Number, Number]) 缩放范围
destroy()
销毁图层

事件：
complete
图块切片加载完成事件

AMap.Buildings
建筑楼块 3D 图层
相关示例

new AMap.Buildings(opts: BuildingLayerOpts)
参数说明：
opts (BuildingLayerOpts)
属性	描述
opts.wallColor
类型：(Array<String> | String)	楼块侧面颜色，支持 rgba、rgb、十六进制等
opts.roofColor
类型：(Array<String> | String)	楼块顶面颜色，支持 rgba、rgb、十六进制等
opts.heightFactor
类型：Number	楼块的高度系数因子，默认为 1，也就是正常高度
opts.styleOpts
类型：BuildingStyleOptions	楼块的围栏和样式设置
opts.zooms
类型：[Number, Number]
default [2,20]	图层缩放等级范围，默认 [2, 20]
opts.opacity
类型：Number
default 1	图层透明度，默认为 1
opts.visible
类型：Boolean
default true	图层是否可见，默认为 true
opts.zIndex
类型：Number
default 11	图层的层级，默认为 11
示例代码：
var buildingLayer = new AMap.Buildings({
    heightFactor: 1,
    wallColor: [255, 0, 0, 1],
    roofColor: 'rgba(0,0,255,0.5)',
});
map.addLayer(buildingLayer);
成员函数：
setStyle(styleOpts)
设置楼块图层样式
相关示例

参数说明：
styleOpts (BuildingStyleOptions) 样式
属性	描述
styleOpts.hideWithoutStyle
类型：Boolean	是否隐藏围栏之外的楼块
styleOpts.areas
类型：Array<Area>	围栏信息数组
styleOpts.areas.rejectTexture
类型：Boolean	是否隐藏围栏之外的楼块
styleOpts.areas.visible
类型：Boolean	围栏信息数组
styleOpts.areas.path
类型：Array<Number>	围栏经纬度列表
styleOpts.areas.color1
类型：(Array<String> | String)	围栏区域内楼块顶面颜色，支持 rgba、rgb、十六进制等
styleOpts.areas.color2
类型：(Array<String> | String)	围栏区域内楼块侧面颜色，支持 rgba、rgb、十六进制等
示例代码：
var options = {
    hideWithoutStyle:false,//是否隐藏设定区域外的楼块
    areas:[{ //围栏1
          //visible:false,//是否可见
          rejectTexture:true,//是否屏蔽自定义地图的纹理
          color1: 'ffffff00',//楼顶颜色
          color2: 'ffffcc00',//楼面颜色
          path: [[116.473606,39.995997],[116.473005,39.995482],[116.474179,39.996516],[116.473606,39.995997]]
   }, { //围栏2
          color1: 'ff99ff00',
          color2: 'ff999900',
          path: [[116.474609,39.993478],[116.474489,39.993495],[116.47469,39.99348],[116.474609,39.993478]]
  }]
};
buildingLayer.setStyle(options); //此配色优先级高于自定义mapStyle
getOptions()
获取图层参数信息

返回值：
object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-20]

返回值：
[Number, Number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([Number, Number]) 缩放范围
show()
设置图层可见

hide()
设置图层隐藏

destroy()
销毁图层

AMap.DistrictLayer
new AMap.DistrictLayer(opts: DistrictLayerOptions)
参数说明：
opts (DistrictLayerOptions) 图层初始化参数
属性	描述
opts.adcode
类型：String	行政区的编码 adcode与省市行政区对照表
opts.SOC
类型：String
default 'CHN'	设定显示的国家 SOC 国家代码、名称、Bounds对照表下载
opts.depth
类型：Number
default 0	设定数据的层级深度，depth为0的时候只显示国家面，depth为1的时候显示省级， 当国家为中国时设置depth为2的可以显示市一级
opts.zIndex
类型：Number
default 80	图层的层级，默认为 80
opts.opacity
类型：Number
default 1	图层透明度，默认为 1
opts.visible
类型：Boolean
default true	图层是否可见，默认为 true
opts.zooms
类型：[number, number]
default [2,20]	图层缩放等级范围，默认 [2, 20]
opts.styles
类型：DistrictLayerStyle	为简易行政区图设定各面的填充颜色和描边颜色。 styles各字段的值可以是颜色值，也可以是一个返回颜色值* 的回调函数function。支持的颜色格式有：
1. #RRGGBB，如：'#FFFFFF'
2. rgba()，如：'rgba(255,255,255,1)'
3. rgb()，如：'rgb(255,255,255)'
4. [r,g,b,a] ，如： [1,1,1,1]
5. ''，代表不赋予颜色
opts.styles.stroke-width
类型：(Number | Function)
default 1	描边线宽
opts.styles.zIndex
类型：(Number | Function)
default 0	图层中每个区域层级，数值越大，层级越高
opts.styles.coastline-stroke
类型：(Array<String> | String | Function)
default [0.18,0.63,0.94,1]	海岸线颜色
opts.styles.nation-stroke
类型：(Array<String> | String | Function)
default [0.35,0.35,0.35,1]	国境线颜色
opts.styles.province-stroke
类型：(Array<String> | String | Function)
default [0.5,0.5,0.5,1]	省界颜色
opts.styles.city-stroke
类型：(Array<String> | String | Function)
default [0.7,0.7,0.7,1]	城市界颜色
opts.styles.county-stroke
类型：(Array<String> | String | Function)
default [0.85,0.85,0.85,1]	区/县界颜色
opts.styles.fill
类型：(Array<String> | String | Function)
default [1,1,1,1]	填充色
静态方法：
World
世界级行政区 相关示例

Country
国家级行政区 相关示例

Province
省份级行政区,只支持中国区域 相关示例

成员函数：
setSOC(SOC)
设定显示的国家 SOC

参数说明：
SOC (String) SOC
setDistricts(adcodes)
设置 adcodes 值

参数说明：
adcodes ((Array<any> | string | number)) adcodes
getDistricts()
获取 adcodes

返回值：
any: adcodes
setStyles(styles)
设置样式信息

参数说明：
styles (DistrictLayerStyle) 样式信息
getStyles()
获取样式信息

返回值：
DistrictLayerStyle: 样式
setAdcode(adcodes)
设置 adcodes 值

参数说明：
adcodes ((Array<any> | string | number)) adcodes
getOptions()
获取图层参数信息

返回值：
object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-20]

返回值：
[number, number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([number, number]) 缩放范围
show()
设置图层可见

hide()
设置图层隐藏

AMap.IndoorMap
室内图层，用于在适当级别展示室内地图，并提供显示商铺tip、切换楼层等功能。

new AMap.IndoorMap(opts: IndoorMapOptions)
参数说明：
opts (IndoorMapOptions)
属性	描述
opts.zIndex
类型：Number	室内图层叠加的顺序值
opts.opacity
类型：Number	图层的透明度，取值范围 [0,1]
opts.cursor
类型：String	指定鼠标悬停到店铺面时的鼠标样式
opts.hideFloorBar
类型：Boolean	是否隐藏楼层切换控件，默认值：false
示例代码：
用法一：创建独立的室内图层
var indoorMap = new AMap.IndoorMap({
 zIndex: 1000, // 设置室内图层叠加顺序
 opacity: 1, // 设置室内图层透明度
});
var map = new AMap.Map('mapDiv', {
 showIndoorMap: false, //隐藏地图默认的室内地图图层
 layers: [indoorMap, AMap.createDefaultLayer()] // 添加室内等图层
});
indoorMap.showIndoorMap('B0FFFAB6J2'); // 显示指定 POI 室内信息
用法二：调用默认室内图层
var map = new AMap.Map('mapDiv',{
 showIndoorMap: true, //显示地图默认的室内地图图层
});
map.on('indoor_create',function(){
 map.indoorMap.showIndoorMap('B000A8VT15',4); // 显示指定 POI 室内信息
})
成员函数：
showIndoorMap(indoorid, floor, shopid)
显示指定 POI 的室内地图

参数说明：
indoorid (String) 建筑物 POIID (必填) 如何获取
floor (Number) 楼层
shopid (String) 商铺 ID
showFloor(floor)
显示指定的楼层

参数说明：
floor (number) 楼层
show()
显示室内地图

hide()
隐藏室内地图

setMap(map)
设置显示室内图层的地图对象

参数说明：
map (Map)
setzIndex(index)
设置室内地图的显示顺序

参数说明：
index (number)
showFloorBar()
显示楼层切换控件

hideFloorBar()
隐藏楼层切换控件

setOpacity(opacity)
设置室内图层透明度

参数说明：
opacity (number)
getOpacity()
获取室内图层透明度

返回值：
number:
showLabels()
显示室内图层上的标注

hideLabels()
隐藏室内图层上的标注

getSelectedBuildingId()
获取被选中室内的 POIID

getSelectedBuilding()
获取被选中的室内地图的一些基本信息，包含名称、当前楼层、所有楼层信息、POIID等

行业标准图层
符合 OGC 标准或者行业通行规范的的图层类型

AMap.TileLayer.WMS
用于加载OGC标准的WMS地图服务的一种图层类，仅支持EPSG3857坐标系统的WMS图层。
查看 WMS的OGC标准。

new AMap.TileLayer.WMS(opts: WMSLayerOptions)
参数说明：
opts (WMSLayerOptions) 默认图层参数
属性	描述
opts.url
类型：String	wmts服务的url地址，如：' https://services.arcgisonline.com/arcgis/rest/services/'+ 'Demographics/USA_Population_Density/MapServer/WMTS/'
opts.blend
类型：Boolean	地图级别切换时，不同级别的图片是否进行混合，如图层的图像内容为部分透明请设置为false
opts.params
类型：Object	OGC标准的WMS地图服务的GetMap接口的参数，包括VERSION、LAYERS、STYLES、FORMAT、TRANSPARENT等，
CRS、BBOX、REQUEST、WIDTH、HEIGHT等参数请勿添加，例如：
{
LAYERS: 'topp:states',
VERSION:'1.3.0',
FORMAT:'image/png'
}
opts.zooms
类型：[Number, Number]
default [2,30]	支持的缩放级别范围，默认范围 [2-30]
opts.opacity
类型：Number
default 1	透明度，默认 1
opts.visible
类型：Boolean
default true	是否显示，默认 true
opts.zIndex
类型：Number
default 4	图层叠加的顺序值，1 表示最底层。默认 zIndex：4
成员函数：
setParams(params)
设置OGC标准的WMS getMap接口的参数，包括VERSION、LAYERS、STYLES、FORMAT、TRANSPARENT等

参数说明：
params (Object) 参数集合，{VERSION: '1.0', ...}
getParams()
获取 OGC 标准的 WMS getMap 接口的参数

setUrl(url)
设置 WMS 服务地址

参数说明：
url (String) 服务地址
setUrl(url)
设置 WMS 服务地址

参数说明：
url (String) 服务地址
getOptions()
获取图层参数信息

返回值：
Object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-30]

返回值：
[Number, Number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([Number, Number]) 缩放范围
show()
设置图层可见

hide()
设置图层隐藏

事件：
complete
图块切片加载完成事件

AMap.TileLayer.WMTS
用于加载 OGC 标准的 WMTS 地图服务的一种图层类，仅支持 EPSG3857 坐标系统的 WMTS 图层
查看 WMTS 标准
相关示例

new AMap.TileLayer.WMTS(opts: WMTSLayerOptions)
参数说明：
opts (WMTSLayerOptions) 默认图层参数
属性	描述
opts.url
类型：String	wms服务的url地址，如' https://ahocevar.com/geoserver/wms '
opts.blend
类型：Boolean	地图级别切换时，不同级别的图片是否进行混合，如图层的图像内容为部分透明请设置为false
opts.params
类型：Object	OGC标准的WMTS地图服务的GetTile接口的参数，包括Version、Layer、 Style、Format、Service等，TileMatrixSet、TileRow、TileCol、Request等参数请勿添加，例如：
{
Layer: '0',
Version:'1.0.0',
Format: 'image/png'
}
opts.zooms
类型：[Number, Number]
default [2,30]	支持的缩放级别范围，默认范围 [2-30]
opts.opacity
类型：Number
default 1	透明度，默认 1
opts.visible
类型：Boolean
default true	是否显示，默认 true
opts.zIndex
类型：Number
default 4	图层叠加的顺序值，1 表示最底层。默认 zIndex：4
成员函数：
setParams(params)
设置 OGC 标准的 WMTS getTile接口的参数，包括Version、Layer、Style、Format、Service等

参数说明：
params (Object) 参数集合，{VERSION: '1.0', ...}
getParams()
获取 OGC 标准的 WMTS getMap 接口的参数

getUrl()
获取 WMTS 服务地址

返回值：
String: 地址
setUrl(url)
设置 WMTS 服务地址

参数说明：
url (String) 服务地址
getOptions()
获取图层参数信息

返回值：
Object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-30]

返回值：
[Number, Number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([Number, Number]) 缩放范围
show()
设置图层可见

hide()
设置图层隐藏

事件：
complete
图块切片加载完成事件

AMap.MapboxVectorTileLayer
为了满足基于矢量瓦片块的数据可视化、矢量瓦片边界展示等开发需求，通过 AMap.MapboxVectorTileLayer 插件提供了简易矢量瓦片图层
此图层可以使用标准的 MVT 瓦片服务作为数据源。
可以配合GeoHub-数据中心发布的矢量瓦片服务。 注意：使用高德数据平台发布服务，由于服务 URL 地址是明文，建议自行做服务代理转发，防止服务 ID 和 Key 明文传输导致数据泄露。
相关示例

new AMap.MapboxVectorTileLayer(opts: MapboxVTLayerOptions)
参数说明：
opts (MapboxVTLayerOptions) 图层初始化参数
属性	描述
opts.zIndex
类型：Number
default 80	图层的层级
opts.opacity
类型：Number
default 1	图层透明度
opts.url
类型：String?	MVT 数据的链接地址
opts.visible
类型：Boolean
default true	图层是否可见
opts.zooms
类型：[number, number]
default [2,22]	图层缩放等级范围
opts.dataZooms
类型：[number, number]
default [2,18]	瓦片数据等级范围，超过范围会使用最大/最小等级的数据
opts.styles
类型：MapboxVTLayerStyle	
opts.styles.polygon
类型：PolygonStyle?	面类型的样式
opts.styles.polygon.sourceLayer
类型：String
default 'default'	使用数据中的哪个图层，默认使用 default 图层
opts.styles.polygon.color
类型：(String | Function)?	面填充颜色
opts.styles.polygon.borderWidth
类型：(Number | Function)?	描边宽度
opts.styles.polygon.dash
类型：(Array<Number> | Function)?	描边线的虚线配置，例如： [10,5,8,5]
opts.styles.polygon.borderColor
类型：(String | Function)?	描边颜色
opts.styles.polygon.injection
类型：Array<Any>?	其他属性值中对于函数形式的值，假如需要获取外部变量，要使用数组的形式传入，便于在函数内部访问外部变量。请看下面的示例。
opts.styles.polygon.visible
类型：(Boolean | Function)?	是否显示
opts.styles.line
类型：LineStyle?	线类型数据的样式
opts.styles.line.sourceLayer
类型：String
default 'default'	使用数据中的哪个图层，默认使用 default 图层
opts.styles.line.color
类型：(String | Function)?	线填充颜色
opts.styles.line.lineWidth
类型：(Number | Function)?	宽度
opts.styles.line.dash
类型：(String | Function)?	虚线配置，例如： [10,5,8,5]
opts.styles.line.injection
类型：Array<Any>?	其他属性值中对于函数形式的值，假如需要获取外部变量，要使用数组的形式传入，便于在函数内部访问外部变量。请看下面的示例。
opts.styles.line.visible
类型：(Boolean | Function)?	是否显示
opts.styles.point
类型：PointStyle?	点类型数据的样式
opts.styles.point.sourceLayer
类型：String
default 'default'	使用数据中的哪个图层，默认使用 default 图层
opts.styles.point.radius
类型：(String | Function)?	圆点的半径，单位像素
opts.styles.point.color
类型：(Number | Function)?	圆的填充颜色
opts.styles.point.borderWidth
类型：(String | Function)?	描边的宽度
opts.styles.point.borderColor
类型：(String | Function)?	描边的颜色
opts.styles.point.injection
类型：Array<Any>?	其他属性值中对于函数形式的值，假如需要获取外部变量，要使用数组的形式传入，便于在函数内部访问外部变量。请看下面的示例。
opts.styles.point.visible
类型：(Boolean | Function)?	是否显示
opts.styles.polyhedron
类型：PolyhedronStyle?	多面体类型的样式
opts.styles.polyhedron.sourceLayer
类型：String
default 'default'	使用数据中的哪个图层，默认使用 default 图层
opts.styles.polyhedron.topColor
类型：(String | Function)?	顶面颜色
opts.styles.polyhedron.sideColor
类型：(String | Function)?	侧面颜色
opts.styles.polyhedron.texture
类型：(String | Function)?	侧面纹理，优先级高于侧面颜色
opts.styles.polyhedron.injection
类型：Array<Any>?	其他属性值中对于函数形式的值，假如需要获取外部变量，要使用数组的形式传入，便于在函数内部访问外部变量。请看下面的示例。
opts.styles.polyhedron.visible
类型：(Boolean | Function)?	是否显示
示例代码：
var globalVar = ['这是', '一个', '外部', '变量'];
var mvtl = new AMap.MapboxVectorTileLayer({
     zIndex: 150,
     opacity: 1,
     // URL可以使用数据服务平台的服务，也可以使用自己发布的 MVT 数据服务
     url: 'https://restapi.amap.com/rest/lbs/geohub/tiles/mvt?z=[z]&x=[x]&y=[y]&size=512&key=您申请的key值&id=数据服务ID',
     dataZooms: [2, 18],
     zooms: [2, 20],
     tileSize: 256,
     styles: {
         point: {
             sourceLayer: 'default',
             visible: function (f, inject) {
                 // 这里的 inject 参数就是一个数组，他的值就是 injection 字段的数组值：[visis]。
                 return inject[0].indexOf('这是') > -1;
             },
             injection: [globalVar],
             radius: function (props) {
                 return Math.random() * 20 + 5;
             },
             color: 'red',
             borderWidth: 20 || function (props) {
                 return Math.random() * 5 + 2;
             },
             borderColor: 'rgba(255,255,255,1)',
         },
         polygon: {
             sourceLayer: 'default',
             color: function (props) {
                 return 'rgba(0,0,0,1)';
             },
             dash: [10, 0, 10, 0],
             borderColor: 'rgba(30,112,255,1)',
             borderWidth: 5,
         },
         line: {
             sourceLayer: 'default',
             color: 'rgba(20,140,40,1)',
             lineWidth: 5,
             dash: [10, 0, 10, 0],
         },
         polyhedron: {
             sourceLayer: 'default',
             topColor: 'rgba(230,230,230,0.9)',
             sideColor: 'rgba(240,240,240,0.9)',
         },
     }
 });
成员函数：
setStyles(styles)
设置样式信息

参数说明：
styles (MapboxVTLayerStyle) 样式信息
filterByRect(rect, type)
获取矩形范围的要素

参数说明：
rect (Polygon) 多边型，例如：[ [lng,lat] , [lng,lat] , [lng,lat] , [lng,lat] , [lng,lat] ]
type (String = "all") 想要获取的要素类型，默认选择所有：all。可选值：all、point、polygon、line
返回值：
Array<Feature>:
getStyles()
获取样式信息

返回值：
MapboxVTLayerStyle: 样式
on(type, fn, option)
图层级别监听鼠标事件 获取当前图层中鼠标位置的要素

参数说明：
type (String) 监听事件类型，目前支持 click、mousemove
fn (Function) 监听的回调函数，参数中的 features 是获取的鼠标位置的要素
option (Object) 拾取参数，featType：代表需要拾取的要素类型，参考 filterByRect() 函数中的 type；buffer：5, 代表以鼠标为中心点，范围为 5 的方形区域为鼠标拾取范围。值越大，拾取的范围越大，建议使用默认值。
hide()
设置图层隐藏

hide()
设置图层隐藏

getOptions()
获取图层参数信息

返回值：
object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-20]

返回值：
[number, number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([number, number]) 缩放范围
show()
设置图层可见

自有数据图层
用于加载展示开发者自己拥有的数据或者图像的图层类型

AMap.HeatMap
热力图，基于第三方heatmap.js实现，以特殊高亮的形式显示数据密集程度。根据密集程度的不同，图上会呈现不同的颜色，以直观的形式展现数据密度。API引用了heatmap.js最新版本v2.0，v2.0基于新的渲染模型，具有更高的渲染效率和更强的性能。支持chrome、firefox、safari、ie9及以上浏览器。

new AMap.HeatMap(map: Map, opts: HeatMapOptions)
参数说明：
map (Map) 要叠加热力图的地图对象
opts (HeatMapOptions) 热力图属性配置
属性	描述
opts.radius
类型：number	热力图中单个点的半径，默认：30，单位：pixel
opts.gradient
类型：object	热力图的渐变区间，热力图按照设置的颜色及间隔显示热力图，例{0.4:'rgb(0, 255, 255)',0.85:'rgb(100, 0, 255)',},其中 key 表示间隔位置，取值范围： [0,1] ，value 为颜色值。默认：heatmap.js标准配色方案
opts.opacity
类型：array	热力图透明度区间数组，取值范围 [0,1] ，0表示完全透明，1表示不透明，默认： [0,1]
opts.zooms
类型：array	支持的缩放级别范围，取值范围 [3-20] ，默认： [3,20]
opts.visible
类型：boolean	是否可见
opts.zIndex
类型：number	热力图层在地图上的叠加顺序，默认 130
opts.3d
类型：HeatMap3DOptions	3D热力图属性
opts.3d.heightScale
类型：number	高度缩放因子，表示在单位高度上的缩放比例， 默认为 1
opts.3d.heightBezier
类型：array	影响高度平滑度的贝塞尔曲线因子，默认 [0.5, 0, 1, 0.5] ,
opts.3d.gridSize
类型：number	取样精度，越小越平滑，越大性能越高
示例代码：
var heatmap;
var points = [
   {"lng":116.191031,"lat":39.988585,"count":10},
   {"lng":116.389275,"lat":39.925818,"count":11},
   {"lng":116.287444,"lat":39.810742,"count":12},
   {"lng":116.481707,"lat":39.940089,"count":13},
   {"lng":116.410588,"lat":39.880172,"count":14},
   {"lng":116.394816,"lat":39.91181,"count":15},
   {"lng":116.416002,"lat":39.952917,"count":16},
];
// 加载热力图插件
map.plugin(["AMap.HeatMap"],function(){
   // 在地图对象叠加热力图
   heatmap = new AMap.Heatmap({map:map});
   // 设置热力图数据集
   heatmap.setDataSet({data:points,max:100});
});
成员函数：
getMap()
获取热力图叠加地图对象

返回值：
Map:
setMap(map)
设置热力图要叠加的地图实例，也可以在Map中的layers属性中设置为默认显示的图层

参数说明：
map (Map) 地图实例
getOptions()
获取热力图的属性信息

返回值：
HeatMapOptions:
setOptions(options)
设置热力图属性，请参考 HeatMapOptions 列表中的说明

参数说明：
options (HeatMapOptions) 热力图配置
getDataSet()
输出热力图的数据集，数据结构同setDataSet中的数据集

返回值：
object:
setDataSet(dataset)
设置热力图展现的数据集，dataset数据集格式为： { max: Number 权重的最大值, data: Array 坐标数据集 }， 其中max不填则取数据集count最大值 例： { max: 100, data: [{lng: 116.405285, lat: 39.904989, count: 65},{}, …] } 也可以通过url来加载数据，格式为 { data：jsonp格式数据的服务地址URL, dataParser: 数据格式转换function //当jsonp返回结果和官方结构不一致的时候，用户可以传递一个函数用来进行数据格式转换； } 例： { data:'http://abc.com/jsonp.js', dataParser:function(data){ return doSomthing(data);//返回的对象结果应该与上面例子的data字段结构相同 } }

参数说明：
dataset (object) 数据集
addDataPoint(longitude, latitude, count)
向热力图数据集中添加坐标点，count不填写时默认：1

参数说明：
longitude (string) 经度
latitude (string) 纬度
count (number) 权重
getzIndex()
获得热力图层叠加层级

返回值：
number:
setzIndex(zIndex)
设置热力图层叠加层级

参数说明：
zIndex (number) 热力图层叠加层级
show()
显示热力图

hide()
隐藏热力图

AMap.VectorLayer
new AMap.VectorLayer(opts: Object)
参数说明：
opts (Object)
属性	描述
opts.visible
类型：boolean
default true	是否显示
opts.zIndex
类型：number
default 110	是否显示
示例代码：
var layer = new AMap.VectorLayer();
map.add(layer);
var circle = new AMap.circle({center: [116.4, 39.9], radius:1000});
layer.add(circle);
成员函数：
add(vectors)
添加矢量覆盖物到集合中，不支持添加重复的覆盖物

参数说明：
vectors ((VectorOverlay | Array<VectorOverlay>)) 矢量覆盖物或矢量覆盖物数组
remove(vectors)
删除矢量覆盖物

参数说明：
vectors ((VectorOverlay | Array<VectorOverlay>)) 矢量覆盖物或矢量覆盖物数组
show()
显示图层

hide()
隐藏图层

has
判断传入的矢量覆盖物实例是否在VectorLayer这中

参数说明：
vector (VectorOverlay)
返回值：
boolean:
clear()
清空 VectorLayer

setOptions(opt)
批量修改矢量覆盖物属性(包括线样式、样色等等)

参数说明：
opt (Object)
query(geometry)
根据经纬度查询矢量覆盖物信息

参数说明：
geometry (LngLatLike)
返回值：
(VectorOverlay | undefined): vector 矢量覆盖物
getBounds()
获取 VectorOverlay 所有覆盖物显示的范围

返回值：
(Bounds | undefined): 经纬度范围值
AMap.LabelsLayer
标注层

new AMap.LabelsLayer(opts: LabelsLayerOptions)
参数说明：
opts (LabelsLayerOptions) 标注层参数
属性	描述
opts.visible
类型：boolean	标注层是否可见，默认值:true
opts.zIndex
类型：number	标注层与其它图层的叠加顺序，默认值：120
opts.opacity
类型：number	标注层透明度
opts.collision
类型：boolean	标注层内的标注是否避让
opts.allowCollision
类型：boolean	标注层内的标注是否允许其它标注层对它避让
opts.zooms
类型：[number, number]	标注层展示层级范围
示例代码：
// 创建一个标注层实例
var labelsLayer = new AMap.LabelsLayer({
     collision: true,
     opacity: 1,
     zIndex: 120,
     allowCollision: true,
});
// 将标注层添加到地图上
map.add(labelsLayer);
成员函数：
getCollision()
获取标注层是否支持内部标注避让

返回值：
any:
setCollision(collision)
设置标注层是否支持内部标注避让

参数说明：
collision (boolean) 默认值: true
getAllowCollision()
获取标注层是否允许其它层标注避让

返回值：
boolean:
setAllowCollision(allowCollision)
设置标注层是否允许其它层标注避让，开启该功能可实现地图标注对 LabelMarker 的避让，相关示例

参数说明：
allowCollision (boolean)
getOpacity()
获取标注层透明度

返回值：
number:
setOpacity(opacity)
设置标注层透明度

参数说明：
opacity (number)
getZooms()
获取标注层显示层级范围

返回值：
any:
setZooms(zooms)
设置标注层显示层级范围

参数说明：
zooms ([number])
getzIndex()
获取标注层叠加顺序

返回值：
number:
setzIndex(zIndex)
设置标注层叠加顺序

参数说明：
zIndex (number)
add(labelMarkers)
将 labelMarker 添加到标注层上

参数说明：
labelMarkers (Array<LabelMarker>) 可添加单个标注或标注数组
remove(labelMarkers)
将 labelMarker 从标注层上移除

参数说明：
labelMarkers ((LabelMarker | Array<LabelMarker>)) 可移除单个标注或标注数组
clear()
清空标注层上的标注

show()
显示标注层

hide()
隐藏标注层

getAllOverlays()
获取标注层内的所有标注对象

返回值：
Array<any>:
AMap.CustomLayer
自定义图层是一种完全由开发者来指定绘制方法的图层
相关示例

new AMap.CustomLayer(canvas: HTMLCanvasElement, opts: CustomLayerOption)
参数说明：
canvas (HTMLCanvasElement) canvas 对象
opts (CustomLayerOption) 默认图层参数
属性	描述
opts.render
类型：Function	绘制函数，初始化完成时候，开发者需要给该图层设定render方法，
该方法需要实现图层的绘制，API会在合适的时机自动调用该方法
opts.zooms
类型：[Number, Number]
default [2,20]	图层缩放等级范围，默认 [2, 20]
opts.opacity
类型：Number
default 1	图层透明度，默认为 1
opts.visible
类型：Boolean
default true	图层是否可见，默认为 true
opts.zIndex
类型：Number
default 120	图层的层级，默认为 120
opts.alwaysRender
类型：Boolean
default false	是否主动
示例代码：
var cLayer = new AMap.CustomLayer(canvas, {
     zooms: [2, 18],
     zIndex: 120,
     render() {
         // 对 canvas 进行绘制
     }
})
成员函数：
getOptions()
获取图层参数信息

返回值：
Object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
setzIndex
设置图层层级

参数说明：
zIndex (number) 图层层级
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-20]

返回值：
[Number, Number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([Number, Number]) 缩放范围
show()
设置图层可见

hide()
设置图层隐藏

setMap
添加到地图上

参数说明：
地图实例对象 (Map)
AMap.TileLayer.Flexible
灵活切片图层，继承自AMap.TileLayer，开发者可通过构造时传入给其传入createTile字段来指定每一个切片的内容
相关示例

new AMap.TileLayer.Flexible(opts: FlexibleLayerOptions)
参数说明：
opts (FlexibleLayerOptions)
属性	描述
opts.cacheSize
类型：Number	缓存瓦片数量
opts.createTile
类型：function (x, y, z, success, fail)	由开发者实现，由API自动调用，xyz分别为切片横向纵向编号和层级，切片大小 256。假设每次创建的贴片为A(支持img或者canvas)，当创建或者获取成功时请回调success(A)，不需要显示或者失败时请回调fail()
opts.zooms
类型：[Number, Number]
default [2,30]	支持的缩放级别范围，默认范围 [2-30]
opts.opacity
类型：Number
default 1	透明度，默认 1
opts.visible
类型：Boolean
default true	是否显示，默认 true
opts.zIndex
类型：Number
default 4	图层叠加的顺序值，1 表示最底层。默认 zIndex：4
opts.tileSize
类型：Number
default 256	切片大小，取值：
256，表示切片大小为256 256，
128，表示切片大小为128 128，
64，表示切片大小为64*64。默认值为256
成员函数：
getOptions()
获取图层参数信息

返回值：
Object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-30]

返回值：
[Number, Number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([Number, Number]) 缩放范围
show()
设置图层可见

hide()
设置图层隐藏

destroy()
销毁图层

事件：
complete
图块切片加载完成事件

AMap.ImageLayer
图片图层类，用户可以将一张静态图片作为图层添加在地图上，图片图层会随缩放级别而自适应缩放。
相关示例

new AMap.ImageLayer(opts: ImageLayerOptions)
参数说明：
opts (ImageLayerOptions) 传入默认参数列表
属性	描述
opts.url
类型：String	图片地址链接
opts.zooms
类型：[Number, Number]
default [2,30]	图层缩放等级范围，默认 [2, 30]
opts.bounds
类型：([Number, Number, Number, Number] | Bounds)	图片的范围大小经纬度，如果传递数字数组类型: [minlng,minlat,maxlng,maxlat]
opts.opacity
类型：Number
default 1	图层透明度，默认为 1
opts.visible
类型：Boolean
default true	图层是否可见，默认为 true
opts.zIndex
类型：Number
default 6	图层的层级，默认为 6
示例代码：
var imageLayer = new AMap.ImageLayer({
     url: 'https://amappc.cn-hangzhou.oss-pub.aliyun-inc.com/lbs/static/img/dongwuyuan.jpg',
     bounds: new AMap.Bounds(
         [116.327911, 39.939229],
         [116.342659, 39.946275]
     ),
     zooms: [10, 18]
 });
成员函数：
getImageUrl()
获取图片的地址

setImageUrl(url)
设置图片的地址

参数说明：
url (String) 图片地址
getBounds()
获取 ImageLayer显示的范围

返回值：
Bounds: 经纬度范围值
setBounds()
设置 ImageLayer显示的范围

getOptions()
获取图层参数信息

返回值：
object: 图层参数信息
getzIndex()
获取图层层级

返回值：
Number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (Number) 图层层级值
getOpacity()
获取图层透明度

返回值：
Number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (Number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-20]

返回值：
[number, number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([number, number]) 缩放范围
show()
设置图层可见

hide()
设置图层隐藏

事件：
complete
图块切片加载完成事件

AMap.CanvasLayer
Canvas图层类，用户可以将一个 Canvas 作为图层添加在地图上，Canvas图层会随缩放级别而自适应缩放。
相关示例

new AMap.CanvasLayer(opts: ImageLayerOptions)
参数说明：
opts (ImageLayerOptions) 传入默认参数列表
属性	描述
opts.canvas
类型：HTMLCanvasElement	Canvas DOM 对象
opts.zooms
类型：[Number, Number]
default [2,30]	图层缩放等级范围，默认 [2, 30]
opts.bounds
类型：([Number, Number, Number, Number] | Bounds)	canvas 的范围大小经纬度, 如果传递数字数组类型: [minlng,minlat,maxlng,maxlat]
opts.opacity
类型：Number
default 1	图层透明度，默认为 1
opts.visible
类型：Boolean
default true	图层是否可见，默认为 true
opts.zIndex
类型：Number
default 6	图层的层级，默认为 6
成员函数：
setCanvas(canvas)
修改显示的Canvas

参数说明：
canvas (HTMLCanvasElement)
getElement()
返回 Canvas 对象

返回值：
HTMLCanvasElement: canvas 对象
getBounds()
返回 canvas 范围的经纬度

返回值：
Bounds: 范围经纬度
setBounds()
设置 CanvasLayer 显示的范围

reFresh()
当canvas的内容发生改变是用于刷新图层，3D视图下调用，2D视图不需要调用

getOptions()
获取图层参数信息

返回值：
object: 图层参数信息
getzIndex()
获取图层层级

返回值：
number: zIndex 图层层级
setzIndex(zIndex)
设置图层层级，数字越大图层层级越高

参数说明：
zIndex (number) 图层层级值
getOpacity()
获取图层透明度

返回值：
number: opacity 图层透明度
setOpacity(opacity)
设置图层透明度，范围 [0 ~ 1]

参数说明：
opacity (number) 图层透明度
getZooms()
获取该图层可显示的级别范围，默认取值范围为[2-20]

返回值：
[number, number]: 缩放范围
setZooms(zooms)
获取该图层可显示的级别范围

参数说明：
zooms ([number, number]) 缩放范围
show()
设置图层可见

hide()
设置图层隐藏

AMap.GLCustomLayer
3d 自定义图层

new AMap.GLCustomLayer(opts: GlCustomLayerOptions)
参数说明：
opts (GlCustomLayerOptions)
属性	描述
opts.init
类型：Function	初始化的时候，开发者可以在这个函数参数里面获取 gl 上下文，进行一些初始化的操作。
opts.render
类型：Function	绘制函数，初始化完成时候，开发者需要给该图层设定render方法，
该方法需要实现图层的绘制，API会在合适的时机自动调用该方法
opts.zooms
类型：[Number, Number]
default [2,20]	图层缩放等级范围，默认 [2, 20]
opts.opacity
类型：Number
default 1	图层透明度，默认为 1
opts.visible
类型：Boolean
default true	图层是否可见，默认为 true
opts.zIndex
类型：Number
default 120	图层的层级，默认为 120
示例代码：
var glCustomLayer = new GLCustomLayer({
    init: function(gl){
        // init shader or sth...
    },
    render: function(gl, state){
        // render every frame
    },
});
成员函数：
getMap()
获取GLCustomLayer所属地图实例

返回值：
(Map | null):
getzIndex()
获取GLCustomLayer叠加顺序

返回值：
number:
setzIndex(zIndex)
设置GLCustomLayer叠加顺序

参数说明：
zIndex (number) 叠加值
返回值：
void:
getOpacity()
获取GLCustomLayer透明度

返回值：
number:
setOpacity(opacity)
设置GLCustomLayer透明度

参数说明：
opacity (number) 透明度
返回值：
void:
getZooms()
获取GLCustomLayer显示层级范围

返回值：
number:
setZooms(zooms)
设置GLCustomLayer显示层级范围

参数说明：
zooms (Vector) 显示层级范围，默认 [3, 20]
返回值：
number:
show()
显示GLCustomLayer

返回值：
void:
hide()
隐藏GLCustomLayer

返回值：
void:
点标记
用于在地图上添加点状地图要素的类型

AMap.Marker
点标记

new AMap.Marker(opts: MarkerOptions)
参数说明：
opts (MarkerOptions) 点标记参数
属性	描述
opts.map
类型：Map	要显示该marker的地图对象
opts.position
类型：(Vector2 | LngLat)	点标记在地图上显示的位置
opts.icon
类型：(Icon | string)	在点标记中显示的图标。可以传一个图标地址，也可以传Icon对象。有合法的content内容设置时，此属性无效。
opts.content
类型：(string | HTMLElement)	点标记显示内容。可以是HTML要素字符串或者HTML DOM对象。content有效时，icon属性将被覆盖。
opts.title
类型：string	鼠标滑过点标记时的文字提示。不设置则鼠标滑过点标无文字提示。
opts.visible
类型：boolean	点标记是否可见，默认值：true
opts.zIndex
类型：number	点标记的叠加顺序。地图上存在多个点标记叠加时，通过该属性使级别较高的点标记在上层显示，默认zIndex：12
opts.offset
类型：(Vector2 | Pixel)	点标记显示位置偏移量，默认值为 [0,0] 。Marker指定position后，默认以marker左上角位置为基准点（若设置了anchor，则以anchor设置位置为基准点），对准所给定的position位置，若需使marker指定位置对准在position处，需根据marker的尺寸设置一定的偏移量。
opts.anchor
类型：(string | Vector2)	设置点标记锚点，可选值：'top-left','top-center','top-right', 'middle-left', 'center', 'middle-right', 'bottom-left', 'bottom-center', 'bottom-right' 相关示例
opts.angle
类型：number	点标记的旋转角度，，广泛用于改变车辆行驶方向。默认值：0
opts.clickable
类型：boolean	点标记是否可点击，默认值: true
opts.draggable
类型：boolean	设置点标记是否可拖拽移动，默认值：false
opts.bubble
类型：boolean	事件是否冒泡，默认为 false
opts.zooms
类型：Vector2	点标记显示的层级范围，超过范围不显示。默认值：zooms: [2, 20]
opts.cursor
类型：string	指定鼠标悬停时的鼠，默认值：'pointer'
opts.topWhenClick
类型：boolean	鼠标点击时marker是否置顶，默认false ，不置顶
opts.height
类型：number	设置Marker点是否离地绘制，默认值为0，等于0时贴地绘制。大于0时离地绘制，此时Marker点高度等于height值加Marker点高程值（JSAPI v2.1新增属性目前只适用于v2.1版本）。
opts.label
类型：object	添加文本标注
opts.label.content
类型：string	文本标注的内容
opts.label.offset
类型：(Pixel | Vector2 | Array<number>)	为偏移量。如设置了 direction，以 direction 方位为基准点进行偏移。
opts.label.direction
类型：string	文本标注方位 可选值：'top'|'right'|'bottom'|'left'|'center'，默认值: 'right'。
opts.extData
类型：any	用户自定义属性 ，支持JavaScript API任意数据类型，如 Marker的id等。可将自定义数据保存在该属性上，方便后续操作使用。
示例代码：
var marker = new AMap.Marker({
    position: new AMap.LngLat(116.397428, 39.90923),
    icon: 'https://a.amap.com/jsapi_demos/static/demo-center/icons/poi-marker-default.png',
    anchor: 'bottom-center',
});
map.add(marker);
成员函数：
getTitle()
获取点标记的文字提示

返回值：
(string | undefined):
getHeight()
获取 Marker 离地高度 （此方法适用于 JSAPI v2.1Beta 及以上版本）

返回值：
(number | undefined):
getIcon()
当点标记未自定义图标时，获取Icon内容

返回值：
(Icon | string | undefined):
setIcon(icon)
设置点标记的显示图标，设置了有效 content 则 icon 不生效

参数说明：
icon ((Icon | string)) 点标记中显示的图标
getLabel()
获取点标记文本标签内容

返回值：
LabelOptions: 文本标签设置项
setLabel(opts)
设置点标记文本标签内容

参数说明：
opts (LabelOptions)
getClickable()
获取点标记是否支持鼠标单击事件

返回值：
boolean:
setClickable(clickable)
设置点标记是否支持鼠标单击事件

参数说明：
clickable (boolean) 默认值: true
getDraggable()
获取点标记对象是否可拖拽移动

返回值：
boolean:
setDraggable(draggable)
设置点标记对象是否可拖拽移动

参数说明：
draggable (boolean)
getTop()
获取该点标记是否置顶

返回值：
boolean:
setTop(isTop)
地图上有多个marker时，设置是否置顶该点标记

参数说明：
isTop (boolean)
getCursor()
获取鼠标悬停时的光标设置

返回值：
string:
setCursor(cursor)
设置鼠标悬停时的光标

参数说明：
cursor (string)
getExtData()
获取用户自定义数据

返回值：
(any | undefined):
setExtData(extData)
设置用户自定义数据

参数说明：
extData (any) 用户自定义数据
remove()
移除点标记 相关示例

moveTo(targetPosition, opts)
以给定时长/速度移动点标记到指定位置, 需加载 AMap.MoveAnimation 插件才可使用

参数说明：
targetPosition ((LngLat | Vector2)) 指定位置
opts (MoveToOptions) moveTo 动画参数
属性	描述
opts.duration
类型：number	每段动画持续时长, 单位：ms
opts.speed
类型：number	动画速度，已废弃
opts.easing
类型：EasingCallback	easing 时间函数
opts.autoRotation
类型：boolean	点标记方向是否沿路径旋转
示例代码：
AMap.plugin('AMap.MoveAnimation', function(){
    // 加载完 AMap.MoveAnimation 插件以后，创建一个 Marker 实例
    const animationMarker = new AMap.Marker({
        position: new AMap.LngLat(116.397389,39.909466),
        icon: "https://a.amap.com/jsapi_demos/static/demo-center-v2/car.png",
        offset: new AMap.Pixel(-13, -26),
    });
    // 调用 moveTo 方法
    animationMarker.moveTo([116.397389, 39.909466], {
        duration: 1000,
        delay: 500,
    });
});
moveAlong(path, opts)
以指定的时长，点标记沿指定的路径移动，加载 AMap.MoveAnimation 后可以使用 JSAPI 2.0 可支持分段设置速度和时长 相关示例

参数说明：
path ((Array<LngLat> | Array<Vector2> | Array<MoveAlongObj>)) 路径数组
opts (MoveAlongOptions) moveAlong 动画参数 可选
属性	描述
opts.duration
类型：(number | AnimationCallback)	每段动画持续时长, 单位：ms
opts.speed
类型：(number | AnimationCallback)	每段动画速度，已废弃
opts.easing
类型：EasingCallback	easing 时间函数
opts.circlable
类型：boolean	动画是否循环
opts.delay
类型：(number | AnimationCallback)	延迟动画时长
opts.aniInterval
类型：number	每段完整动画间隔时长
opts.autoRotation
类型：boolean	覆盖物是否沿路径旋转
示例代码：
const path = [
    new AMap.LngLat(116.397389, 39.909466),
    new AMap.LngLat(116.379707, 39.968168),
    new AMap.LngLat(116.434467, 39.95001),
    new AMap.LngLat(116.46365, 39.979481),
    new AMap.LngLat(116.397389, 39.909466),
];
// 分段设置时长
const customData = [
    { position: path[0], duration: 200 },
    { position: path[1], duration: 400 },
    { position: path[2], duration: 600 },
    { position: path[3], duration: 800 },
    { position: path[4], duration: 1000 },
];
AMap.plugin('AMap.MoveAnimation', function(){
    // 加载完 AMap.MoveAnimation 插件以后，创建一个 Marker 实例
    const animationMarker = new AMap.Marker({
        position: new AMap.LngLat(116.397389,39.909466),
        angle: 90,
    });
    // 调用 moveAlong 方法
    animationMarker.moveAlong(customData);
});
startMove()
开启点标记动画，加载 AMap.MoveAnimation 后创建的点标记可以使用

示例代码：
animationMarker.startMove();
stopMove()
停止点标记动画，加载 AMap.MoveAnimation 后创建的点标记可以使用

示例代码：
animationMarker.stopMove();
pauseMove()
暂停点标记动画，加载 AMap.MoveAnimation 后创建的点标记可以使用

示例代码：
animationMarker.pauseMove();
resumeMove()
重新启动点标记动画，加载 AMap.MoveAnimation 后创建的点标记可以使用

示例代码：
animationMarker.resumeMove();
getMap()
获取覆盖物的地图实例

返回值：
(Map | null):
setMap(map)
将覆盖物设置到地图上

参数说明：
map ((Map | null))
addTo(map)
将覆盖物加到地图上

参数说明：
map (Map)
add(map)
将覆盖物加到地图上

参数说明：
map (Map)
show()
显示覆盖物

hide()
隐藏覆盖物

getPosition()
获取覆盖物位置

返回值：
any:
setPosition(position)
设置覆盖物位置

参数说明：
position (Vector2)
getAnchor()
获取覆盖物锚点

返回值：
(string | Vector2 | undefined):
setAnchor(anchor)
设置覆盖物锚点设置点标记锚点。默认值：'top-left' * 可选值：'top-left'|'top-center'|'top-right'|'middle-left'|'center'|'middle-right'|'bottom-left'|'bottom-center'|'bottom-right' 相关示例

参数说明：
anchor (string)
getOffset()
获取覆盖物偏移量

返回值：
(Vector2 | Pixel | undefined | Array<number>):
setOffset(offset)
设置覆盖物偏移量

参数说明：
offset ((Vector2 | Pixel))
getAngle()
获取覆盖物旋转角度

返回值：
(number | undefined):
setAngle(angle)
设置覆盖物旋转角度

参数说明：
angle (number)
getSize()
如设置了尺寸，获取设置的尺寸

返回值：
Vector2:
setSize(size)
设置尺寸

参数说明：
size ((Vector2 | Size))
getzIndex()
获取覆盖物的叠加顺序

返回值：
(number | undefined):
setzIndex(zIndex)
设置覆盖物的叠加顺序

参数说明：
zIndex (number)
getOptions()
获取覆盖物的所有属性

返回值：
OverlayOptions:
getContent()
获取点标记显示的自定义内容

返回值：
(string | HTMLElement | undefined):
setContent(content)
设置点标记显示的自定义内容，可以是HTML要素字符串或者HTML DOM对象

参数说明：
content ((HTMLDOM | string))
getBounds()
获取点标记范围

返回值：
Bounds:
事件：
click
鼠标左键单击事件

dblclick
鼠标左键双击事件

rightclick
鼠标右键单击事件

mousemove
鼠标移动

mouseover
鼠标移近点标记时触发事件

mouseout
鼠标移出点标记时触发事件

mousedown
鼠标在点标记上按下时触发事件

mouseup
鼠标在点标记上按下后抬起时触发事件

dragstart
开始拖拽点标记时触发事件

dragging
鼠标拖拽移动点标记时触发事件

dragend
点标记拖拽移动结束触发事件

moving
点标记在执行moveTo，moveAlong动画时触发事件，Object对象的格式是{passedPath:Array.}。其中passedPath为对象在moveAlong或者moveTo过程中走过的路径。

moveend
点标记执行moveTo动画结束时触发事件，也可以由moveAlong方法触发

movealong
点标记执行moveAlong动画一次后触发事件

touchstart
触摸开始时触发事件，仅适用移动设备

touchmove
触摸移动进行中时触发事件，仅适用移动设备

touchend
触摸结束时触发事件，仅适用移动设备

AMap.Text
文本标记

new AMap.Text(opts: TextOptions)
参数说明：
opts (TextOptions) 文本参数
属性	描述
opts.map
类型：Map	要显示该marker的地图对象
opts.position
类型：LngLat	点标记在地图上显示的位置
opts.text
类型：LabelOptions	标记显示的文本内容
opts.title
类型：string	鼠标滑过点标记时的文字提示
opts.visible
类型：boolean	点标记是否可见，默认为true
opts.zIndex
类型：number	点标记的叠加顺序
opts.offset
类型：Pixel	点标记显示位置偏移量，默认值 [0, 0] 。 图解说明
opts.anchor
类型：string	设置点标记锚点。默认值：'center'。可选值：'top-left'|'top-center'|'top-right'|'middle-left'|'center'|'middle-right'|'bottom-left'|'bottom-center'|'bottom-right'
opts.angle
类型：number	点标记的旋转角度。默认值：0 。注：angle属性是使用CSS3来实现的，支持IE9及以上版本
opts.clickable
类型：boolean	点标记是否可点击。默认值: true
opts.draggable
类型：boolean	设置点标记是否可拖拽移动。默认值：false
opts.bubble
类型：boolean	事件是否冒泡，默认值：false
opts.zooms
类型：Array	点标记显示的层级范围，超过范围不显示。默认值：zooms: [2, 20] 。
opts.cursor
类型：string	指定鼠标悬停时的鼠标样式。
opts.topWhenClick
类型：boolean	鼠标点击时marker是否置顶，默认值: false
opts.extData
类型：any	用户自定义属性 ，支持JavaScript API任意数据类型，如 Marker的id等。可将自定义数据保存在该属性上，方便后续操作使用。
opts.style
类型：object	设置文本样式，Object同css样式表，如:{'background-color':'red'}
示例代码：
var text = new AMap.Text({
    position: new AMap.LngLat(116.397428, 39.90923),
    anchor: 'bottom-center',
    text: '文本标记',
    style: {'background-color':'red'},
});
map.add(text);
成员函数：
getText
获取文本标记内容

返回值：
(string | undefined):
setText
设置文本标记内容

参数说明：
text (string)
setStyle
修改文本标记样式。Object同css样式表，如:{'background-color':'red'}

参数说明：
style (any)
getTitle()
获取文本标记的文字提示

返回值：
(string | undefined):
setTitle(title)
设置鼠标滑过文本标记时的文字提示

参数说明：
title (string) 文本标记的文字提示
getClickable()
获取文本标记是否支持鼠标单击事件

返回值：
boolean:
setClickable(clickable)
设置文本标记是否支持鼠标单击事件

参数说明：
clickable (boolean) 默认值: true
getDraggable()
获取文本标记对象是否可拖拽移动

返回值：
boolean:
getMap()
获取文本标记的地图实例

返回值：
(Map | null):
setMap(map)
将文本标记设置到地图上

参数说明：
map ((Map | null))
addTo(map)
将文本标记加到地图上，不推荐使用。推荐使用 map.add(text);

参数说明：
map (Map)
add(map)
将文本标记加到地图上

参数说明：
map (Map)
show()
显示文本标记

hide()
隐藏文本标记

getPosition()
获取文本标记位置

返回值：
any:
setPosition(position)
设置文本标记位置

参数说明：
position (Vector)
getAnchor()
获取文本标记锚点

返回值：
(string | Vector | undefined):
setAnchor(anchor)
设置文本标记锚点

参数说明：
anchor (string)
getOffset()
获取文本标记偏移量

返回值：
(Vector | Pixel | undefined | Array<number>):
setOffset(offset)
设置文本标记偏移量，相对 anchor 后的偏移位置

参数说明：
offset ((Array<number> | Pixel))
getAngle()
获取文本标记旋转角度

返回值：
(number | undefined):
setAngle(angle)
设置文本标记旋转角度

参数说明：
angle (number)
getzIndex()
获取文本标记的叠加顺序

返回值：
(number | undefined):
setzIndex(zIndex)
设置文本标记的叠加顺序

参数说明：
zIndex (number)
getOptions()
获取文本标记的所有属性

返回值：
OverlayOptions:
getBounds()
获取文本标记范围

返回值：
Bounds:
moveTo(targetPosition, opts)
以给定速度移动文本标记到指定位置, 需加载 AMap.MoveAnimation 插件才可使用

参数说明：
targetPosition ((LngLat | Vector)) 指定位置
opts (MoveToOptions) moveTo 动画参数
属性	描述
opts.duration
类型：number	每段动画持续时长, 单位：ms
opts.speed
类型：number	动画速度，已废弃
opts.easing
类型：EasingCallback	easing 时间函数
opts.autoRotation
类型：boolean	覆盖物是否沿路径旋转
示例代码：
AMap.plugin('AMap.MoveAnimation', function(){
    // 加载完 AMap.MoveAnimation 插件以后，创建一个 Text 实例
    const animationText = new AMap.Text({
        text: '文本标记',
        position: new AMap.LngLat(116.397389,39.909466),
    });
    animationText.moveTo([116.397389, 39.909466], {
        duration: 1000,
        delay: 500,
    });
});
moveAlong(path, opts)
以指定的时长，文本标记沿指定的路径移动，加载 AMap.MoveAnimation 后可以使用

参数说明：
path ((Array<LngLat> | Array<Vector> | Array<MoveAlongObj>)) 路径数组
opts (MoveAlongOptions) moveAlong 动画参数 可选
属性	描述
opts.duration
类型：(number | AnimationCallback)	每段动画持续时长, 单位：ms
opts.speed
类型：(number | AnimationCallback)	每段动画速度，已废弃
opts.easing
类型：EasingCallback	easing 时间函数
opts.circlable
类型：boolean	动画是否循环
opts.delay
类型：(number | AnimationCallback)	延迟动画时长
opts.aniInterval
类型：number	每段完整动画间隔时长
opts.autoRotation
类型：boolean	覆盖物是否沿路径旋转
示例代码：
const path = [
    new AMap.LngLat(116.397389, 39.909466),
    new AMap.LngLat(116.379707, 39.968168),
    new AMap.LngLat(116.434467, 39.95001),
    new AMap.LngLat(116.46365, 39.979481),
    new AMap.LngLat(116.397389, 39.909466),
];
const customData = [
    { position: path[0], duration: 200 },
    { position: path[1], duration: 400 },
    { position: path[2], duration: 600 },
    { position: path[3], duration: 800 },
    { position: path[4], duration: 1000 },
];
AMap.plugin('AMap.MoveAnimation', function(){
    // 加载完 AMap.MoveAnimation 插件以后，创建一个 Text 实例
    const animationText = new AMap.Text({
        text: '文本标记',
        position: new AMap.LngLat(116.397389,39.909466),
    });
    animationText.moveAlong(customData);
});
startMove()
开启文本标记动画，加载 AMap.MoveAnimation 后可以使用

示例代码：
animationText.startMove();
stopMove()
停止文本标记动画，加载 AMap.MoveAnimation 后可以使用

示例代码：
animationText.stopMove();
pauseMove()
暂停文本标记动画，加载 AMap.MoveAnimation 后可以使用

示例代码：
animationText.pauseMove();
resumeMove()
重新启动文本标记动画，加载 AMap.MoveAnimation 后可以使用

示例代码：
animationText.resumeMove();
setDraggable(draggable)
设置文本标记对象是否可拖拽移动

参数说明：
draggable (boolean)
getTop()
获取该文本标记是否置顶

返回值：
boolean:
setTop(isTop)
地图上有多个marker时，设置是否置顶该文本标记

参数说明：
isTop (boolean)
getCursor()
获取鼠标悬停时的光标设置

返回值：
string:
setCursor(cursor)
设置鼠标悬停时的光标

参数说明：
cursor (string)
getExtData()
获取用户自定义数据

返回值：
(any | undefined):
setExtData(extData)
设置用户自定义数据

参数说明：
extData (any) 用户自定义数据
remove()
移除点标记

事件：
click
鼠标左键单击事件

dblclick
鼠标左键双击事件

rightclick
鼠标右键单击事件

mousemove
鼠标移动

mouseover
鼠标移近点标记时触发事件

mouseout
鼠标移出点标记时触发事件

mousedown
鼠标在点标记上按下时触发事件

mouseup
鼠标在点标记上按下后抬起时触发事件

dragstart
开始拖拽点标记时触发事件

dragging
鼠标拖拽移动点标记时触发事件

dragend
点标记拖拽移动结束触发事件

moving
点标记在执行moveTo，moveAlong动画时触发事件，Object对象的格式是{passedPath:Array.}。其中passedPath为对象在moveAlong或者moveTo过程中走过的路径。

moveend
点标记执行moveTo动画结束时触发事件，也可以由moveAlong方法触发

movealong
点标记执行moveAlong动画一次后触发事件

touchstart
触摸开始时触发事件，仅适用移动设备

touchmove
触摸移动进行中时触发事件，仅适用移动设备

touchend
触摸结束时触发事件，仅适用移动设备

AMap.Icon
Icon类 表示点标记的图标 用于添加复杂点标记，即在普通点标记的基础上，添加Icon类，通过在Icon表示的大图上截取其中一部分作为标注的图标 构造点覆盖物图标，通过IconOptions设置图标属性

new AMap.Icon(opts: IconOpts)
参数说明：
opts (IconOpts) 点覆盖物图标，通过IconOptions设置图标属性
属性	描述
opts.size
类型：(Size | Vector2)	= [36,36] 图标尺寸，默认值(36,36)
opts.imageOffset
类型：(Pixel | Vector2)	图标取图偏移量。当image中指定了一个大图时，可通过size和imageOffset配合，显示图标的指定范围
opts.image
类型：string	图标的取图地址。默认为蓝色图钉图片
opts.imageSize
类型：(Size | Vector2)	图标所用图片大小，根据所设置的大小拉伸或压缩图片，等同于CSS中的background-size属性。可用于实现高清屏的高清效果
成员函数：
setImageSize(size)
设置图标图片大小

参数说明：
size ((Size | Vector2))
getImageSize()
获取图标图片大小

返回值：
any:
setSize(size)
设置图标尺寸，默认值(36,36)

参数说明：
size ((Size | Vector2))
getSize()
获取图标尺寸

返回值：
any:
setImageOffset(offset)
设置图标图片大小

参数说明：
offset ((Pixel | Vector2))
getImageOffset()
获取图标取图偏移量。当image中指定了一个大图时，可通过size和imageOffset配合，显示图标的指定范围

返回值：
any:
getImage()
获取图标

返回值：
any:
setImage(image)
设置图标

参数说明：
image (string)
setOriginSize(size)
设置原始尺寸

参数说明：
size ((Size | Vector2))
getOriginSize()
获取原始尺寸

返回值：
any:
AMap.LabelMarker
标注类

new AMap.LabelMarker(opts: LabelMarkerOptions)
参数说明：
opts (LabelMarkerOptions) 标注参数
属性	描述
opts.name
类型：string	标注名称，作为标注标识，并非最终在地图上显示的文字内容，显示文字内容请设置 opts.text.content
opts.position
类型：(Vector2 | LngLat)	标注位置
opts.zooms
类型：Vector2	标注显示级别范围， 可选值： [2,20]
opts.opacity
类型：number	标注透明度，默认值: 1
opts.rank
类型：number	避让优先级，获取标注的优先级，该优先级用于 labelsLayer 支持避让时，rank 值大的标注会避让掉 rank 值低的标注。默认值：1
opts.zIndex
类型：number	同一 LabelsLayer 内标注显示层级，数字越大越靠前，默认值: 1
opts.visible
类型：boolean	标注是否可见， 默认值: true
opts.extData
类型：any	用户自定义类型数据，可将自定义数据保存在该属性上，方便后续操作使用。
opts.icon
类型：IconOptions	标注图标设置
opts.icon.image
类型：string	图标 url。
opts.icon.size
类型：(Vector2 | Size)	图标大小，默认值： [36, 36]
opts.icon.clipOrigin
类型：(Vector2 | Pixel)	图标所在图片偏移位置，默认值: [0, 0]
opts.icon.clipSize
类型：(Vector2 | Size)	图标所在图片裁剪大小，若未设置，则使用图片大小
opts.icon.offset
类型：(Vector2 | Pixel)	图标所在图片偏移量,默认值 [0, 0]
opts.icon.anchor
类型：(Vector2 | Pixel | string)	图标锚点，锚点位置对应设置的 position 位置。可选值：'top-left'| 'top-center'|'top-right'|'middle-left'|'center'| 'middle-right'| 'bottom-left'| 'bottom-center'| 'bottom-right' 。默认值：'top-left'。
opts.text
类型：TextOptions	标注文本设置
opts.text.content
类型：string	文本标注的内容，该属性为直接显示在标注上的文本内容。
opts.text.direction
类型：string	文本标注方位。若设置了 icon，则 direction 是以 icon 为中心的偏移，若未设置 icon，则相对 position 偏移。 可选值：'top'|'right'|'bottom'|'left'|'center'。默认值: right
opts.text.offset
类型：(Pixel | Vector2)	为偏移量，在 direction 基础上的偏移。默认值 [0, 0]
opts.text.zooms
类型：Vector2	文本显示级别范围，可单独设置文本显示范围
opts.text.style
类型：TextStyleOptions	文本样式设置
opts.text.style.fontSize
类型：number	文字大小，默认值： 12
opts.text.style.fillColor
类型：string	文字颜色
opts.text.style.strokeColor
类型：string	文字描边颜色
opts.text.style.padding
类型：(string | Array<(string | number)>)	文字 padding。默认值： [3, 3, 3, 3]
opts.text.style.backgroundColor
类型：string	文字背景颜色
opts.text.style.borderColor
类型：string	文字背景描边颜色
opts.text.style.borderWidth
类型：number	文字背景描边粗细
opts.text.style.fold
类型：boolean	文字是否折行（6个字一折行）
示例代码：
// 创建一个 LabelMarker 实例
var labelMarker = new AMap.LabelMarker({
    position: [116.468599, 39.995847],
    opacity: 1,
    zIndex: 2,
    icon: {
        image: 'https://a.amap.com/jsapi_demos/static/images/poi-marker.png',
        anchor: 'bottom-center',
        size: [25, 34],
        clipOrigin: [459, 92],
        clipSize: [50, 68]
    },
    text: {
        content: '香猪坊',
        direction: 'right',
        style: {
            fontSize: 15,
            fillColor: '#fff',
            strokeColor: 'rgba(255,0,0,0.5)',
            strokeWidth: 2,
            padding: [3, 10],
            backgroundColor: 'yellow',
            borderColor: '#ccc',
            borderWidth: 3,
        }
    }
});
// 创建一个 LabelsLayer 实例来承载 LabelMarker，[LabelsLayer 文档](https://lbs.amap.com/api/jsapi-v2/documentation#labelslayer)
var labelsLayer = new AMap.LabelsLayer({
    collision: true,
});
// 将 LabelMarker 实例添加到 LabelsLayer 上
labelsLayer.add(labelMarker);
// 将 LabelsLayer 添加到地图上
map.add(labelsLayer);
成员函数：
getName()
获取标注的名称，作为标注标识，并非最终在地图上显示的文字内容

返回值：
(string | undefined):
setName(name)
设置标注的名称，作为标注标识，并非最终在地图上显示的文字内容

参数说明：
name (string)
getPosition()
获取标注的显示位置

返回值：
LngLat:
setPosition(position)
设置标注的位置

参数说明：
position ((LngLat | [number] | string))
getZooms()
获取标注显示级别范围

返回值：
(Vector2 | undefined):
setZooms(zooms)
设置显示级别范围

参数说明：
zooms ([number])
getOpacity()
获取标注透明度值

返回值：
(number | undefined):
setOpacity(opacity)
设置标注透明度

参数说明：
opacity (number)
getzIndex()
获取标注的叠加顺序

返回值：
(number | undefined):
setzIndex(zIndex)
设置标注的叠加顺序

参数说明：
zIndex (number)
getRank()
获取标注的优先级，该优先级用于 labelsLayer 支持避让时，rank 值大的标注会避让掉 rank 值低的标注。

返回值：
(number | undefined):
setRank(rank)
设置标注的优先级，该优先级用于 labelsLayer 支持避让时，rank 值大的标注会避让掉 rank 值低的标注。

参数说明：
rank (number)
getText()
获取标注的文本设置

返回值：
(LabelMarkerTextOptions | undefined):
setText(textOpts)
设置标注的文本设置，可设置显示的文字内容和文字样式等

参数说明：
textOpts (LabelMarkerTextOptions)
getIcon()
获取标注的图标设置

返回值：
(LabelMarkerIconOptions | undefined):
setIcon(iconOpts)
设置标注的图标设置，可设置显示的标注图片

参数说明：
iconOpts (LabelMarkerIconOptions)
getOptions()
获取标注的全部属性配置

返回值：
LabelMarkerOptions:
getExtData()
获取用户自定义属性

返回值：
(any | undefined):
setExtData(extData)
设置用户自定义属性

参数说明：
extData (any)
setTop(isTop)
是否设置置顶标注，设置为 true 表示该标注会显示在所有标注之前

参数说明：
isTop (boolean)
getVisible()
获取该标注的可见性

返回值：
(boolean | undefined):
getCollision()
获取该标注是否被避让，从而没有显示

返回值：
(boolean | undefined):
show()
标注显示

hide()
标注隐藏

remove()
将自身从标注层移除

moveTo(targetPosition, opts)
以给定速度移动标注到指定位置, 需加载 AMap.MoveAnimation 插件才可使用

参数说明：
targetPosition ((LngLat | Vector2)) 指定位置
opts (MoveToOptions) moveTo 动画参数
属性	描述
opts.duration
类型：number	每段动画持续时长, 单位：ms
opts.speed
类型：number	动画速度，已废弃
opts.easing
类型：EasingCallback	easing 时间函数
opts.autoRotation
类型：boolean	覆盖物是否沿路径旋转
示例代码：
AMap.plugin('AMap.MoveAnimation', function(){
    // 加载完 AMap.MoveAnimation 插件以后，创建一个 LabelMarker 实例
    const animationLabel = new AMap.LabelMarker({
        content: '标注',
        position: new AMap.LngLat(116.397389,39.909466),
        text: {
            content: '动画标注'
        }
    });
    labelsLayer.add(animationLabel);
    // 调用 moveTo 方法
    animationLabel.moveTo([116.397389, 39.909466], {
        duration: 1000,
        delay: 500,
    });
});
moveAlong(path, opts)
以指定的时长，标注沿指定的路径移动，加载 AMap.MoveAnimation 后可以使用

参数说明：
path ((Array<LngLat> | Array<Vector2> | Array<MoveAlongObj>)) 路径数组
opts (MoveAlongOptions) moveAlong 动画参数 可选
属性	描述
opts.duration
类型：(number | AnimationCallback)	每段动画持续时长, 单位：ms
opts.speed
类型：(number | AnimationCallback)	每段动画速度，已废弃
opts.easing
类型：EasingCallback	easing 时间函数
opts.circlable
类型：boolean	动画是否循环
opts.delay
类型：(number | AnimationCallback)	延迟动画时长
opts.aniInterval
类型：number	每段完整动画间隔时长
opts.autoRotation
类型：boolean	覆盖物是否沿路径旋转
示例代码：
const path = [
    new AMap.LngLat(116.397389, 39.909466),
    new AMap.LngLat(116.379707, 39.968168),
    new AMap.LngLat(116.434467, 39.95001),
    new AMap.LngLat(116.46365, 39.979481),
    new AMap.LngLat(116.397389, 39.909466),
];
const customData = [
    { position: path[0], duration: 200 },
    { position: path[1], duration: 400 },
    { position: path[2], duration: 600 },
    { position: path[3], duration: 800 },
    { position: path[4], duration: 1000 },
];
AMap.plugin('AMap.MoveAnimation', function(){
    // 加载完 AMap.MoveAnimation 插件以后，创建一个 LabelMarker 实例
    const animationLabel = new AMap.LabelMarker({
        content: '标注',
        position: new AMap.LngLat(116.397389,39.909466),
        text: {
            content: '动画标注'
        }
    });
    labelsLayer.add(animationLabel);
    // 调用 moveAlong 方法
    animationLabel.moveAlong(customData);
});
startMove()
开启标注动画，加载 AMap.MoveAnimation 后创建的标注可以使用

示例代码：
animationLabel.startMove();
stopMove()
停止标注动画，加载 AMap.MoveAnimation 后创建的标注可以使用

示例代码：
animationLabel.stopMove();
pauseMove()
暂停标注动画，加载 AMap.MoveAnimation 后创建的标注可以使用

示例代码：
animationLabel.pauseMove();
resumeMove()
重新启动标注动画，加载 AMap.MoveAnimation 后创建的标注可以使用

示例代码：
animationLabel.resumeMove();
事件：
click
鼠标左键单击标注触发的事件

mousemove
鼠标在标注上移动触发的事件

mouseover
鼠标移进标注时触发事件

mouseout
鼠标移出标注时触发事件

mousedown
鼠标在标注上按下时触发事件

mouseup
鼠标在标注上按下后抬起时触发事件

touchstart
触摸开始时触发事件，仅适用移动设备

touchmove
触摸移动进行中时触发事件，仅适用移动设备

touchend
触摸结束时触发事件，仅适用移动设备

AMap.ElasticMarker
灵活点标记

new AMap.ElasticMarker(opts: ElasticMarkerOptions)
参数说明：
opts (ElasticMarkerOptions) 灵活点标记参数
属性	描述
opts.map
类型：Map	要显示该marker的地图对象
opts.position
类型：(Vector | LngLat)	点标记在地图上显示的位置
opts.visible
类型：boolean	点标记是否可见，默认为true
opts.zIndex
类型：number	点标记的叠加顺序
opts.offset
类型：(Vector | Pixel)	点标记显示位置偏移量
opts.clickable
类型：boolean	点标记是否可点击
opts.draggable
类型：boolean	设置点标记是否可拖拽移动
opts.bubble
类型：boolean	事件是否冒泡，默认为 false
opts.cursor
类型：string	指定鼠标悬停时的鼠标样式
opts.topWhenClick
类型：boolean	鼠标点击时marker是否置顶
opts.zoomStyleMapping
类型：Record<string, number>	表示地图级别与styles中样式的映射，{14:0,15:0,16:1,17:1,}表示14到15级使用styles中的第0个样式，16-17级使用第二个样式
opts.extData
类型：any	用户自定义属性
opts.styles
类型：Array<ElasticStyle>	多个不同样式的数组
opts.styles.icon
类型：ElasticIcon	灵活标注图标样式类型
opts.styles.icon.img
类型：string	图标 url
opts.styles.icon.size
类型：Vector	图标显示大小
opts.styles.icon.anchor
类型：(Vector | string)	图标锚点
opts.styles.icon.imageOffset
类型：(Vector | string)	图片偏移量
opts.styles.icon.imageSize
类型：number	图片大小
opts.styles.icon.fitZoom
类型：number	最合适的级别，在此级别下显示为原始大小
opts.styles.icon.scaleFactor
类型：number	地图放大一级的缩放比例系数
opts.styles.icon.maxScale
类型：number	最大放大比例
opts.styles.icon.minScale
类型：number	最小放大比例
opts.styles.label
类型：ElasticLabel	灵活标注文本样式类型
opts.styles.label.content
类型：ElasticLabel	文本内容
opts.styles.label.position
类型：ElasticLabel	文本位置相对于图标的基准点，可选值：BL、BM、BR、ML、MR、TL、TM、TR分别代表左下角、底部中央、右下角、左侧中央、右侧中央、左上角、顶部中央、右上角
opts.styles.label.offset
类型：ElasticLabel	相对position的偏移量
opts.styles.label.minZoom
类型：ElasticLabel	label的最小显示级别
示例代码：
// 样式列表
var stylesArr = [{
   icon: {
       img: 'https://a.amap.com/jsapi_demos/static/resource/img/men3.png',
       size: [16, 16],//可见区域的大小
       anchor: 'bottom-center',//锚点
       fitZoom: 14,//最合适的级别
       scaleFactor: 2,//地图放大一级的缩放比例系数
       maxScale: 2,//最大放大比例
       minScale: 1//最小放大比例
   },
   label: {
       content: '百花殿',
       position: 'BM',
       minZoom: 15
   }
}, {
   icon: {
       img: 'https://a.amap.com/jsapi_demos/static/resource/img/tingzi.png',
       size: [48, 63],
       anchor: 'bottom-center',
       fitZoom: 17.5,
       scaleFactor: 2,
       maxScale: 2,
       minScale: 0.125
   },
   label: {
       content: '万寿亭',
       position: 'BM',
       minZoom: 15
   }
}];
zoom 与样式的映射
var zoomStyleMapping1 = {
   14: 0,  // 14级使用样式 0
   15: 0,
   16: 0,
   17: 0,
   18: 1,
   19: 1,
   20: 1,
};
// 加载灵活点标记的插件
AMap.plugin(['AMap.ElasticMarker'], function(){
    var elasticMarker = new AMap.ElasticMarker({
        position: [116.405562, 39.881166],
        // 指定样式列表
        styles: stylesArray,
        // 指定 zoom 与样式的映射
        zoomStyleMapping: zoomStyleMapping,
    });
    map.add(elasticMarker);
});
成员函数：
getTitle()
获取获取灵活点标记标记的文字提示

返回值：
(string | undefined):
setTitle(title)
设置鼠标滑过灵活点标记时的文字提示

参数说明：
title (string) 灵活点标记的文字提示
getClickable()
获取灵活点标记是否支持鼠标单击事件

返回值：
boolean:
getMap()
获取覆盖物的地图实例

返回值：
(Map | null):
setMap(map)
将覆盖物设置到地图上

参数说明：
map ((Map | null))
show()
显示覆盖物

hide()
隐藏覆盖物

getPosition()
获取覆盖物位置

返回值：
any:
setPosition(position)
设置灵活点标记位置

参数说明：
position (Vector)
setAnchor(anchor)
设置灵活点标记锚点

参数说明：
anchor (string)
getzIndex()
获取覆盖物的叠加顺序

返回值：
(number | undefined):
setzIndex(zIndex)
设置覆盖物的叠加顺序

参数说明：
zIndex (number)
getOptions()
获取覆盖物的所有属性

返回值：
OverlayOptions:
getBounds()
返回值：
Bounds:
setClickable(clickable)
设置灵活点标记是否支持鼠标单击事件

参数说明：
clickable (boolean) 默认值: true
getDraggable()
获取灵活点标记对象是否可拖拽移动

返回值：
boolean:
setDraggable(draggable)
设置灵活点标记对象是否可拖拽移动

参数说明：
draggable (boolean)
getTop()
获取该灵活点标记是否置顶

返回值：
boolean:
setTop(isTop)
地图上有多个marker时，设置是否置顶该灵活点标记

参数说明：
isTop (boolean)
getCursor()
获取鼠标悬停时的光标设置

返回值：
string:
setCursor(cursor)
设置鼠标悬停时的光标

参数说明：
cursor (string)
getExtData()
获取用户自定义数据

返回值：
(any | undefined):
setExtData(extData)
设置用户自定义数据

参数说明：
extData (any) 用户自定义数据
remove()
移除点标记

事件：
click
鼠标左键单击事件

dblclick
鼠标左键双击事件

rightclick
鼠标右键单击事件

mousemove
鼠标移动

mouseover
鼠标移近点标记时触发事件

mouseout
鼠标移出点标记时触发事件

mousedown
鼠标在点标记上按下时触发事件

mouseup
鼠标在点标记上按下后抬起时触发事件

dragstart
开始拖拽点标记时触发事件

dragging
鼠标拖拽移动点标记时触发事件

dragend
点标记拖拽移动结束触发事件

touchstart
触摸开始时触发事件，仅适用移动设备

touchmove
触摸移动进行中时触发事件，仅适用移动设备

touchend
触摸结束时触发事件，仅适用移动设备

AMap.MarkerCluster
用于展示大量点标记，将点标记按照距离进行聚合，以提高绘制性能。点聚合支持用户自定义样式，以插件形式调用。

new AMap.MarkerCluster(map: Map, dataOptions: Array, MarkerClusterOptions: Object)
参数说明：
map (Map) 要添加点聚合的地图对象
dataOptions (Array) 需要进行聚合显示的点数据
属性	描述
dataOptions.lnglat
类型：Array	点标记的经纬度信息
dataOptions.weight
类型：number	点标记的权重信息，以权重高的点为中心进行聚合
MarkerClusterOptions (Object) 点聚合属性设置
属性	描述
MarkerClusterOptions.gridSize
类型：Number	聚合计算时网格的像素大小，默认60
MarkerClusterOptions.maxZoom
类型：Number	最大的聚合级别，大于该级别就不进行相应的聚合。默认值为 18，即小于 18 级的级别均进行聚合，18 及以上级别不进行聚合
MarkerClusterOptions.averageCenter
类型：Boolean	聚合点的图标位置是否是所有聚合内点的中心点。默认为 true。数据中如果含有权重值，以权重高的点为中心进行聚合
MarkerClusterOptions.clusterByZoomChange
类型：Boolean	地图缩放过程中是否聚合。默认值 false。
MarkerClusterOptions.styles
类型：Array<Object>	
指定聚合后的点标记的图标样式，可缺省，缺省时为默认样式
数据元素分别对应聚合量在1-10,11-100,101-1000…的聚合点的样式；
当用户设置聚合样式少于实际叠加的点数，未设置部分按照系统默认样式显示；
单个图标样式包括以下几个属性：
1. {string} url：图标显示图片的url地址（必选）
2. {AMap.Size} size：图标显示图片的大小（必选）
3. {AMap.Pixel} offset：图标定位在地图上的位置相对于图标左上角的偏移值。默认为(0,0),不偏移（可选）
4. {AMap.Pixel} imageOffset：图片相对于可视区域的偏移值，此功能的作用等同CSS中的background-position属性。默认为(0,0)，不偏移（可选）
5. {String} textColor：文字的颜色，默认为"#000000"（可选）
6. {Number} textSize：文字的大小，默认为10（可选）
MarkerClusterOptions.renderClusterMarker
类型：function	
该方法用来实现聚合点的自定义绘制，由开发者自己实现，API 将在绘制每个聚合点的时候调用这个方法，可以实现聚合点样式的灵活设定，指定了 renderClusterMarker 后 styles 无效。
该函数的入参为一个Object，包含如下属性：
1. count: 当前聚合点下聚合的 Marker 的数量
2. marker: 当前聚合点显示的 Marker
MarkerClusterOptions.renderMarker
类型：function	
该方法用来实现非聚合点的自定义绘制，由开发者自己实现，API 将在绘制每个非聚合点的时候调用这个方法
该函数的入参为一个Object，包含如下属性：
marker: 非聚合点 Marker 对象
示例代码：
// 数据格式为一组含有经纬度信息的数组，如下所示。其中【经纬度】lnglat 为必填字段，【权重】weight 为可选字段。
var points = [
 { weight: 8, lnglat: ["108.939621", "34.343147"] },
 { weight: 1, lnglat: ["112.985037", "23.15046"] },
 { weight: 1, lnglat: ["110.361899", "20.026695"] },
 { weight: 1, lnglat: ["121.434529", "31.215641"] }
];
// 加载点聚合插件
map.plugin(["AMap.MarkerCluster"],function(){
 var cluster = new AMap.MarkerCluster(map, points, {
     gridSize: 80 // 聚合网格像素大小
 });
});
成员函数：
addData(dataOptions)
在原数据基础上添加数据，格式同 dataOptions

参数说明：
dataOptions (dataOptions)
setData(dataOptions)
设置数据，格式同 dataOptions

参数说明：
dataOptions (dataOptions)
getClustersCount()
获取聚合点的总数量

返回值：
Number:
getGridSize()
获取聚合网格的像素大小

返回值：
Number:
setGridSize(size)
设置聚合网格的像素大小

参数说明：
size (Number) 像素大小
getMaxZoom()
获取地图中点标记的最大聚合级别

返回值：
Number:
setMaxZoom(zoom)
设置地图中点标记的最大聚合级别

参数说明：
zoom (Number) 级别
setStyles(Map)
设置样式聚合点，格式同 opts.styles

参数说明：
Map (Map)
getStyles()
获取样式

返回值：
Array:
getMap()
获取地图对象

返回值：
Map:
setMap(Map)
设置地图对象

参数说明：
Map (Map)
isAverageCenter()
获取单个聚合点位置是否是聚合内所有标记的平均中心

返回值：
Boolean:
setAverageCenter(averageCenter)
设置聚合点位置是否是所有聚合点的中心

参数说明：
averageCenter (Boolean)
事件：
click
点击事件

cluster：点击的聚合点对象
lnglat：点击的位置点坐标
target：点聚合插件对象
marker：点击的聚合点所包含的点对象
属性说明：
data ({cluster: Object, target: Object, lnglat: LngLat, markers: Marker})
AMap.MassMarks
海量点类

new AMap.MassMarks(data: Array<MassData>, opts: Array<MassMarkersOptions>)
参数说明：
data (Array<MassData>) 海量点数据参数
属性	描述
data.lnglat
类型：LngLat	经纬度
data.style
类型：number	样式索引值
opts (Array<MassMarkersOptions>) 海量点参数
属性	描述
opts.zIndex
类型：number	图层叠加的顺序值，0表示最底层。默认zIndex：120
opts.opacity
类型：number	图层的透明度，取值范围 [0,1] ，1代表完全不透明，0代表完全透明
opts.zooms
类型：Array	支持的缩放级别范围
opts.cursor
类型：string	指定鼠标悬停时的鼠标样式，自定义cursor，IE仅支持cur/ani/ico格式，Opera不支持自定义cursor
opts.style
类型：(MassMarkersStyleOptions | Array<MassMarkersStyleOptions>)	用于设置点的样式
opts.style.url
类型：string	必填参数,图标的地址
opts.style.size
类型：Size	必填参数，图标的尺寸；例如：size:new AMap.Size(11,11)
opts.style.anchor
类型：Pixel	必填参数，图标显示位置偏移量，以图标的左上角为基准点（0,0）点，例如：anchor:new AMap.Pixel(5,5)
opts.style.zIndex
类型：number	点展示优先级，默认为使用样式的索引值。
opts.style.rotation
类型：number	旋转角度
示例代码：
// 创建 MassMarks 实例，[亲手试一试](https://lbs.amap.com/api/jsapi-v2/example/marker/massmarks)
var massMarks = new AMap.MassMarks(data, {
    opacity: 0.8,
    zIndex: 111,
    cursor: 'help',
    style: style,
});
// 将海量点实例添加到地图上
map.add(massMarks);
成员函数：
setMap(map)
设置显示MassMark的地图对象

参数说明：
map (Map)
getMap()
获取Marker所在地图对象

返回值：
any:
getData()
输出MassMark的数据集，数据结构同setDatas中的数据集

返回值：
Array<MassData>:
setData(data)
设置MassMark展现的数据集

参数说明：
data (Array<MassData>)
getStyle()
获取MassMark的显示样式

返回值：
Array<MassMarkersStyleOptions>:
setStyle(style)
设置MassMark的显示样式，可设置单个样式或样式列表，每条数据通过设置的样式索引值获取对应样式

参数说明：
style ((MassMarkersStyleOptions | Array<MassMarkersStyleOptions>))
setOpacity()
获取海量点图层的透明度

返回值：
number:
setzIndex(opacity)
设置海量点图层透明度

参数说明：
opacity (number) 透明度
setzIndex(zIndex)
设置海量点图层叠加顺序

参数说明：
zIndex (number) 叠加顺序
getzIndex()
获取海量点图层的透明度

返回值：
number:
getZooms()
获取海量点图层可见层级范围

返回值：
Vector2:
setZooms(zooms)
设置海量点图层可见层级范围

参数说明：
zooms (Vector2) 可见层级范围
show()
显示海量点图层

hide()
隐藏海量点图层

clear()
清除海量点

事件：
complete
海量点加载完成事件

click
鼠标左键单击事件

dbclick
鼠标左键单击事件

mousemove
鼠标移动

mouseover
鼠标移近海量点时触发事件

mouseout
鼠标移出海量点时触发事件

mousedown
鼠标在海量点上按下时触发事件

mouseup
鼠标在海量点上按下后抬起时触发事件

touchstart
触摸开始时触发事件，仅适用移动设备, 数据结构同setDatas中的数据集

touchend
触摸结束时触发事件，仅适用移动设备, 数据结构同setDatas中的数据集

MoveAnimation
用于实现点标记沿线段或者路径轨迹移动的动画基类，可用于满足轨迹回放、实时轨迹等场景。MoveAnimation无需单独声明或初始化，Marker、Text、LabelMarker均已继承了 MoveAnimation的实现。

静态方法：
moveTo(targetPosition, opts)
以给定时间移动点标记到指定位置，加载 AMap.MoveAnimation 后可以使用

参数说明：
targetPosition ((LngLat | Vector)) 指定位置
opts (MoveToOptions) moveTo 动画参数
属性	描述
opts.duration
类型：number	每段动画持续时长, 单位：ms
opts.speed
类型：number	动画速度，已废弃
opts.easing
类型：EasingCallback	easing 时间函数
opts.autoRotation
类型：boolean	覆盖物是否沿路径旋转
示例代码：
AMap.plugin('AMap.MoveAnimation', function(){
     const animationMarker = new AMap.Marker({
        position: new AMap.LngLat(116.397389,39.909466),
     });
    animationMarker.moveTo([116.397389, 39.909466], {
        duration: 1000,
        delay: 500,
    });
});
moveAlong(path, opts)
以指定的时长，点标记沿指定的路径移动，加载 AMap.MoveAnimation 后可以使用

参数说明：
path ((Array<LngLat> | Array<Vector> | Array<MoveAlongObj>)) 路径数组
opts (MoveAlongOptions) moveAlong 动画参数 可选
属性	描述
opts.duration
类型：(number | AnimationCallback)	每段动画持续时长, 单位：ms
opts.speed
类型：(number | AnimationCallback)	每段动画速度，已废弃
opts.easing
类型：EasingCallback	easing 时间函数
opts.circlable
类型：boolean	动画是否循环
opts.delay
类型：(number | AnimationCallback)	延迟动画时长
opts.aniInterval
类型：number	每段完整动画间隔时长
opts.autoRotation
类型：boolean	覆盖物是否沿路径旋转
示例代码：
const path = [
    new AMap.LngLat(116.397389, 39.909466),
    new AMap.LngLat(116.379707, 39.968168),
    new AMap.LngLat(116.434467, 39.95001),
    new AMap.LngLat(116.46365, 39.979481),
    new AMap.LngLat(116.397389, 39.909466),
];
const customData = [
    { position: path[0], duration: 200 },
    { position: path[1], duration: 400 },
    { position: path[2], duration: 600 },
    { position: path[3], duration: 800 },
    { position: path[4], duration: 1000 },
];
AMap.plugin('AMap.MoveAnimation', function(){
    const animationMarker = new AMap.Marker({
        position: new AMap.LngLat(116.397389,39.909466),
        angle: 90,
    });
    animationMarker.moveAlong(customData);
});
startMove()
开启点标记动画，加载 AMap.MoveAnimation 后可以使用

示例代码：
animationMarker.startMove();
stopMove()
停止点标记动画，加载 AMap.MoveAnimation 后可以使用

示例代码：
animationMarker.stopMove();
resumeMove()
重新启动点标记动画，加载 AMap.MoveAnimation 后可以使用

示例代码：
animationMarker.resumeMove();
AnimationCallback
MoveAnimation 回调函数

Type: function

参数说明：
index (number) 运行到点的索引
data (LngLat) 当前点经纬度
返回值：
number:
EasingCallback
时间函数回调

Type: function

参数说明：
passedTime (number) 已经过去的时长
返回值：
number:
信息窗体
用于在地图上展示复杂的说明性信息的类型

AMap.InfoWindow
信息窗体，地图仅可同时展示一个信息窗体，推荐为信息窗体通过样式显示设置尺寸。 * // 亲手试一试

new AMap.InfoWindow(opts: InfoOptions)
参数说明：
opts (InfoOptions) 信息窗体参数
属性	描述
opts.isCustom
类型：boolean	是否自定义窗体。设为true时，信息窗体外框及内容完全按照content所设的值添加（默认为false，即在系统默认的信息窗体外框中显示content内容）
opts.autoMove
类型：boolean	是否自动调整窗体到视野内（当信息窗体超出视野范围时，通过该属性设置是否自动平移地图，使信息窗体完全显示）
opts.avoid
类型：Array<number>	autoMove 为 true 时，自动平移到视野内后的上右下左的避让宽度。默认值： [20, 20, 20, 20]
opts.closeWhenClickMap
类型：boolean	控制是否在鼠标点击地图后关闭信息窗体，默认false，鼠标点击地图后不关闭信息窗体
opts.content
类型：(String | HTMLElement)	显示内容，可以是HTML要素字符串或者HTMLElement对象, 自定义窗体示例
opts.size
类型：Size	信息窗体尺寸（isCustom为true时，该属性无效）
opts.anchor
类型：string	信息窗体锚点。默认值：'bottom-center'。可选值：'top-left'|'top-center'|'top-right'|'middle-left'|'center'|'middle-right'|'bottom-left'|'bottom-center'|'bottom-right'
opts.offset
类型：(Vector | Pixel)	信息窗体显示位置偏移量。默认基准点为信息窗体的底部中心。默认值: [0, 0]
opts.position
类型：(Vector | LngLat)	信息窗体显示基点位置
示例代码：
var infoWindow = new AMap.InfoWindow({
   content: '信息窗体',
   anchor: 'bottom-center',
});
// 在地图上打开信息窗体
infoWindow.open(map, [116.397389,39.909466]);
成员函数：
open(map, position, height)
打开信息窗体

参数说明：
map (Map)
position (Vector2)
height (number)
getIsOpen()
获取信息窗体是否打开

返回值：
boolean:
setSize(size)
设置信息窗体大小（isCustom为false时有效）

参数说明：
size ((Size | Vector2))
setContent(content)
获取信息窗体大小

参数说明：
content ((HTMLElement | string))
setAnchor(anchor)
设置信息窗体锚点 默认值：'bottom-center'。可选值：'top-left'|'top-center'|'top-right'|'middle-left'|'center'|'middle-right'|'bottom-left'|'bottom-center'|'bottom-right'

参数说明：
anchor (string)
getExtData()
获取用户自定义属性

返回值：
(any | undefined):
setExtData(extData)
设置用户自定义属性

参数说明：
extData (any)
事件：
open
信息窗体打开之后触发事件

close
信息窗体关闭之后触发事件

右键菜单
AMap.ContextMenu
右键菜单 亲手试一试

new AMap.ContextMenu(opts: OverlayOptions)
参数说明：
opts (OverlayOptions) 右键菜单参数
属性	描述
opts.position
类型：(Vector2 | LngLat)	右键菜单显示的位置
opts.content
类型：(string | HTMLElement)	右键菜单内容（针对自定义菜单时，添加菜单内容及功能。可以是HTML要素字符串或者HTML DOM对象。）
示例代码：
// 创建一个右键菜单实例
var contextMenu = new AMap.ContextMenu();
//右键放大
contextMenu.addItem("放大一级", function () {
    var zoom = map.getZoom();
    map.setZoom(zoom++);
}, 0);
// 在地图上指定位置打开右键菜单
contextMenu.open(map, [116.397389,39.909466]);
成员函数：
open(map, position)
打开右键菜单

参数说明：
map (Map)
position (Vector2)
close()
关闭右键菜单

addItem(text, fn, num)
菜单添加一条内容

参数说明：
text (string)
fn (EventListener)
num (number)
removeItem(text, fn)
菜单移除一条内容

参数说明：
text (string)
fn (EventListener)
事件：
open
右键菜单打开事件

close
右键菜单关闭事件

矢量图形
用于在地图上绘制线、面等矢量地图要素的类型

AMap.Polygon
构造多边形对象，通过PolygonOptions指定多边形样式

new AMap.Polygon(opts: PolygonOptions)
Implements Event

参数说明：
opts (PolygonOptions)
属性	描述
opts.path
类型：(Array<LngLat> | Array<Array<LngLat>> | Array<Array<Array<LngLat>>>)	多边形轮廓线的节点坐标数组。 支持 单个普通多边形({Array })，单个带孔多边形({Array<Array >})，多个带孔多边形({Array<Array<Array >>})
opts.zIndex
类型：number
default 10	多边形覆盖物的叠加顺序。地图上存在多个多边形覆盖物叠加时，通过该属性使级别较高的多边形覆盖物在上层显示
opts.bubble
类型：boolean
default false	是否将覆盖物的鼠标或touch等事件冒泡到地图上（自v1.3 新增）
opts.cursor
类型：string?	指定鼠标悬停时的鼠标样式，自定义cursor，IE仅支持cur/ani/ico格式，Opera不支持自定义cursor
opts.strokeColor
类型：string
default #00D3FC	线条颜色，使用16进制颜色代码赋值。默认值为#00D3FC
opts.strokeOpacity
类型：number
default 0.9	轮廓线透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.9
opts.strokeWeight
类型：number
default 2	轮廓线宽度
opts.fillColor
类型：string
default #00B2D5	多边形填充颜色，使用16进制颜色代码赋值，如：#00B2D5
opts.fillOpacity
类型：number
default 0.5	多边形填充透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.5
opts.draggable
类型：boolean
default false	设置多边形是否可拖拽移动，默认为false
opts.height
类型：number
default 0	设置 polygon 是否离地绘制，默认值为0 。大于0时离地绘制，此时平面高度等于 height 属性值加 polygon 质心点绝对海拔高度值，可以通过getPlaneHeight() 方法获取当前平面高度值（此属性适用于 JSAPI v2.1Beta及以上的版本）。
opts.extrusionHeight
类型：number
default 0	设置多边形是否拉伸为的立面体高度值，默认值为0
opts.wallColor
类型：(Array<String> | String)
default #00D3FC	polygon 立面体侧面颜色，支持 rgba、rgb、十六进制等。默认为#00D3FC
opts.roofColor
类型：(Array<String> | String)
default #00B2D5	polygon 立面体顶面颜色，支持 rgba、rgb、十六进制等。默认为#00B2D5
opts.extData
类型：object?	用户自定义属性，支持JavaScript API任意数据类型，如Polygon的id等。
opts.strokeStyle
类型：("solid" | "dashed")
default solid	轮廓线样式，实线:solid，虚线:dashed
opts.strokeDasharray
类型：Array<number>?	勾勒形状轮廓的虚线和间隙的样式，此属性在strokeStyle 为dashed 时有效， 此属性在ie9+浏览器有效 取值： 实线： [0,0,0] 虚线： [10,10] ， [10,10] 表示10个像素的实线和10个像素的空白（如此反复）组成的虚线 点画线： [10,2,10] ， [10,2,10] 表示10个像素的实线和2个像素的空白 + 10个像素的实线和10个像素的空白 （如此反复）组成的虚线
成员函数：
hide()
隐藏多边形

show()
显示多边形

getExtData()
获取用户自定义属性

返回值：
Object:
setExtData(extData)
设置用户自定义属性，支持JavaScript API任意数据类型

参数说明：
extData (Object)
getOptions()
获取多边形的属性

返回值：
Object: 多边形配置
setOptions(PolygonOptions)
修改多边形属性（样式风格，包括组成多边形轮廓线的节点、轮廓线样式等。属性详情参看PolygonOptions列表）

参数说明：
PolygonOptions (any)
getPath()
获取多边形轮廓线节点数组。

返回值：
(Array<LngLat> | Array<Array<LngLat>> | Array<Array<Array<LngLat>>>): 返回路径
setHeight(height)
设置多边形离地高度 （此方法和相关属性 height 适用于 JSAPI v2.1Beta 及以上版本）

参数说明：
height (Number)
setExtrusionHeight(extrusionHeight)
设置立面体高度值

参数说明：
extrusionHeight (number)
getExtrusionHeight()
返回值：
number: 立面体高度值
getBounds()
返回值：
Bounds:
destroy()
销毁内存-多边形

getArea(isTerrain)
获取多边形的面积（单位：平方米）

参数说明：
isTerrain (Boolean) 若开启 terrain 则在地形基础上进行面积测量， 默认值为false
返回值：
number: 面积值
contains(originPoint)
判断坐标是否在多边形内

参数说明：
originPoint (LngLatLike)
返回值：
boolean: true 包含，false 不包含
setPath(path?)
多边形轮廓线的节点坐标数组。支持 单个普通多边形({Array})，单个带孔多边形({Array<Array>})，多个带孔多边形({Array<Array<Array>>})

参数说明：
path ((Array<LngLatLike> | Array<Array<LngLatLike>> | Array<Array<Array<LngLatLike>>>)?)
getPlaneHeight()
获取离地多边形平面绝对海拔高度值 （此方法适用于 JSAPI v2.1Beta 及以上版本）

返回值：
number: 多边形平面海拔高度值
事件：
hide
隐藏

属性说明：
data ({type: string, target: Object})
show
显示

属性说明：
data ({type: string, target: Object})
click
鼠标左键单击事件

属性说明：
data (MapsEvent)
dblclick
鼠标左键双击事件

属性说明：
data (MapsEvent)
rightclick
鼠标右键单击事件

属性说明：
data (MapsEvent)
mousedown
鼠标按下

属性说明：
data (MapsEvent)
mouseup
鼠标抬起

属性说明：
data (MapsEvent)
mouseover
鼠标经过

属性说明：
data (MapsEvent)
mouseout
鼠标移出

属性说明：
data (MapsEvent)
dragstart
开始拖拽时触发

属性说明：
data (MapsEvent)
dragging
拖拽过程中触发

属性说明：
data (MapsEvent)
dragend
拖拽结束时触发

属性说明：
data (MapsEvent)
touchstart
触摸开始时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchmove
触摸移动进行中时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchend
触摸结束时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
AMap.Polyline
构造折线对象，支持 lineString 和 MultiLineString

new AMap.Polyline(opts: any)
Implements Event

参数说明：
opts (any) {PolylineOptions}
属性	描述
opts.path
类型：(Array<LngLat> | Array<Array<LngLat>>)	polyline 路径，支持 lineString 和 MultiLineString
opts.zIndex
类型：number
default 10	多边形覆盖物的叠加顺序。地图上存在多个多边形覆盖物叠加时，通过该属性使级别较高的多边形覆盖物在上层显示
opts.bubble
类型：boolean
default false	是否将覆盖物的鼠标或touch等事件冒泡到地图上（自v1.3 新增）
opts.cursor
类型：string?	指定鼠标悬停时的鼠标样式，自定义cursor，IE仅支持cur/ani/ico格式，Opera不支持自定义cursor
opts.strokeColor
类型：string
default #00D3FC	线条颜色，使用16进制颜色代码赋值。默认值为#00D3FC
opts.strokeOpacity
类型：number
default 0.5	轮廓线透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.5
opts.strokeWeight
类型：number
default 2	轮廓线宽度,默认为:2
opts.isOutline
类型：boolean
default false	是否显示描边,默认false
opts.borderWeight
类型：number
default 1	描边的宽度，默认为1
opts.outlineColor
类型：string
default #00B2D5	线条描边颜色，此项仅在isOutline为true时有效，默认：#00B2D5
opts.draggable
类型：boolean
default false	设置多边形是否可拖拽移动，默认为false
opts.height
类型：number
default 0	设置polyline是否离地绘制，默认值为0，大于0时离地绘制，此时polyline高度等于height属性值加polyine起点绝对高程值。可以通过getPolylineHeight()获取当前折线高度值（此属性适用于 JSAPI v2.1及以上版本）。
opts.extData
类型：object?	用户自定义属性，支持JavaScript API任意数据类型，如Polygon的id等
opts.strokeStyle
类型：("solid" | "dashed")
default solid	轮廓线样式，实线:solid，虚线:dashed
opts.strokeDasharray
类型：Array<number>?	勾勒形状轮廓的虚线和间隙的样式，此属性在strokeStyle 为dashed 时有效， 此属性在ie9+浏览器有效 取值： 实线： [0,0,0] 虚线： [10,10] ， [10,10] 表示10个像素的实线和10个像素的空白（如此反复）组成的虚线 点画线： [10,2,10] ， [10,2,10] 表示10个像素的实线和2个像素的空白 + 10个像素的实线和10个像素的空白 （如此反复）组成的虚线
opts.lineJoin
类型：("miter" | "round" | "bevel")
default miter	折线拐点的绘制样式，默认值为'miter'尖角，其他可选值：'round'圆角、'bevel'斜角
opts.lineCap
类型：("butt" | "round" | "square")
default butt	折线两端线帽的绘制样式，默认值为'butt'无头，其他可选值：'round'圆头、'square'方头
opts.geodesic
类型：boolean
default false	是否绘制成大地线，默认false
opts.showDir
类型：boolean
default false	是否延路径显示白色方向箭头,默认false。建议折线宽度大于6时使用
成员函数：
hide()
隐藏折线

show()
显示折线

getExtData()
获取用户自定义属性

返回值：
Object:
getOptions()
获取线的属性

返回值：
PolylineOptions:
getPath()
获取折线路径的节点数组。

返回值：
(Array<LngLat> | Array<Array<LngLat>>):
setExtData(extData)
设置用户自定义属性，支持JavaScript API任意数据类型

参数说明：
extData (Object)
setHeight(height)
设置折线离地高度 （此方法和相关属性 height 适用于 JSAPI v2.1Beta 及以上版本）

参数说明：
height (number)
destroy()
销毁内存-折线

getBounds()
获取当前折线的矩形范围对象

返回值：
(Bounds | undefined):
setPath(path?)
设置组成该折线的节点数组,支持单条折线(LngLatLike[]) 多条折线（LngLatLike[][]）

参数说明：
path ((Array<LngLatLike> | Array<Array<LngLatLike>>)?)
返回值：
any:
moveWithPos(dx, dy)
参数说明：
dx (any)
dy (any)
getLength(isTerrain)
获取折线的总长度（单位：米）

参数说明：
isTerrain (boolean) 是否在地形基础上进行距离测量 默认为false
返回值：
any: 返回折线总长度
getEndDistance()
generateBuffer(gl)
参数说明：
gl (any)
setOptions(optsArg)
修改折线属性（包括路径的节点、线样式、是否绘制大地线等。属性详情参看PolylineOptions列表)

参数说明：
optsArg (PolylineOptions)
contains(point)
判断坐标是否在折线内

参数说明：
point (LngLatLike)
返回值：
boolean:
getPolylineHeight()
获取当前Polyline海拔高度值 （此方法适用于 JSAPI 2.1Beta 及以上版本）

返回值：
any: {number}
事件：
hide
隐藏

属性说明：
data ({type: string, target: Object})
show
显示

属性说明：
data ({type: string, target: Object})
click
鼠标左键单击事件

属性说明：
data (MapsEvent)
dblclick
鼠标左键双击事件

属性说明：
data (MapsEvent)
rightclick
鼠标右键单击事件

属性说明：
data (MapsEvent)
mousedown
鼠标按下

属性说明：
data (MapsEvent)
mouseup
鼠标抬起

属性说明：
data (MapsEvent)
mouseover
鼠标经过

属性说明：
data (MapsEvent)
mouseout
鼠标移出

属性说明：
data (MapsEvent)
touchstart
触摸开始时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchmove
触摸移动进行中时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchend
触摸结束时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
AMap.BezierCurve
贝塞尔曲线

new AMap.BezierCurve(opts: BezierCurveOptions)
Implements Event

参数说明：
opts (BezierCurveOptions) BezierCurve配置项
属性	描述
opts.path
类型：Array	贝瑟尔曲线的路径。描述为一个二维数组规则如下：第一个元素是起点， 之后的元素同时描述控制点和途经点，之后每个元素可以有0个到2个控制点 控制点在前，途经点在最后 [ [lng,lat] ,//起点0 [lng,lat,lng,lat,lng,lat] ,//控制点、控制点、途经点2 [lng,lat,lng,lat] //控制点、途经点3 ] 或者 [ [ [lng,lat] ],//起点0 [ [lng,lat] , [lng,lat] ],//控制点、途经点1 [ [lng,lat] , [lng,lat] , [lng,lat] ],//控制点、控制点、途经点2 [ [lng,lat] , [lng,lat] ]//控制点、途经点3 ]
opts.path
类型：(Array<LngLat> | Array<Array<LngLat>>)	polyline 路径，支持 lineString 和 MultiLineString
opts.zIndex
类型：number
default 10	多边形覆盖物的叠加顺序。地图上存在多个多边形覆盖物叠加时，通过该属性使级别较高的多边形覆盖物在上层显示
opts.bubble
类型：boolean
default false	是否将覆盖物的鼠标或touch等事件冒泡到地图上（自v1.3 新增）
opts.cursor
类型：string?	指定鼠标悬停时的鼠标样式，自定义cursor，IE仅支持cur/ani/ico格式，Opera不支持自定义cursor
opts.strokeColor
类型：string
default #00D3FC	线条颜色，使用16进制颜色代码赋值。默认值为#00D3FC
opts.strokeOpacity
类型：number
default 0.5	轮廓线透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.5
opts.strokeWeight
类型：number
default 2	轮廓线宽度
opts.borderWeight
类型：number
default 2	描边线宽度
opts.isOutline
类型：boolean
default false	是否显示描边,默认false
opts.borderWeight
类型：number
default 1	描边的宽度，默认为1
opts.outlineColor
类型：string
default #00B2D5	线条描边颜色，此项仅在isOutline为true时有效，默认：#00B2D5
opts.height
类型：number
default 0	设置贝瑟尔曲线是否离地绘制，默认值为0；大于0时离地绘制，此时曲线高度等于height值加曲线起点高程值，可以通过getPolylineHeight获取当前折线高度值（此属性只适用于JSAPI v2.1Beta 及以上版本）。
opts.draggable
类型：boolean
default false	设置多边形是否可拖拽移动，默认为false
opts.extData
类型：object?	用户自定义属性，支持JavaScript API任意数据类型，如Polygon的id等
opts.strokeStyle
类型：("solid" | "dashed")
default solid	轮廓线样式，实线:solid，虚线:dashed
opts.strokeDasharray
类型：Array<number>?	勾勒形状轮廓的虚线和间隙的样式，此属性在strokeStyle 为dashed 时有效， 此属性在ie9+浏览器有效 取值： 实线： [0,0,0] 虚线： [10,10] ， [10,10] 表示10个像素的实线和10个像素的空白（如此反复）组成的虚线 点画线： [10,2,10] ， [10,2,10] 表示10个像素的实线和2个像素的空白 + 10个像素的实线和10个像素的空白 （如此反复）组成的虚线
opts.lineJoin
类型：("miter" | "round" | "bevel")
default miter	折线拐点的绘制样式，默认值为'miter'尖角，其他可选值：'round'圆角、'bevel'斜角
opts.lineCap
类型：("butt" | "round" | "square")
default butt	折线两端线帽的绘制样式，默认值为'butt'无头，其他可选值：'round'圆头、'square'方头
opts.geodesic
类型：boolean
default false	是否绘制成大地线，默认false
opts.showDir
类型：boolean
default false	是否延路径显示白色方向箭头,默认false。建议折线宽度大于6时使用
成员函数：
setOptions(optsArg)
修改折线属性（包括路径的节点、线样式、是否绘制大地线等。属性详情参看 BezierCurveOptions 列表）

参数说明：
optsArg (BezierCurveOptions)
generateBuffer(gl)
参数说明：
gl (any)
getPath()
获取贝塞尔曲线路径的节点数组

返回值：
(Array<Array<number>> | Array<Array<Array<number>>>):
setPath(path)
设置组成该折线的节点数组

参数说明：
path ((Array<Array<number>> | Array<Array<Array<number>>>)) 贝瑟尔曲线的路径。描述为一个二维数组规则如下：第一个元素是起点， 之后的元素同时描述控制点和途经点，之后每个元素可以有0个到2个控制点 控制点在前，途经点在最后 [ [lng,lat] ,//起点0 [lng,lat,lng,lat,lng,lat] ,//控制点、控制点、途经点2 [lng,lat,lng,lat] //控制点、途经点3 ] 或者 [ [ [lng,lat] ],//起点0 [ [lng,lat] , [lng,lat] ],//控制点、途经点1 [ [lng,lat] , [lng,lat] , [lng,lat] ],//控制点、控制点、途经点2 [ [lng,lat] , [lng,lat] ]//控制点、途经点3 ]
getBounds()
获取当前折线的矩形范围对象

返回值：
(Bounds | undefined):
getBounds()
获取当前折线的矩形范围对象

返回值：
(Bounds | undefined): Bounds对象，未设置路径时为 undefined
hide()
隐藏贝塞尔线

show()
显示贝塞尔曲线

setHeight(height)
设置贝塞尔曲线离地高度 （此方法和相关属性 height 适用于 JSAPI v2.1Beta 及以上版本）

参数说明：
height (number)
getPolylineHeight()
获取当前贝塞尔曲线离地高度值 （此方法适用于 JSAPI 2.1Beta 及以上版本）

返回值：
any: {number}
getExtData()
获取用户自定义属性

返回值：
Object:
setExtData(extData)
设置用户自定义属性，支持JavaScript API任意数据类型

参数说明：
extData (Object)
destroy()
销毁内存-贝塞尔曲线

getOptions()
获取线的属性

返回值：
BezierCurveOptions:
contains(point)
判断坐标是否在曲线内

参数说明：
point (LngLatLike)
返回值：
boolean:
getLength()
获取曲线的总长度（单位：米）

返回值：
number:
事件：
hide
隐藏

属性说明：
data ({type: string, target: Object})
show
显示

属性说明：
data ({type: string, target: Object})
click
鼠标左键单击事件

属性说明：
data (MapsEvent)
dblclick
鼠标左键双击事件

属性说明：
data (MapsEvent)
rightclick
鼠标右键单击事件

属性说明：
data (MapsEvent)
mousedown
鼠标按下

属性说明：
data (MapsEvent)
mouseup
鼠标抬起

属性说明：
data (MapsEvent)
mouseover
鼠标经过

属性说明：
data (MapsEvent)
mouseout
鼠标移出

属性说明：
data (MapsEvent)
touchstart
触摸开始时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchmove
触摸移动进行中时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchend
触摸结束时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
AMap.Circle
构造圆形对象，通过CircleOptions指定多边形样式

new AMap.Circle(opts: CircleOptions)
Implements Event

参数说明：
opts (CircleOptions)
属性	描述
opts.center
类型：LngLat	圆心位置
opts.radius
类型：number	圆半径，单位:米
opts.zIndex
类型：number
default 10	多边形覆盖物的叠加顺序。地图上存在多个多边形覆盖物叠加时，通过该属性使级别较高的多边形覆盖物在上层显示
opts.bubble
类型：boolean
default false	是否将覆盖物的鼠标或touch等事件冒泡到地图上（自v1.3 新增）
opts.cursor
类型：string?	指定鼠标悬停时的鼠标样式，自定义cursor，IE仅支持cur/ani/ico格式，Opera不支持自定义cursor
opts.strokeColor
类型：string
default #00D3FC	轮廓线颜色，使用16进制颜色代码赋值。默认值为#00D3FC
opts.strokeOpacity
类型：number
default 0.9	轮廓线透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.9
opts.strokeWeight
类型：number
default 2	轮廓线宽度
opts.fillColor
类型：string
default #00B2D5	多边形填充颜色，使用16进制颜色代码赋值，如：#00B2D5
opts.fillOpacity
类型：number
default 0.5	多边形填充透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.5
opts.draggable
类型：boolean
default false	设置多边形是否可拖拽移动，默认为false
opts.height
类型：number
default 0	设置圆是否离地绘制，默认值为0；大于0时离地绘制，此时圆平面高度等于height值加Circle质心点高程值，可以通过getPlaneHeight方法获取当前圆平面高度值（此属性只适用于JSAPI v2.1Beta及以上版本）。
opts.extData
类型：object?	用户自定义属性，支持JavaScript API任意数据类型，如Polygon的id等
opts.strokeStyle
类型：("solid" | "dashed")
default solid	轮廓线样式，实线:solid，虚线:dashed
opts.strokeDasharray
类型：Array<number>?	勾勒形状轮廓的虚线和间隙的样式，此属性在strokeStyle 为dashed 时有效， 此属性在ie9+浏览器有效 取值： 实线： [0,0,0] 虚线： [10,10] ， [10,10] 表示10个像素的实线和10个像素的空白（如此反复）组成的虚线 点画线： [10,2,10] ， [10,2,10] 表示10个像素的实线和2个像素的空白 + 10个像素的实线和10个像素的空白 （如此反复）组成的虚线
成员函数：
svgDom
svgDom
setCenter(center)
设置圆中心点

参数说明：
center (LngLatLike)
setRadius(radius)
设置圆形的半径

参数说明：
radius (number)
getCenter()
获取圆中心点

返回值：
LngLat: center
getRadius()
获取圆形的半径

返回值：
number: radius
contains(point)
判断指定点坐标是否在圆内

参数说明：
point (LngLatLike)
返回值：
boolean:
setOptions(optsArg)
修改圆属性（样式风格，包括组成圆形轮廓线的节点、轮廓线样式等。属性详情参看CircleOptions列表）

参数说明：
optsArg (CircleOptions)
hide()
隐藏圆形

setHeight(height)
设置圆平面离地高度 （此方法和相关属性 height 适用于 JSAPI v2.1Beta 及以上版本）

参数说明：
height (Number)
getPlaneHeight()
返回值：
number:
show()
显示圆形

getExtData()
获取用户自定义属性

返回值：
Object:
setExtData(extData)
设置用户自定义属性，支持JavaScript API任意数据类型

参数说明：
extData (Object)
destroy()
销毁内存-圆形

getArea()
获取面积,平米

返回值：
number:
getOptions()
获取圆形的属性

返回值：
CircleOptions:
事件：
hide
隐藏

属性说明：
data ({type: string, target: Object})
show
显示

属性说明：
data ({type: string, target: Object})
click
鼠标左键单击事件

属性说明：
data (MapsEvent)
dblclick
鼠标左键双击事件

属性说明：
data (MapsEvent)
rightclick
鼠标右键单击事件

属性说明：
data (MapsEvent)
mousedown
鼠标按下

属性说明：
data (MapsEvent)
mouseup
鼠标抬起

属性说明：
data (MapsEvent)
mouseover
鼠标经过

属性说明：
data (MapsEvent)
mouseout
鼠标移出

属性说明：
data (MapsEvent)
touchstart
触摸开始时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchmove
触摸移动进行中时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchend
触摸结束时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
AMap.CircleMarker
构造圆形对象，通过CircleOptions指定多边形样式

new AMap.CircleMarker(opts: CircleMarkerOptions)
参数说明：
opts (CircleMarkerOptions)
属性	描述
opts.center
类型：LngLat	圆心位置
opts.radius
类型：number	圆半径，单位:px 最大值64
opts.zIndex
类型：number
default 10	多边形覆盖物的叠加顺序。地图上存在多个多边形覆盖物叠加时，通过该属性使级别较高的多边形覆盖物在上层显示
opts.bubble
类型：boolean
default false	是否将覆盖物的鼠标或touch等事件冒泡到地图上（自v1.3 新增）
opts.cursor
类型：string?	指定鼠标悬停时的鼠标样式，自定义cursor，IE仅支持cur/ani/ico格式，Opera不支持自定义cursor
opts.strokeColor
类型：string
default #00D3FC	轮廓线颜色，使用16进制颜色代码赋值。默认值为#00D3FC
opts.strokeOpacity
类型：number
default 0.9	轮廓线透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.9
opts.strokeWeight
类型：number
default 2	轮廓线宽度
opts.fillColor
类型：string
default #00B2D5	多边形填充颜色，使用16进制颜色代码赋值，如：#00B2D5
opts.fillOpacity
类型：number
default 0.5	多边形填充透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.5
opts.draggable
类型：boolean
default false	设置多边形是否可拖拽移动，默认为false
opts.extData
类型：object?	用户自定义属性，支持JavaScript API任意数据类型，如Polygon的id等
成员函数：
contains(point)
判断指定点坐标是否在圆内

参数说明：
point (LngLatLike)
返回值：
boolean:
hide()
隐藏圆点

setRadius(radius)
设置圆点的半径

参数说明：
radius (number)
generateBuffer()
getCenter()
获取圆点中心

返回值：
LngLat:
getRadius()
获取圆点的半径

返回值：
number:
show()
显示CircleMarker

setOptions(optsArg)
修改圆点标记的属性（样式风格，包括轮廓线、填充色等。属性详情参看CircleMarkerOptions列表）

参数说明：
optsArg (CircleMarkerOptions)
getOptions()
获取圆点的属性

返回值：
CircleMarkerOptions:
getExtData()
获取用户自定义属性

返回值：
Object:
getCurAltitude()
获取当前CircleMarker 的绝对高度

返回值：
any: {number}
setExtData(extData)
设置用户自定义属性，支持JavaScript API任意数据类型

参数说明：
extData (Object)
destroy()
销毁内存-CircleMarker

事件：
hide
隐藏

属性说明：
data ({type: string, target: Object})
show
显示

属性说明：
data ({type: string, target: Object})
click
鼠标左键单击事件

属性说明：
data (MapsEvent)
dblclick
鼠标左键双击事件

属性说明：
data (MapsEvent)
rightclick
鼠标右键单击事件

属性说明：
data (MapsEvent)
mousedown
鼠标按下

属性说明：
data (MapsEvent)
mouseup
鼠标抬起

属性说明：
data (MapsEvent)
mouseover
鼠标经过

属性说明：
data (MapsEvent)
mouseout
鼠标移出

属性说明：
data (MapsEvent)
touchstart
触摸开始时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchmove
触摸移动进行中时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchend
触摸结束时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
AMap.Ellipse
构造多边形对象，通过EllipseOptions指定多边形样式

new AMap.Ellipse(opts: EllipseOptions)
Implements Event

参数说明：
opts (EllipseOptions)
属性	描述
opts.center
类型：LngLatLike	椭圆圆心
opts.radius
类型：[number, number]	椭圆的半径，用2个元素的数组表示，单位：米 如： radius: [1000, 2000] 表示横向半径是1000，纵向的半径是2000 默认值： [1000, 1000]
opts.zIndex
类型：number
default 10	椭圆覆盖物的叠加顺序。地图上存在多个多边形覆盖物叠加时，通过该属性使级别较高的多边形覆盖物在上层显示
opts.bubble
类型：boolean
default false	是否将覆盖物的鼠标或touch等事件冒泡到地图上
opts.cursor
类型：string?	指定鼠标悬停时的鼠标样式，自定义cursor，IE仅支持cur/ani/ico格式，Opera不支持自定义cursor
opts.strokeColor
类型：string
default #00D3FC	线条颜色，使用16进制颜色代码赋值。默认值为#00D3FC
opts.strokeOpacity
类型：number
default 0.9	轮廓线透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.9
opts.strokeWeight
类型：number
default 2	轮廓线宽度
opts.fillColor
类型：string
default #00B2D5	椭圆填充颜色，使用16进制颜色代码赋值，如：#00B2D5
opts.fillOpacity
类型：number
default 0.5	椭圆填充透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.5
opts.draggable
类型：boolean
default false	设置椭圆是否可拖拽移动，默认为false
opts.height
类型：number
default 0	设置椭圆是否离地绘制，默认值为0.0；大于0时离地绘制，此时椭圆平面高度等于height值加Ellipse质心点高程值，可以通过getPlaneHeight方法获取当前椭圆平面高度值（此属性适用于v2.1JSAPI 及以上版本）。
opts.extData
类型：object?	用户自定义属性，支持JavaScript API任意数据类型，如 id 等
opts.strokeStyle
类型：("solid" | "dashed")
default solid	轮廓线样式，实线:solid，虚线:dashed
opts.strokeDasharray
类型：Array<number>?	勾勒形状轮廓的虚线和间隙的样式，此属性在strokeStyle 为dashed 时有效， 此属性在ie9+浏览器有效 取值： 实线： [0,0,0] 虚线： [10,10] ， [10,10] 表示10个像素的实线和10个像素的空白（如此反复）组成的虚线 点画线： [10,2,10] ， [10,2,10] 表示10个像素的实线和2个像素的空白 + 10个像素的实线和10个像素的空白 （如此反复）组成的虚线
成员函数：
path
svgDom
centroid
setCenter(center)
设置椭圆的中心点

参数说明：
center (LngLatLike)
setRadius(radius)
设置椭圆的半径

参数说明：
radius ([number, number])
setHeight(height)
设置椭圆离地高度 （此方法和相关属性 height 适用于 JSAPI v2.1Beta 及以上版本）

参数说明：
height (number)
getCenter()
获取椭圆的圆心

返回值：
LngLat:
getRadius()
获取椭圆的半径

返回值：
number:
generateBuffer(gl)
参数说明：
gl (any)
hide()
隐藏椭圆

setOptions(optsArg)
修改椭圆属性（样式风格，包括组成椭圆轮廓线的节点、轮廓线样式等。属性详情参看Ellipse

参数说明：
optsArg (EllipseOptions)
getPlaneHeight()
获取当前平面高度值 （此方法适用于 JSAPI v2.1Beta 及以上版本）

返回值：
any: {number}
show()
显示椭圆

getExtData()
获取用户自定义属性

返回值：
Object:
setExtData(extData)
设置用户自定义属性，支持JavaScript API任意数据类型

参数说明：
extData (Object)
destroy()
销毁内存-椭圆

getArea()
获取面积,平米

返回值：
number:
contains(point)
判断指定点坐标是否在椭圆内

参数说明：
point (LngLatLike)
getOptions()
获取椭圆的属性

返回值：
EllipseOptions:
事件：
hide
隐藏

属性说明：
data ({type: string, target: Object})
show
显示

属性说明：
data ({type: string, target: Object})
click
鼠标左键单击事件

属性说明：
data (MapsEvent)
dblclick
鼠标左键双击事件

属性说明：
data (MapsEvent)
rightclick
鼠标右键单击事件

属性说明：
data (MapsEvent)
mousedown
鼠标按下

属性说明：
data (MapsEvent)
mouseup
鼠标抬起

属性说明：
data (MapsEvent)
mouseover
鼠标经过

属性说明：
data (MapsEvent)
mouseout
鼠标移出

属性说明：
data (MapsEvent)
touchstart
触摸开始时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchmove
触摸移动进行中时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchend
触摸结束时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
AMap.Rectangle
构造矩形对象，通过RectangleOptions指定多边形样式

new AMap.Rectangle(opts: RectangleOptions)
Implements Event

参数说明：
opts (RectangleOptions)
属性	描述
opts.map
类型：Map	要显示该覆盖物的地图对象
opts.bounds
类型：Bounds	矩形的范围
opts.zIndex
类型：number
default 10	矩形覆盖物的叠加顺序。地图上存在多个矩形覆盖物叠加时，通过该属性使级别较高的矩形覆盖物在上层显示
opts.bubble
类型：boolean
default false	是否将覆盖物的鼠标或touch等事件冒泡到地图上（自v1.3 新增）
opts.cursor
类型：string?	指定鼠标悬停时的鼠标样式，自定义cursor，IE仅支持cur/ani/ico格式，Opera不支持自定义cursor
opts.strokeColor
类型：string
default #00D3FC	线条颜色，使用16进制颜色代码赋值。默认值为#00D3FC
opts.strokeOpacity
类型：number
default 0.9	轮廓线透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.9
opts.strokeWeight
类型：number
default 2	轮廓线宽度
opts.fillColor
类型：string
default #00B2D5	矩形填充颜色，使用16进制颜色代码赋值，如：#00B2D5
opts.fillOpacity
类型：number
default 0.5	矩形填充透明度，取值范围 [0,1] ，0表示完全透明，1表示不透明。默认为0.5
opts.draggable
类型：boolean
default false	设置矩形是否可拖拽移动，默认为false
opts.height
类型：number
default 0	设置矩形平面是否离地绘制，默认值为0；大于0时离地绘制，此时矩形平面高度等于height值加Rectangle质心点高程值，可以通过getPlaneHeight方法获取当前平面高度值。（此属性适用于 JSAPI 2.1Beta 及以上版本）
opts.extData
类型：object?	用户自定义属性，支持JavaScript API任意数据类型，如Polygon的id等
opts.strokeStyle
类型：("solid" | "dashed")
default solid	轮廓线样式，实线:solid，虚线:dashed
opts.strokeDasharray
类型：Array<number>?	勾勒形状轮廓的虚线和间隙的样式，此属性在strokeStyle 为dashed 时有效， 此属性在ie9+浏览器有效 取值： 实线： [0,0,0] 虚线： [10,10] ， [10,10] 表示10个像素的实线和10个像素的空白（如此反复）组成的虚线 点画线： [10,2,10] ， [10,2,10] 表示10个像素的实线和2个像素的空白 + 10个像素的实线和10个像素的空白 （如此反复）组成的虚线
成员函数：
contains(point)
判断坐标是否在矩形上

参数说明：
point (LngLatLike)
返回值：
boolean:
setBounds(bounds)
设置矩形的范围

参数说明：
bounds (Bounds)
返回值：
void:
generateBuffer(gl)
参数说明：
gl (any)
setOptions(optsArg)
修改矩形属性（样式风格，包括组成矩形轮廓线的节点、轮廓线样式等。属性详情参看RectangleOptions列表）

参数说明：
optsArg (RectangleOptions)
getPlaneHeight()
获取当前矩形平面高度值 （此方法适用于 JSAPI 2.1Beta 及以上版本）

返回值：
any: {number}
hide()
隐藏矩形

setHeight(height)
设置矩形离地高度 （此方法和相关属性 height 适用于 JSAPI v2.1Beta 及以上版本）

参数说明：
height (number)
getCenter()
获取矩形的中心点

返回值：
LngLat:
show()
显示矩形

getExtData()
获取用户自定义属性

返回值：
Object:
setExtData(extData)
设置用户自定义属性，支持JavaScript API任意数据类型

参数说明：
extData (Object)
destroy()
销毁内存-矩形

getArea()
获取面积,平米

返回值：
number:
getOptions()
获取矩形的属性

返回值：
RectangleOptions:
事件：
hide
隐藏

属性说明：
data ({type: string, target: Object})
show
显示

属性说明：
data ({type: string, target: Object})
click
鼠标左键单击事件

属性说明：
data (MapsEvent)
dblclick
鼠标左键双击事件

属性说明：
data (MapsEvent)
rightclick
鼠标右键单击事件

属性说明：
data (MapsEvent)
mousedown
鼠标按下

属性说明：
data (MapsEvent)
mouseup
鼠标抬起

属性说明：
data (MapsEvent)
mouseover
鼠标经过

属性说明：
data (MapsEvent)
mouseout
鼠标移出

属性说明：
data (MapsEvent)
touchstart
触摸开始时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchmove
触摸移动进行中时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
touchend
触摸结束时触发事件，仅适用移动设备

属性说明：
data (MapsEvent)
AMap.GeoJSON
GeoJSON类，继承自OverLayGroup，可实现GeoJSON对象与OverlayGroup的相互转换

new AMap.GeoJSON(opts: GeoJSONOptions)
参数说明：
opts (GeoJSONOptions) 创建一个GeoJSON对象，ops为初始构造参数
属性	描述
opts.geoJSON
类型：Object	要加载的标准GeoJSON对象
opts.getMarker
类型：function (geojson, lnglat)	指定点要素的绘制方式，缺省时为Marker的默认样式。geojson为当前要素对应的GeoJSON对象，lnglats为对应的线的路径
opts.getPolyline
类型：function (geojson, lnglat)	指定线要素的绘制方式，缺省时为Polyline的默认样式。geojson为当前要素对应的GeoJSON对象，lnglats为对应的线的路径
opts.getPolygon
类型：function (geojson, lnglat)	指定面要素的绘制方式，缺省时为Polygon的默认样式。geojson为当前要素对应的GeoJSON对象，lnglats为对应的线的路径
成员函数：
importData(geoJSON)
加载新的GeoJSON对象，转化为覆盖物，旧的覆盖物将移除

参数说明：
geoJSON (any)
toGeoJSON()
将当前对象包含的覆盖物转换为GeoJSON对象

返回值：
Object: GeoJSONObject
群组
用于批量操作图层和覆盖物的群组类型，可以简化代码书写

AMap.LayerGroup
LayerGroup类用来包装其它图层类的实例， 对实例集合做批量操作， 避免开发者对多个需要设置同样属性的图层实例做循环处理。
同时只要对LayerGroup执行过setMap方法后， 新添加到该LayerGroup中的图层会自动将其map属性修改到该group对应的map，
此外从group中移除该图层时，也会将该图层从group对应的map中移除。
如果对图层集合添加对某个事件的监听或解除监听， 图层集合会对集合中所有图层实例做集合处理，
只要该图层支持此事件， 该事件绑定/解除即对图层生效 相关示例

new AMap.LayerGroup(layers: Array<Layer>)
参数说明：
layers (Array<Layer>) 图层数组
成员函数：
setMap(map)
添加到地图上面

参数说明：
map (Map) 地图对象
返回值：
any:
hasLayer(layer)
判断传入的图层实例是否在集合中

参数说明：
layer (Layer)
setOptions(opts)
修改图层属性(包括线样式、样色等等)

参数说明：
opts (LayerOptions) 参数
属性	描述
opts.visible
类型：Boolean	是否可见
opts.opacity
类型：Number	透明度
opts.zIndex
类型：Number	层级
opts.zooms
类型：Array<Number>	集合可见范围
返回值：
any:
eachLayer(iterator)
对集合中的图层做迭代操作，其中iterator的函数定义是：
function(layer, index, collections)，相关含义如下：
layer: 当前迭代到的图层
index: 该图层在集合中的序列号(从0开始)
collections: 所有图层实例

参数说明：
iterator (Function)
addLayer(layer)
添加单个图层到集合中，不支持添加重复的图层

参数说明：
layer (Layer) 图层对象
addLayers(layers)
添加图层数组到集合中，不支持添加重复的图层

参数说明：
layers (Array<Layer>) 图层数组
removeLayer(layer)
从集合中删除传入的图层实例

参数说明：
layer (Layer) 图层对象
removeLayers(layers)
从集合中删除传入的图层实例数组

参数说明：
layers (Array<Layer>) 图层数组
getLayers()
获取组里所有对象，包括图层和覆盖物

返回值：
Array<Layers>:
clearLayers()
清空图层

hide()
设置图层隐藏

show()
设置图层可见

on(type, 事件回调函数)
事件批量绑定

参数说明：
type (String) 事件名称, 比如: click、mouseover
事件回调函数 (Function)
reload()
重新加载图层资源，重新渲染

返回值：
any:
AMap.OverlayGroup
OverlayGroup 类用来包装其它覆盖物类的实例，对实例集合做整体操作，避免开发者对多个需要设置同样属性的覆盖物实例做循环处理。 此外从group中移除该覆盖物时，也会将该覆盖物从group对应的map中移除。 目前OverlayGroup支持Marker, Polygon, Polyline, Circle,CircleMarker, Rectangle, Ellipse 和 BezierCurve。

new AMap.OverlayGroup(overlays: Array<Overlay>)
参数说明：
overlays (Array<Overlay>)
成员函数：
addOverlay(overlay)
添加单个覆盖物到集合中，不支持添加重复的覆盖物

参数说明：
overlay (Overlay)
addOverlays(overlays)
添加覆盖物数组到集合中，不支持添加重复的覆盖物

参数说明：
overlays (Array<Overlay>)
getOverlays()
返回当前集合中所有的覆盖物

返回值：
Array:
hasOverlay
判断传入的覆盖物实例是否在集合中

参数说明：
overlay (Overlay)
返回值：
boolean:
removeOverlay(overlay)
从集合中删除传入的覆盖物实例

参数说明：
overlay (Overlay)
removeOverlays(overlays)
从集合中删除传入的覆盖物实例数组

参数说明：
overlays (Array)
clearOverlays()
清空集合

eachOverlay(iterator)
对集合中的覆盖物做迭代操作，其中iterator的函数定义是： function(overlay, index, collections)，相关含义如下： overlay: 当前迭代到的覆盖物 index: 该覆盖物在集合中的序列号(从0开始) collections: 所有覆盖物实例

参数说明：
iterator (Function)
show()
在地图上显示集合中覆盖物

hide()
在地图上隐藏集合中覆盖物

setOptions(opt)
修改覆盖物属性(包括线样式、样色等等)

参数说明：
opt (Object)
事件：
*
集合中对应覆盖物支持的事件 如果对覆盖物集合添加对某个事件的监听或解除监听， 覆盖物集合会对集合中所有覆盖物实例做集合处理， 只要该覆盖物支持此事件， 该事件绑定/解除即对覆盖物生效

属性说明：
data (any)
地图控件
固定于地图最上层的用于控制地图某些状态的 DOM 组件类型

AMap.Control
地图控件基类，可扩展做自定义地图控件。

new AMap.Control(opts: ControlConfig)
参数说明：
opts (ControlConfig) 默认参数
属性	描述
opts.position
类型：(string | object)	控件停靠位置 { top: 5; left: 5; right: 5; bottom: 5 } 或者 'LT': 左上角, 'RT': 右上角, 'LB': 左下角, 'RB': 右下角
opts.offset
类型：[number, number]	相对于地图容器左上角的偏移量，正数代表向右下偏移。默认为AMap.Pixel(10,10)
成员函数：
addTo(map)
添加控件到地图上

参数说明：
map (Map) 地图实例
remove()
从地图上移除控件

show()
设置控件可见

hide()
设置控件隐藏

事件：
show
显示时触发此事件

hide
隐藏时触发此事件

AMap.Scale
比例尺插件。位于地图右下角，用户可控制其显示与隐藏。继承自 AMap.Control
相关示例

new AMap.Scale(opts: ControlConfig)
参数说明：
opts (ControlConfig) 默认参数
属性	描述
opts.position
类型：(string | object)	控件停靠位置 { top: 5; left: 5; right: 5; bottom: 5 } 或者 'LT': 左上角, 'RT': 右上角, 'LB': 左下角, 'RB': 右下角
opts.offset
类型：[number, number]	相对于地图容器左上角的偏移量，正数代表向右下偏移。默认为AMap.Pixel(10,10)
示例代码：
mapObj.plugin(["AMap.Scale"],function(){
    var scale = new AMap.Scale();
    mapObj.addControl(scale);
});
成员函数：
addTo(map)
添加控件到地图上

参数说明：
map (Map) 地图实例
removeFrom()
从地图上移除控件

show()
设置控件可见

hide()
设置控件隐藏

事件：
show
显示比例尺插件时触发的事件

hide
隐藏比例尺插件时触发的事件

AMap.ToolBar
地图操作工具条插件。可支持方向导航、位置定位、视野级别缩放、视野级别选择等操作。继承自 AMap.Control
相关示例

new AMap.ToolBar(opts: ControlConfig)
参数说明：
opts (ControlConfig) 默认参数
属性	描述
opts.position
类型：(String | Object)	控件停靠位置 { top: 5; left: 5; right: 5; bottom: 5 } 或者 'LT': 左上角, 'RT': 右上角, 'LB': 左下角, 'RB': 右下角
opts.offset
类型：[Number, Number]	相对于地图容器左上角的偏移量，正数代表向右下偏移。默认为AMap.Pixel(10,10)
示例代码：
mapObj.plugin(["AMap.ToolBar"],function(){
    //加载工具条
    var tool = new AMap.ToolBar();
    mapObj.addControl(tool);
});
成员函数：
addTo
添加控件到地图上

参数说明：
map (Map) 地图实例
remove
从地图上移除控件

show
设置控件可见

hide
设置控件隐藏

事件：
show
工具条显示时触发此事件

hide
工具条隐藏时触发此事件

AMap.ControlBar
组合了旋转、倾斜、复位在内的地图控件。
相关示例

new AMap.ControlBar(opts: ControlConfig)
参数说明：
opts (ControlConfig) 默认参数
属性	描述
opts.position
类型：(string | object)	控件停靠位置 { top: 5; left: 5; right: 5; bottom: 5 } 或者 'LT': 左上角, 'RT': 右上角, 'LB': 左下角, 'RB': 右下角
opts.offset
类型：[number, number]	相对于地图容器左上角的偏移量，正数代表向右下偏移。默认为AMap.Pixel(10,10)
opts.showControlButton
类型：boolean	是否显示倾斜、旋转按钮。默认为 true
示例代码：
var mapObj = new AMap.Map("container",{
    center: new AMap.LngLat(116.368904,39.913423),
    zoom:16
});
mapObj.plugin(["AMap.ControlBar"],function() {
    var controlBar = new AMap.ControlBar(Options)
    map.addControl(controlBar)
});
//map.reoveControl(controlBar)
成员函数：
addTo(map)
添加控件到地图上

参数说明：
map (Map) 地图实例
remove()
从地图上移除控件

show()
设置控件可见

hide()
设置控件隐藏

事件：
show
显示时触发此事件

hide
隐藏时触发此事件

AMap.MapType
地图类型切换插件。用户通过该插件进行地图切换。

new AMap.MapType(opts: MaptypeOptions)
参数说明：
opts (MaptypeOptions) 控件默认参数
属性	描述
opts.defaultType
类型：number
default 0	初始化默认图层类型。 取值为0：默认底图 取值为1：卫星图 默认值：0
opts.showTraffic
类型：boolean
default false	叠加实时交通图层 默认值：false
opts.showRoad
类型：boolean
default false	叠加路网图层 默认值：false
示例代码：
mapObj = new AMap.Map("container",{
    center:new AMap.LngLat(116.368904,39.913423),
    zoom: 16
});
mapObj.plugin(["AMap.MapType"],function(){
    //地图类型切换
    var type= new AMap.MapType({
        defaultType: 0,
    });
    mapObj.addControl(type);
});
成员函数：
addLayer(layerInfo)
添加一个图层

参数说明：
layerInfo (LayerInfo) 图层信息，需要包含图层对象
属性	描述
layerInfo.id
类型：String	图层 id
layerInfo.enable
类型：String	图层是否可用
layerInfo.name
类型：String	图层暂时名称
layerInfo.type
类型：("base" | "overlay")	图层类型，base 是属于底图图层，overlay 属于叠加图层。
layerInfo.layer
类型：Layer	图层对象
layerInfo.show
类型：Boolean	图层是否显示
removeLayer(id)
移除一个图层

参数说明：
id (String) 图层 id
addTo(map)
添加控件到地图上

参数说明：
map (Map) 地图实例
remove()
从地图上移除控件

show
设置控件可见

hide
设置控件隐藏

事件：
show
显示时触发此事件

hide
隐藏时触发此事件

AMap.HawkEye
鹰眼控件，用于显示缩略地图，显示于地图右下角，可以随主图的视口变化而变化，也可以配置成固定位置实现类似于南海附图的效果。

new AMap.HawkEye(options: HawkEyeOptions)
参数说明：
options (HawkEyeOptions) 初始化参数
属性	描述
options.autoMove
类型：boolean	是否随主图视口变化移动
options.showRectangle
类型：boolean	是否显示视口矩形
options.showButton
类型：boolean	是否显示打开关闭的按钮
options.opened
类型：boolean	默认是否展开
options.mapStyle
类型：string	缩略图要显示的地图自定义样式，如'amap://styles/dark'
options.layers
类型：array	缩略图要显示的图层类型，默认为普通矢量地图
options.width
类型：string	缩略图的宽度，同CSS，如'200px'
options.height
类型：string	缩略图的高度，同CSS，如'200px'
options.offset
类型：[number, number]	缩略图距离地图右下角的像素距离，如 [2,2]
options.borderStyle
类型：string	缩略图的边框样式，同CSS，如"double solid solid double"
options.borderColor
类型：string	缩略图的边框颜色，同CSS，如'silver'
options.borderRadius
类型：string	缩略图的圆角半径，同CSS，如'5px'
options.borderWidth
类型：string	缩略图的边框宽度，同CSS，如'2px'
options.buttonSize
类型：string	缩略图的像素尺寸，同CSS，如'12px'
成员函数：
show()
恢复鹰眼控件的正常大小

hide()
最小化鹰眼控件

工具类
用于满足一定专门功能的工具类型

AMap.RangingTool
构造一个距离量测插件对象。参数map为地图实例。 opts属性参考RangingToolOptions列表中的说明

new AMap.RangingTool(map: Map, opts: RangingToolOptions)
参数说明：
map (Map) 要添加到的地图实例
opts (RangingToolOptions) 鼠标工具配置参数
属性	描述
opts.startMarkerOptions
类型：Object	设置量测起始点标记属性对象，包括点标记样式、大小等，参考 MarkerOptions
opts.midMarkerOptions
类型：Object	设置量测中间点标记属性对象，包括点标记样式、大小等，参考 MarkerOptions
opts.endMarkerOptions
类型：Object	设置量测结束点标记属性对象，包括点标记样式、大小等，参考 MarkerOptions
opts.lineOptions
类型：Object	设置距离量测线的属性对象，包括线样式、颜色等，参考 PolylineOptions
opts.tmpLineOptions
类型：Object	设置距离量测过程中临时量测线的属性对象，包括线样式、颜色，参考 PolylineOptions
opts.startLabelText
类型：String	设置量测起始点标签的文字内容，默认为“起点”
opts.midLabelText
类型：String	设置量测中间点处标签的文字内容，默认为当前量测结果值
opts.endLabelText
类型：String	设置量测结束点处标签的文字内容，默认为当前量测结果值
opts.startLabelOffset
类型：Pixel	设置量测起始点标签的偏移量。默认值：Pixel(-6, 6)
opts.midLabelOffset
类型：Pixel	设置量测中间点标签的偏移量。默认值：Pixel(-6, 6)
opts.endLabelOffset
类型：Pixel	设置量测结束点标签的偏移量。默认值：Pixel(-6, 6)
示例代码：
map.plugin(["AMap.MouseTool"],function(){
   var ruler = new AMap.RangingTool(map);
});
成员函数：
turnOn()
启动测距工具

turnOff(removeOverlays)
关闭测距工具

参数说明：
removeOverlays (Boolean) 是否删除测距过程产生的覆盖物
事件：
addnode
每添加一个量测点时触发此事件

参数说明：
event (Object)
属性	描述
event.marker
类型：Marker	添加的标记点对象
event.positon
类型：LngLat	添加的标记点坐标
event.type
类型：string	事件类型为addnode
removenode
每删除一个量测点时触发此事件

参数说明：
event (Object)
属性	描述
event.target
类型：object	距离量测对象
event.polyline
类型：Polyline	量测线对象
event.points
类型：Array<LngLat>	量测点（LngLat）对象的集合
event.distance
类型：number	本次距离量测的总距离值,单位默认为：公里
end
距离量测结束后触发此事件

参数说明：
event (Object)
属性	描述
event.target
类型：object	距离量测对象
event.polyline
类型：Polyline	量测线对象
event.points
类型：Array<LngLat>	量测点（LngLat）对象的集合
event.distance
类型：number	本次距离量测的总距离值,单位默认为：公里
AMap.MouseTool
鼠标工具插件。通过该插件，可进行鼠标画标记点、线、多边形、矩形、圆、距离量测、面积量测、拉框放大、拉框缩小等功能。

new AMap.MouseTool(map: Map)
参数说明：
map (Map) 鼠标工具添加到的地图实例
示例代码：
map.plugin(["AMap.MouseTool"],function(){
   var mousetool = new AMap.MouseTool(map);
   // 使用鼠标工具，在地图上画标记点
   mousetool.marker();
});
成员函数：
marker(opts)
开启鼠标画点标注模式。鼠标在地图上单击绘制点标注，标注样式参考MarkerOptions设置

参数说明：
opts (MarkerOptions) 参考MarkerOptions设置
circle(opts)
开启鼠标画圆模式。鼠标在地图上拖动绘制相应的圆形。圆形样式参考CircleOptions设置

参数说明：
opts (CircleOptions) 参考CircleOptions设置
rectangle(opts)
开启鼠标画矩形模式。鼠标在地图上拉框即可绘制相应的矩形。矩形样式参考PolygonOptions设置

参数说明：
opts (PolygonOptions) 矩形样式参考PolygonOptions设置
polyline(opts)
开启鼠标画折线模式。鼠标在地图上点击绘制折线，鼠标左键双击或右键单击结束绘制，折线样式参考PolylineOptions设置

参数说明：
opts (PolylineOptions) 参考PolylineOptions设置
polygon(opts)
开启鼠标画多边形模式。鼠标在地图上单击开始绘制多边形，鼠标左键双击或右键单击结束当前多边形的绘制，多边形样式参考PolygonOptions设置

参数说明：
opts (PolygonOptions) 参考PolygonOptions设置
measureArea(opts)
开启面积量测模式。鼠标在地图上单击绘制量测区域，鼠标左键双击或右键单击结束当前量测操作，并显示本次量测结果。量测面样式参考PolygonOptions设置

参数说明：
opts (PolygonOptions) 参考PolygonOptions设置
rule(opts)
开启距离量测模式。鼠标在地图上单击绘制量测节点，并计算显示两两节点之间的距离，鼠标左键双击或右键单击结束当前量测操作。量测线样式参考 PolylineOptions 设置 注：不能同时使用rule方法和RangTool插件进行距离量测

参数说明：
opts (PolylineOptions) 参考PolylineOptions设置
rectZoomIn(opts)
开启鼠标拉框放大模式。鼠标可在地图上拉框放大地图。矩形框样式参考PolygonOptions设置

参数说明：
opts (PolygonOptions) 参考PolygonOptions设置
rectZoomOut(opts)
开启鼠标拉框缩小模式。鼠标可在地图上拉框缩小地图。矩形框样式参考PolygonOptions设置

参数说明：
opts (PolygonOptions) 参考PolygonOptions设置
close(ifClear)
关闭当前鼠标操作。参数arg设为true时，鼠标操作关闭的同时清除地图上绘制的所有覆盖物对象；设为false时，保留所绘制的覆盖物对象。默认为false

参数说明：
ifClear (boolean) 是否清除地图上的覆盖物
事件：
draw
鼠标工具绘制覆盖物结束时触发此事件，obj对象为绘制出来的覆盖物对象。

参数说明：
event (object) 事件回调参数
属性	描述
event.type
类型：string	事件类型
event.obj
类型：string	绘制的覆盖物对象
AMap.PolygonEditor
Polygon 编辑器

new AMap.PolygonEditor(map: Map, polygon: Polygon?, opts: Object?)
参数说明：
map (Map) AMap.Map 的实例
polygon (Polygon?) 编辑对象
opts (Object?) 设置参数
属性	描述
opts.createOptions
类型：Object?	新创建的对象样式
opts.editOptions
类型：Object?	编辑样式
opts.controlPoint
类型：Object?	顶点样式 CircleMarkerOptions
opts.midControlPoint
类型：Object?	中间点样式 CircleMarkerOptions
成员函数：
open()
开始编辑对象

setTarget(tar, overlay)
设置编辑对象

参数说明：
tar (any)
overlay (Polygon)
getTarget()
获取编辑对象

返回值：
(Polygon | undefined):
setAdsorbPolygons(list)
设置吸附多边形

参数说明：
list ((Polygon | Array<Polygon>))
clearAdsorbPolygons()
清空所有的吸附多边形

addAdsorbPolygons(list)
添加吸附多边形

参数说明：
list ((Polygon | Array<Polygon>))
removeAdsorbPolygons(list)
删除吸附多边形

参数说明：
list ((Polygon | Array<Polygon>))
close()
停止编辑对象

事件：
addnode
增加一个节点时触发此事件

属性说明：
data ({target: Polygon, lnglat: Lnglat, pixel: Pixel})
removenode
移除一个节点时触发此事件

属性说明：
data ({target: Polygon, lnglat: Lnglat, pixel: Pixel})
adjust
调整折线上某个点时触发此事件

属性说明：
data ({target: Polygon, lnglat: Lnglat, pixel: Pixel})
move
移动覆盖物时触发此事件

属性说明：
data ({target: Polygon, lnglat: Lnglat, pixel: Pixel})
add
创建一个覆盖物之后触发该事件，target即为创建对象。当editor编辑对象为空时，调用open接口，再点击一次屏幕就会创建新的覆盖物对象

属性说明：
data ({target: Polygon})
end
调用close之后触发该事件，target即为编辑后的覆盖物对象

属性说明：
data ({target: Polygon})
AMap.PolylineEditor
折线编辑插件，用于编辑AMap.Polyline对象，支持通过鼠标调整折线的形状。

new AMap.PolylineEditor(map: Map, polygon: Polygon?, opts: Object?)
参数说明：
map (Map) AMap.Map 的实例
polygon (Polygon?) 编辑对象
opts (Object?) 设置参数
属性	描述
opts.createOptions
类型：Object?	新创建的对象样式
opts.editOptions
类型：Object?	编辑样式
opts.controlPoint
类型：Object?	顶点样式 CircleMarkerOptions
opts.midControlPoint
类型：Object?	中间点样式 CircleMarkerOptions
成员函数：
setTarget(overlay?)
设置编辑对象

参数说明：
overlay (Polyline?)
getTarget()
获取编辑对象

返回值：
(Polyline | undefined): 当前编辑对象
open()
开始编辑对象

close()
停止编辑对象

事件：
addnode
增加一个节点时触发此事件

属性说明：
data ({target: Polyline, lnglat: Lnglat, pixel: Pixel})
adjust
调整折线上某个点时触发此事件

属性说明：
data ({target: Polyline, lnglat: Lnglat, pixel: Pixel})
removenode
删除一个节点时触发此事件

属性说明：
data ({target: Polyline, lnglat: Lnglat, pixel: Pixel})
add
创建一个折线之后触发该事件，target即为创建对象。当editor编辑对象为空时，调用open接口，再点击一次屏幕就会创建新的覆盖物对象

属性说明：
data ({target: Polyline})
end
调用close之后触发该事件，target即为编辑后的覆盖物对象

属性说明：
data ({target: Polyline})
AMap.CircleEditor
圆编辑插件。用于编辑AMap.Circle对象，功能包括使用鼠标改变圆半径大小、拖拽圆心改变圆的位置。

new AMap.CircleEditor(map: Map, circle: Circle?, opts: Object?)
参数说明：
map (Map) AMap.Map 实例
circle (Circle?) 可选参数， AMap.Circle 实例
opts (Object?) 设置参数
属性	描述
opts.createOptions
类型：Object?	新创建的对象样式
opts.editOptions
类型：Object?	编辑样式
opts.movePoint
类型：Object?	移动点样式 MarkerOptions
opts.resizePoint
类型：Object?	reaize点样式 MarkerOptions
成员函数：
setTarget(overlay?)
设置编辑对象

参数说明：
overlay (Circle?) 编辑对象
getTarget()
获取编辑对象

返回值：
(Circle | undefined): 当前编辑对象
open()
打开编辑功能

close()
关闭编辑功能

事件：
addnode
增加一个节点时触发此事件

属性说明：
data ({target: Circle, lnglat: Lnglat, pixel: Pixel})
adjust
调整折线上某个点时触发此事件

属性说明：
data ({target: Circle, lnglat: Lnglat, pixel: Pixel})
move
移动覆盖物时触发此事件

属性说明：
data ({target: Circle, lnglat: Lnglat, pixel: Pixel})
add
创建一个覆盖物之后触发该事件，target即为创建对象。当editor编辑对象为空时，调用open接口，再点击一次屏幕就会创建新的覆盖物对象

属性说明：
data ({target: Circle})
end
调用close之后触发该事件，target即为编辑后的覆盖物对象

属性说明：
data ({target: Circle})
AMap.BezierCurveEditor
贝塞尔曲线编辑器

new AMap.BezierCurveEditor(map: Map, bezier: BezierCurve?, opts: Object?)
参数说明：
map (Map) AMap.Map 实例
bezier (BezierCurve?) 曲线示例
opts (Object?) 设置参数
属性	描述
opts.createOptions
类型：Object?	新创建的对象样式
opts.editOptions
类型：Object?	编辑样式
opts.controlPoint
类型：Object?	顶点样式 MarkerOptions
opts.midControlPoint
类型：Object?	中间点样式 MarkerOptions
opts.bezierControlPoint
类型：Object?	贝塞尔控制点样式 MarkerOptions
opts.bezierControlLine
类型：Object?	贝塞尔控制线样式 PolylineOptions
成员函数：
setTarget(overlay?)
设置编辑对象

参数说明：
overlay (BezierCurve?)
getTarget()
获取编辑对象

返回值：
(BezierCurve | undefined): [overlay] 当前编辑对象
open()
开始编辑对象

close()
结束编辑对象

事件：
addnode
增加一个节点时触发此事件

属性说明：
data ({target: BezierCurve, lnglat: Lnglat, pixel: Pixel})
adjust
调整折线上某个点时触发此事件

属性说明：
data ({target: BezierCurve, lnglat: Lnglat, pixel: Pixel})
removenode
删除一个节点时触发此事件

属性说明：
data ({target: BezierCurve, lnglat: Lnglat, pixel: Pixel})
add
创建一个折线之后触发该事件，target即为创建对象。当editor编辑对象为空时，调用open接口，再点击一次屏幕就会创建新的覆盖物对象

属性说明：
data ({target: BezierCurve})
end
调用close之后触发该事件，target即为编辑后的覆盖物对象

属性说明：
data ({target: BezierCurve})
AMap.EllipseEditor
椭圆编辑器

new AMap.EllipseEditor(map: Map, ellipse: Ellipse?, opts: Object?)
参数说明：
map (Map) AMap.Map 的实例
ellipse (Ellipse?) AMap.Ellipse 的实例
opts (Object?) 设置参数
属性	描述
opts.createOptions
类型：Object?	新创建的对象样式
opts.editOptions
类型：Object?	编辑样式
opts.movePoint
类型：Object?	移动点样式 MarkerOptions
opts.resizeXPoint
类型：Object?	reaizeX点样式 MarkerOptions
opts.resizeYPoint
类型：Object?	reaizeY点样式 MarkerOptions
成员函数：
setTarget(overlay?)
设置编辑对象

参数说明：
overlay (Ellipse?) 编辑对象
getTarget()
获取编辑对象

返回值：
(Ellipse | undefined): 当前编辑对象
open()
打开编辑功能

close()
关闭编辑功能

事件：
addnode
增加一个节点时触发此事件

属性说明：
data ({target: Ellipse, lnglat: Lnglat, pixel: Pixel})
adjust
调整折线上某个点时触发此事件

属性说明：
data ({target: Ellipse, lnglat: Lnglat, pixel: Pixel})
move
移动覆盖物时触发此事件

属性说明：
data ({target: Ellipse, lnglat: Lnglat, pixel: Pixel})
add
创建一个覆盖物之后触发该事件，target即为创建对象。当editor编辑对象为空时，调用open接口，再点击一次屏幕就会创建新的覆盖物对象

属性说明：
data ({target: Ellipse})
end
调用close之后触发该事件，target即为编辑后的覆盖物对象

属性说明：
data ({target: Ellipse})
AMap.RectangleEditor
矩形编辑器

new AMap.RectangleEditor(map: Map, rect: Rectangle?, opts: Object?)
参数说明：
map (Map) AMap.Map 的实例
rect (Rectangle?) AMap.Rectangle 的实例
opts (Object?) 设置参数
属性	描述
opts.createOptions
类型：Object?	新创建的对象样式
opts.editOptions
类型：Object?	编辑样式
opts.southWestPoint
类型：Object?	西南点样式 MarkerOptions
opts.northEastPoint
类型：Object?	东北点样式 MarkerOptions
成员函数：
setTarget(overlay?)
设置编辑对象

参数说明：
overlay (Rectangle?) 编辑对象
getTarget()
获取编辑对象

返回值：
(Rectangle | undefined): 当前编辑对象
open()
打开编辑功能

close()
关闭编辑功能

事件：
addnode
增加一个节点时触发此事件

属性说明：
data ({target: Rectangle, lnglat: Lnglat, pixel: Pixel})
adjust
调整折线上某个点时触发此事件

属性说明：
data ({target: Rectangle, lnglat: Lnglat, pixel: Pixel})
move
移动覆盖物时触发此事件

属性说明：
data ({target: Rectangle, lnglat: Lnglat, pixel: Pixel})
add
创建一个覆盖物之后触发该事件，target即为创建对象。当editor编辑对象为空时，调用open接口，再点击一次屏幕就会创建新的覆盖物对象

属性说明：
data ({target: Rectangle})
end
调用close之后触发该事件，target即为编辑后的覆盖物对象

属性说明：
data ({target: Rectangle})
服务类
用于调用 Web 服务 API，直接透传查询条件和返回结果

WebService
用于调用 Web 服务 API，直接透传查询条件和返回结果，提供GET和POST两种请求方式，具体请求接口和返回结果，请参考 https://lbs.amap.com/api/webservice/summary/

静态方法：
get(path, params, callback, opts)
以 GET 请求方式请求指定的 Web 服务 API 接口

参数说明：
path (string) Web服务API的接口路径
params (object) Web服务 API 的查询参数
callback (WebServiceCallback) 查询回调函数
opts (HttpOptions = {}) HTTP 请求参数配置
示例代码：
AMap.WebService.get('https://restapi.amap.com/v3/place/text',
    {
        keywords : '首开广场',
        types : '写字楼',
        city : '010'
    },function (error, result) {
        console.log(error, result);
    }
);
post(path, params, callback)
以 POST 请求方式请求指定的 Web 服务 API 接口, 目前只有轨迹纠偏接口需要使用 POST 方式

参数说明：
path (string) Web服务API的接口路径
params (any) Web服务 API 的查询参数
callback (WebServiceCallback) 查询回调函数
示例代码：
AMap.WebService.post('https://restapi.amap.com/v4/grasproad/driving',
  [
      {"x":116.478928,"y":39.997761,"sp":19,"ag":0, "tm":1478031031},
      {"x":116.478907,"y":39.998422,"sp":10,"ag":0, "tm":2},
      {"x":116.479384,"y":39.998546,"sp":10,"ag":110,"tm":3},
      {"x":116.481053,"y":39.998204,"sp":10,"ag":120,"tm":4},
      {"x":116.481793,"y":39.997868,"sp":10,"ag":120,"tm":5}
  ],function (error, result) {
      console.log(error, result);
  }
);
WebServiceCallback
WebService 的回调函数类型

Type: Function

参数说明：
status (string) 服务查询的状态结果，'complete' 或 'error'
data (any) Web服务API返回的数据
搜索
用于进行 POI 搜索联想与数据查询的相关类型

AMap.AutoComplete
根据输入关键字提示匹配信息，可将Poi类型和城市作为输入提示的限制条件。用户可以通过自定义回调函数取回并显

new AMap.AutoComplete(opts: object)
参数说明：
opts (object) 输入提示参数
属性	描述
opts.type
类型：string	输入提示时限定POI类型，多个类型用“|”分隔，目前只支持Poi类型编码如“050000” 默认值：所有类别
opts.city
类型：string	输入提示时限定城市。可选值：城市名（中文或中文全拼）、citycode、adcode；默认值：“全国”
opts.datatype
类型：string	返回的数据类型。可选值：all-返回所有数据类型、poi-返回POI数据类型、bus-返回公交站点数据类型、busline-返回公交线路数据类型目前暂时不支持多种类型
opts.citylimit
类型：boolean	是否强制限制在设置的城市内搜索,默认值为：false，true：强制限制设定城市，false：不强制限制设定城市
opts.input
类型：(string | HTMLDivElement)	可选参数，用来指定一个input输入框，设定之后，在input输入文字将自动生成下拉选择列表。支持传入输入框DOM对象的id值，或直接传入输入框的DOM对象。
opts.output
类型：(string | HTMLDivElement)	可选参数，指定一个现有的div的id或者元素，作为展示提示结果的容器，当指定了input的时候有效，缺省的时候将自动创建一个显示结果面板
opts.outPutDirAuto
类型：boolean	默认为true，表示是否在input位于页面较下方的时候自动将输入面板显示在input上方以避免被遮挡
opts.closeResultOnScroll
类型：boolean	页面滚动时关闭搜索结果列表，默认 true
opts.lang
类型：string	设置检索语言类型，默认中文 'zh_cn'
示例代码：
var auto;
//加载输入提示插件
map.plugin(['AMap. Autocomplete'], function() {
    let autoOptions = {
        city: '010' //城市，默认全国
    };
    auto = new AMap.Autocomplete(autoOptions);
}};
成员函数：
setType(type)
设置提示Poi类型，多个类型用“|”分隔，POI相关类型请在网站“相关下载”处下载，目前只支持Poi类型编码如“050000” 默认值：所有类别

参数说明：
type (String) 提示Poi类型
setCity(city)
设置城市

参数说明：
city (String) 城市
setCityLimit(citylimit)
设置是否强制限制城市

参数说明：
citylimit (boolean) 是否强制限制城市
search(keyword, callback)
根据输入关键字提示匹配信息，支持中文、拼音

参数说明：
keyword (String) 关键字
callback (AutoCompleteSearchCallback) 搜索结果回调
事件：
select
鼠标点击或者回车选中某个POI信息时触发此事件

参数说明：
event (object) 回调事件
属性	描述
event.id
类型：string	POI唯一标识
event.name
类型：string	名称
event.adcode
类型：string	区域编码
event.district
类型：string	所属区域
event.location
类型：LngLat	位置
event.type
类型：string	类型
choose
鼠标或者键盘上下键选择POI信息时触发此事件

参数说明：
event (object) 回调事件
属性	描述
event.id
类型：string	POI唯一标识
event.name
类型：string	名称
event.adcode
类型：string	区域编码
event.district
类型：string	所属区域
event.location
类型：LngLat	位置
event.type
类型：string	类型
AutoCompleteSearchCallback
搜索结果回调

Type: function

参数说明：
status (string) 返回信息状态 可取值：'complete': result 为 AutocompleteResult; 'error': result为错误信息；'no_data': result 为 0
result (searchResult) 返回结果详细信息
属性	描述
result.info
类型：string	查询状态说明
result.count
类型：number	输入提示条数
result.tips
类型：Array<Tip>	输入提示列表
result.tips.name
类型：string	名称
result.tips.district
类型：string	所属区域
result.tips.adcode
类型：string	区域编码
AMap.PlaceSearch
地点搜索服务插件，提供某一特定地区的位置查询服务。

new AMap.PlaceSearch()
示例代码：
mapObj.plugin(['AMap.PlaceSearch'], function() {
    var PlaceSearchOptions = { //设置PlaceSearch属性
        city: "北京", //城市
        type: "", //数据类别
        pageSize: 10, //每页结果数,默认10
        pageIndex: 1, //请求页码，默认1
        extensions: "base" //返回信息详略，默认为base（基本信息）
    };
    var MSearch = new AMap.PlaceSearch(PlaceSearchOptions); //构造PlaceSearch类
    AMap.event.addListener(MSearch, "complete", keywordSearch_CallBack); //返回结果
    MSearch.search('方恒国际中心'); //关键字查询
});
成员函数：
search(keyword, callback)
根据输入关键字提示匹配信息，支持中文、拼音

参数说明：
keyword (string) 关键字
callback (searchCallback) 搜索结果回调
searchInBounds(keyword, bounds, callback)
根据范围和关键词进行范围查询

参数说明：
keyword (string) 关键词
bounds (AMap.Bounds) 范围
callback (searchCallback) 搜索结果回调
searchNearBy(keyword, center, radius)
根据中心点经纬度、半径以及关键字进行周边查询 radius取值范围：0-50000

参数说明：
keyword (string) 关键字
center (AMap.LngLat) 中心点经纬度
radius (number) 半径
getDetails(PGUID)
根据PGUID 查询POI 详细信息

参数说明：
PGUID (string) PGUID
setType(type)
设置查询类别，多个类别用“|”分割

参数说明：
type (string) 类别
setPageIndex(pageIndex)
设置显示查询结果页码

参数说明：
pageIndex (number) 结果页码
setPageSize(pageSize)
设置每页显示查询结果数量

参数说明：
pageSize (number) 页数
setCity(city)
设置查询城市, 支持cityname（中文或中文全拼）、citycode、adcode

参数说明：
city (string) 城市标识
setCityLimit(citylimit)
设置是否强制限制城市

参数说明：
citylimit (boolean) 是否开启
poiOnAMAP(p, opts)
唤起高德地图客户端marker页 Object 参数：{ id: "B000A7BD6C", POIID name:String, 必要参数 location:LngLat|position属性 必须参数 } 例如：{ id: "B000A7BD6C", location: LngLat, name: "清华大学", address: "地址" }

参数说明：
p (any)
opts (object) 调起参数
detailOnAMAP(p, opts)
唤起高德地图客户端POI详情页 Object 参数：{ id: "B000A7BD6C", POIID name:String, 必要参数 location:LngLat|position属性 必须参数 }

参数说明：
p (any)
opts (object) 调起
事件：
selectChanged
使用map、panel属性后，选中的POI改变时触发

参数说明：
event (object) 返回参数
属性	描述
event.type
类型：string	事件类别
event.id
类型：string	当前选中的POI的ID
event.marker
类型：Marker	当前选中的POI对应的在地图中的Marker对象
event.listElement
类型：HTMLElement	当前选中的POI在结果面板中对应的列表项
event.data
类型：POI	当前选中的POI的信息
markerClick
使用map、panel属性后，POI在地图中对应的Marker被点击时触发

参数说明：
event (object) 返回参数
属性	描述
event.type
类型：string	事件类别
event.id
类型：string	当前选中的POI的ID
event.marker
类型：Marker	当前选中的POI对应的在地图中的Marker对象
event.listElement
类型：HTMLElement	当前选中的POI在结果面板中对应的列表项
event.data
类型：POI	当前选中的POI的信息
listElementClick
使用map、panel属性后，结果面板中POI对应的列表项被点击时触发

参数说明：
event (object) 返回参数
属性	描述
event.type
类型：string	事件类别
event.id
类型：string	当前选中的POI的ID
event.marker
类型：Marker	当前选中的POI对应的在地图中的Marker对象
event.listElement
类型：HTMLElement	当前选中的POI在结果面板中对应的列表项
event.data
类型：POI	当前选中的POI的信息
searchCallback
搜索结果回调

Type: function

参数说明：
status (string) 返回信息状态 可取值：'complete': result 为 AutocompleteResult; 'error': result为错误信息；'no_data': result 为 0
result (SearchResult) 返回结果详细信息
属性	描述
result.info
类型：string	成功状态说明
result.keywordList
类型：Array<keyword>	发生事件且查无此关键字时，返回建议关键字列表，可根据建议关键字查询
result.cityList
类型：Array<cityInfo>	发生事件且查无此关键字且 city 为“全国”时，返回城市建议列表，该列表中每个城市包含一个或多个相关Poi点信息
result.cityList.name
类型：string	建议城市名称
result.cityList.citycode
类型：string	城市编码
result.cityList.adcode
类型：string	行政区编码
result.cityList.count
类型：string	该城市的建议结果数目
result.poiList
类型：object	发生事件时返回兴趣点列表
result.poiList.pageIndex
类型：number	页码
result.poiList.pageSize
类型：number	单页结果数
result.poiList.count
类型：number	查询结果总数
result.poiList.pois
类型：Array<POI>	Poi列表
result.poiList.pois.id
类型：string	兴趣点id
result.poiList.pois.name
类型：string	名称
result.poiList.pois.type
类型：string	兴趣点类型
result.poiList.pois.location
类型：LngLat	兴趣点经纬度
result.poiList.pois.address
类型：string	地址
result.poiList.pois.distance
类型：number	离中心点距离，仅周边查询返回
result.poiList.pois.tel
类型：string	电话
result.poiList.pois.website
类型：string	网址
result.poiList.pois.pcode
类型：string	poi所在省份编码
result.poiList.pois.citycode
类型：string	poi所在城市编码
result.poiList.pois.adcode
类型：string	poi所在区域编码
result.poiList.pois.postcode
类型：string	邮编
result.poiList.pois.pname
类型：string	poi所在省份
result.poiList.pois.cityname
类型：string	poi所在城市名称
result.poiList.pois.adname
类型：string	poi所在行政区名称
result.poiList.pois.email
类型：string	电子邮箱
result.poiList.pois.entr_location
类型：LngLat	入口经纬度，POI点有出入口信息时返回，否则返回空字符串
result.poiList.pois.exit_location
类型：LngLat	出口经纬度，POI点有出入口信息时返回，否则返回空字符串
AMap.CloudDataSearch
云数据检索服务类

new AMap.CloudDataSearch(tableid: string, opts: CloudDataSearchOptions)
参数说明：
tableid (string)
opts (CloudDataSearchOptions)
属性	描述
opts.map
类型：Map	AMap.Map对象, 展现结果的地图实例。当指定此参数后，搜索结果的标注、线路等均会自动添加到此地图上。可选值
opts.keywords
类型：string	云检索关键字，仅支持对建立了文本索引的字段进行模糊检索（请在 云数据管理平台 中管理文本索引）
opts.filter
类型：string	云检索的筛选条件,仅支持对建立了排序筛选索引的字段进行筛选（请在云数据管理平台中管理排序筛选索引）；支持多个筛选条件，支持对文本字段的精确匹配和对数值字段的区间筛选。筛选条件之间使用“+”代表“与”关系,如：filter:"_name:酒店+star: [3,5] "(等同于SOL语句的：WHERE_name="酒店" AND star BETWEEN 3 AND 5)
opts.orderBy
类型：string	返回数据的排序规则。1.支持系统预设排序规则：_distance：坐标与中心点距离升序排序（仅对周边检索有效；）_weight：权重降序排序。默认值：1)当设置了keywords时，默认按"_weight"权重排序；2)当未设置keywords时，默认按"_distance"距离排序。2.支持对建立了排序筛选索引的整数或小数字段进行排序（请在云数据管理平台中管理排序筛选索引）。升降序分别为"ASC"、"DESC",若仅填字段不填升降序则默认按升序排列，如：orderBy:"age:ASC"
opts.pageSize
类型：number	单页显示结果数，取值范围 [0-100] ,超过取值范围取默认值，默认：20
opts.pageIndex
类型：number	当前页码，取值>=1,默认1
opts.panel
类型：(string | HTMLElement)	结果列表的HTML容器id或容器元素，提供此参数后，结果列表将在此容器中进行展示。可选值
opts.autoFitView
类型：boolean	用于控制在搜索结束后，是否自动调整地图视野使绘制的Marker点都处于视口的可见范围
示例代码：
AMap.plugin('AMap.CloudDataSearch'， function(){
    var map = new AMap.Map("map", {
       resizeEnable: true,
       zoom: 12 //地图显示的缩放级别
    });
    var search, center = new AMap.LngLat(116.39946, 39.910829);
    var searchOptions = {
       map: map,
       panel: 'panel',
       keywords: '',
       pageSize: 5,
       orderBy: '_id:ASC'
    };
    search = new AMap.CloudDataSearch('532b9b3ee4b08ebff7d535b4', searchOptions);
    search.searchNearBy(center, 1000);
});
成员函数：
setOptions(opts)
设置云数据检索属性

参数说明：
opts (CloudDataSearchOptions)
clear()
清除搜索结果

searchNearBy(center, radius, callback)
周边检索，根据指定的中心点和半径检索位置数据。

参数说明：
center (LngLat) 搜索中心
radius (number) 取值范围 [0-50000] ，超过取值范围按3000，单位：米
callback (CloudDataSearchCallback) 搜索回调
searchById(id, callback)
根据数据id检索位置数据，id检索时不需要设置CloudDataSearchOptions

参数说明：
id (string)
callback (CloudDataSearchCallback) 搜索回调
searchByDistrict(district, callback)
根据行政区划（包括全国/省/市/区县）名称，检索行政区划内位置数据.

参数说明：
district (string) district为“全国”，则对全表搜索当district非法或不正确时，按照district为“全国”返回
callback (CloudDataSearchCallback) 搜索回调
searchInPolygon(path, callback)
多边形检索，根据给定的多边形节点坐标数组，检索位置数据。如果数组只有两个坐标元素，则认为多边形为矩形，这两个点为矩形的左下、右上点。多边形坐标数组的起、终点必须保证多边形闭合（起、终点坐标相同）

参数说明：
path (Array<LngLat>) 检索范围路径
callback (CloudDataSearchCallback) 搜索回调
CloudDataSearchCallback
搜索结果回调

Type: function

参数说明：
status (string) 返回信息状态 可取值：'complete': result 为 AutocompleteResult; 'error': result为错误信息；'no_data': result 为 0
result (object) 返回结果详细信息
属性	描述
result.info
类型：string	成功状态文字描述
result.count
类型：number	查询结果总数
result.datas
类型：Array<CloudData>	云数据数组，当根据数据id检索时，数据仅包含一个CloudData
result._id
类型：string	数据id，id为数据唯一标识
result._name
类型：string	名称
result._location
类型：LngLat	坐标
result._address
类型：string	地址
result._updatetime
类型：string	数据更新时间
result._distance
类型：number	距离中心点距离(仅周边查询时返回)
result.custom_field1
类型：any	用户自定义字段1
result._image
类型：Array<Image>	图片信息
result._image._id
类型：string	图片的id标识
result._image._preurl
类型：string	经过压缩处理的图片地址,尺寸为400*400，若期望获取体积较小的图片文件，建议使用此地址
result._image._url
类型：string	最大限制获取1024*1024，若您的原始图片小于该尺寸，将返回原图。
地理编码
用于经纬度与地址之间的相互查询

AMap.Geocoder
AMap.Geocoder 地理编码与逆地理编码类，用于地址描述与经纬度坐标之间的转换。用户可以通过回调函数获取查询结果。 相关示例

new AMap.Geocoder(opts: GeocoderOptions)
参数说明：
opts (GeocoderOptions)
属性	描述
opts.city
类型：string	
城市，地理编码时，设置地址描述所在城市
可选值：城市名（中文或中文全拼）、citycode、adcode
默认值：“全国”
opts.radius
类型：number	
逆地理编码时，以给定坐标为中心点，单位：米
取值范围：0 - 3000
默认值：1000
opts.lang
类型：string	
设置语言类型
可选值：zh_cn（中文）、en(英文)
默认值：zh_cn（中文
opts.batch
类型：boolean	是否批量查询
batch 设置为 false 时，只返回第一条记录
opts.extensions
类型：string	逆地理编码时，返回信息的详略
默认值：base，返回基本地址信息
取值为：all，返回地址信息及附近poi、道路、道路交叉口等信息
示例代码：
var geocoder;
//加载地理编码插件
mapObj.plugin(["AMap.Geocoder"], function() { //加载地理编码插件
   geocoder = new AMap.Geocoder({
       radius: 1000, //以已知坐标为中心点，radius为半径，返回范围内兴趣点和道路信息
       extensions: "all" //返回地址描述以及附近兴趣点和道路信息，默认“base”
   });
   //返回地理编码结果
   geocoder.on("complete", geocoder_CallBack);
   //逆地理编码
   geocoder.getAddress(new AMap.LngLat(116.359119, 39.972121));
});
成员函数：
getLocation(keyword, cbk)
将地址信息转化为高德经纬度坐标信息

参数说明：
keyword (String) 关键字
cbk (GeocoderCallback) 回调函数
setCity(city)
地理编码时，设置地址描述所在城市

参数说明：
city (String) 所在城市
getAddress(location, cbk)
将高德经纬度坐标信息转化为结构化的地址信息

参数说明：
location ((LngLat | Array<LngLat>)) 给定坐标
cbk (ReGeocoderCallback) 回调函数
事件：
complete
当编码执行成功时触发此事件

属性说明：
data (GeocodeResult)
error
当编码执行失败时触发此事件

属性说明：
data (ErrorStatus)
GeocoderCallback
Geocoder getLocation 回调函数

Type: Function

参数说明：
status (string) 当status为complete时，result为GeocodeResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果
result ((info | GeocodeResult)) 地理编码 详查rest文档
ReGeocoderCallback
Geocoder getAddress 回调函数

Type: Function

参数说明：
status (string) 当status为complete时，result为GeocodeResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果
result ((info | ReGeocodeResult)) 逆地理编码 详查rest文档
convertFrom
地球上同一个地理位置的经纬度，在不同的坐标系中，会有少于偏移，国内目前常见的坐标系主要分为三种：
1. 地球坐标系——WGS84：常见于 GPS 设备，Google 地图等国际标准的坐标体系。
2. 火星坐标系——GCJ-02：中国国内使用的被强制加密后的坐标体系，高德坐标就属于该种坐标体系。
3. 百度坐标系——BD-09：百度地图所使用的坐标体系，是在火星坐标系的基础上又进行了一次加密处理。
因此在使用不同坐标系前，我们需要使用 AMap.convertFrom() 方法将这些非高德坐标系进行转换。
相关示例

参数说明：
lnglat (LngLat) 需要转换的坐标或者坐标组
type (String = 'gps') 坐标类型
cbk (Function?) 转换成功后的回调函数
示例代码：
var gps = [116.3, 39.9];
AMap.convertFrom(gps, 'gps', function (status, result) {
  if (result.info === 'ok') {
    var lnglats = result.locations; // Array.<LngLat>
  }
});
路线规划
用于驾车、货车、骑行、步行、公交等的路线规划查询

AMap.Driving
驾车路线规划服务，提供起、终点坐标的驾车导航路线查询功能。AMap. Driving构造函数的参数为 DrivingOptions 对象。DrivingOptions 允许设置驾车策略和返回信息详略。用户可以通过自定义回调函数取回并显示查询结果。若服务请求失败，系统将返回错误信息

new AMap.Driving(opts: DrivingOptions)
参数说明：
opts (DrivingOptions) 参数信息
属性	描述
opts.map
类型：Map	AMap.Map对象, 展现结果的地图实例。当指定此参数后，搜索结果的标注、线路等均会自动添加到此地图上。可选
opts.policy
类型：number?	驾车路线规划策略
opts.extensions
类型：string
default 'base'	默认值：base，返回基本地址信息\n当取值为：all，返回DriveStep基本信息+DriveStep详细信息
opts.ferry
类型：number
default 0	默认为0，表示可以使用轮渡，为1的时候表示不可以使用轮渡
opts.panel
类型：(string | HTMLElement)?	结果列表的HTML容器id或容器元素，提供此参数后，结果列表将在此容器中进行展示。可选
opts.hideMarkers
类型：boolean
default false	设置隐藏路径规划的起始点图标 设置为true：隐藏图标；设置false：显示图标\n默认值为：false
opts.showTraffic
类型：boolean?	设置是否显示实时路况信息，默认设置为true。 显示绿色代表畅通，黄色代表轻微拥堵，红色代表比较拥堵，灰色表示无路况信息。
opts.province
类型：string?	车牌省份的汉字缩写，用于判断是否限行，与number属性组合使用，可选。例如：京
opts.number
类型：string?	除省份之外车牌的字母和数字，用于判断限行相关，与province属性组合使用，可选。例如:NH1N11
opts.isOutline
类型：boolean?	使用map属性时，绘制的规划线路是否显示描边。缺省为true
opts.outlineColor
类型：string?	使用map属性时，绘制的规划线路的描边颜色。缺省为'white'
opts.autoFitView
类型：boolean?	用于控制在路径规划结束后，是否自动调整地图视野使绘制的路线处于视口的可见范围
示例代码：
var driving;
mapObj.plugin(["AMap.Driving"], function() { //加载驾车服务插件
   var drivingOptions = {
       //驾车策略，包括 LEAST_TIME，LEAST_FEE, LEAST_DISTANCE,REAL_TRAFFIC
       policy: AMap.DrivingPolicy.LEAST_TIME
   };
   driving = new AMap.Driving(drivingOptions);
   AMap.Event.addListener(driving, "complete", driving_CallBack); //返回导航查询结果
   //根据起终点坐标规划驾车路线
   MDrive.search(new AMap.LngLat(116.379018, 39.865026), new AMap.LngLat(116.42732, 39.903752));
});
成员函数：
search(origin, destination, opts, callback)
根据起点、终点和途经点（可选）坐标或名称，实现驾车路线规划，途经点通过opts设定

参数说明：
origin (LngLat) 起点经纬度
destination (LngLat) 终点经纬度
opts (Object)
属性	描述
opts.waypoints
类型：Array<LngLat>	途径点,最多支持16个
callback (DrivingCallback) status为complete时，result为DrivingResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果。
search(points, callback)
根据起点、终点和途经点（可选）坐标或名称，实现驾车路线规划，途经点通过opts设定

参数说明：
points (Array<Object>) 终点经纬度points为起点、终点和途经点（可选）名称及对应城市的数组，例如： [{keyword:‘北京南站’,city:‘北京市’},{keyword:‘广东大厦’,city:’北京市’},{ keyword:‘北京西站’,city:‘北京市’}] 系统取数组第一个元素和最后一个元素作为起点和终点，中间元素为途经点；
callback (DrivingCallback) status为complete时，result为DrivingResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果。
clear()
清除搜索结果

setAvoidPolygons(areas)
设置避让区域，最大支持三个避让区域，参数为LngLat的二维数组

参数说明：
areas (Array<Array<LngLatLike>>)
clearAvoidPolygons()
清除避让区域

getAvoidPolygons()
获取避让区域，返回LngLat的二维数组

返回值：
Array<Array<LngLat>>: 避让区域
setAvoidRoad(value)
设置避让道路名称，只支持一条避让道路 注：避让道路和避让区域不能同时使用

参数说明：
value (string)
clearAvoidRoad()
清除避让道路

getAvoidRoad()
获取避让道路

返回值：
string:
setProvinceAndNumber(province, number)
设置车牌的汉字首字符和首字后的号码，设置后路线规划的结果将考虑该车牌在当前时间的限行路段

参数说明：
province (string)
number (string)
setPolicy(policy)
设置驾车路线规划策略

参数说明：
policy (Object) 驾车路线规划策略
事件：
complete
当查询成功时触发此事件

Type: DrivingResult

error
当查询失败时触发此事件

Type: DrivingResult

DrivingCallback
Driving.search 的回调函数

Type: Function

参数说明：
status (string) status为complete时，result为DrivingResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果
result ((info | DrivingResult))
DrivingResult
DrivingResult 对象

Type: Object

属性说明：
info (string) : 成功状态说明
origin (LngLat) : 驾车规划起点坐标
destination (LngLat) : 驾车规划终点坐标
start (Poi) : 驾车规划起点
end (Poi) : 驾车规划终点
waypoints (Poi) : 驾车规划途经点
taxi_cost (number) : 打车费用，仅extensions为“all”时返回. 单位: 元
routes (Array<DriveRoute>) : 驾车规划路线列表
属性	描述
routes.route
类型：DriveRoute	驾车规划路线列表元素
routes.route.distance
类型：number	起点到终点的驾车距离，单位：米
routes.route.time
类型：number	时间预计，单位：秒
routes.route.policy
类型：string	驾车规划策略
routes.route.tolls
类型：number	此驾车路线收费金额，单位：元
routes.route.tolls_distance
类型：number	收费路段长度，单位：米
routes.route.restriction
类型：number	限行结果,0 代表限行已规避或未限行，即该路线没有限行路段,1 代表限行无法规避，即该线路有限行路段
steps (Array<(DriveStepBasic | DriveStepDetail)>) : 子路段DriveStep集合
DriveStepBasic
DriveStep 对象(基本信息)

Type: Object

属性说明：
start_location (LngLat) : 此路段起点
end_location (LngLat) : 此路段终点
instruction (string) : 此路段说明，如“沿北京南站路行驶565米右转”
action (string) : 本驾车子路段完成后动作
assist_action (string) : 驾车子路段完成后辅助动作，一般为到达某个目的地时返回
orientation (string) : 驾车方向
road (string) : 驾车方向
distance (number) : 此路段距离，单位：米
tolls (number) : 此段收费，单位：元
tolls_distance (number) : 收费路段长度，单位：米
toll_road (string) : 主要收费道路
time (number) : 此路段预计使用时间，单位：秒
path (Array<LngLat>) : 此路段坐标集合
DriveStepDetail
DriveStep 对象(详细信息)

Type: Object

属性说明：
cities (Array<ViaCity>) : 途径城市列表
属性	描述
cities.city
类型：ViaCity	途径城市列表元素
cities.city.name
类型：string	途径名称
cities.city.citycode
类型：string	城市编码
cities.city.adcode
类型：string	区域编码
cities.city.districts
类型：Array<District>	途径行政区列表
cities.city.districts.district
类型：District	途径行政区列表元素
cities.city.districts.district.name
类型：string	区域名称
cities.city.districts.district.adcode
类型：string	区域编码
tmcs (Array<TMC>) : 实时交通信息列表
属性	描述
tmcs.tmc
类型：TMC	实时交通信息列表元素
tmcs.tmc.lcode
类型：string	路况信息对应的编码 如果direction是正向 lcode返回值大于0；否则lcode，返回值小于0； 如果返回0则说明此路段无lcode
tmcs.tmc.distance
类型：number	此lcode对应的路段长度，单位: 米
tmcs.tmc.status
类型：string	路况状态，可能的值有：未知，畅通，缓行，拥堵
AMap.TruckDriving
驾车路线规划服务，提供起、终点坐标的驾车导航路线查询功能。AMap. Driving构造函数的参数为 DrivingOptions 对象。DrivingOptions 允许设置驾车策略和返回信息详略。用户可以通过自定义回调函数取回并显示查询结果。若服务请求失败，系统将返回错误信息

new AMap.TruckDriving(opts: TruckDrivingOptions)
参数说明：
opts (TruckDrivingOptions) 参数信息
属性	描述
opts.map
类型：Map	AMap.Map对象, 展现结果的地图实例。当指定此参数后，搜索结果的标注、线路等均会自动添加到此地图上。可选
opts.policy
类型：number?	货车路线规划策略strategy
opts.size
类型：number	车型大小，必填，1-4分别对应小型至大型
opts.width
类型：number
default 2.5	宽度，缺省2.5米
opts.height
类型：number
default 1.6	高度,缺省1.6米
opts.load
类型：number
default 0.9	载重,缺省0.9t
opts.weight
类型：number
default 10	自重，缺省10t
opts.axlesNum
类型：number
default 2	轴数，缺省2轴
opts.extensions
类型：string
default 'base'	默认值：base，返回基本地址信息\n当取值为：all，返回DriveStep基本信息+DriveStep详细信息
opts.panel
类型：(string | HTMLElement)?	结果列表的HTML容器id或容器元素，提供此参数后，结果列表将在此容器中进行展示。可选
opts.hideMarkers
类型：boolean
default false	设置隐藏路径规划的起始点图标 设置为true：隐藏图标；设置false：显示图标\n默认值为：false
opts.showTraffic
类型：boolean?	设置是否显示实时路况信息，默认设置为true。 显示绿色代表畅通，黄色代表轻微拥堵，红色代表比较拥堵，灰色表示无路况信息。
opts.province
类型：string?	车牌省份的汉字缩写，用于判断是否限行，与number属性组合使用，可选。例如：京
opts.number
类型：string?	除省份之外车牌的字母和数字，用于判断限行相关，与province属性组合使用，可选。例如:NH1N11
opts.isOutline
类型：boolean?	使用map属性时，绘制的规划线路是否显示描边。缺省为true
opts.outlineColor
类型：string?	使用map属性时，绘制的规划线路的描边颜色。缺省为'white'
opts.autoFitView
类型：boolean?	用于控制在路径规划结束后，是否自动调整地图视野使绘制的路线处于视口的可见范围
示例代码：
var driving;
mapObj.plugin(["AMap.TruckDriving"], function() { //加载驾车服务插件
   var drivingOptions = {
       //驾车策略，包括 LEAST_TIME，LEAST_FEE, LEAST_DISTANCE,REAL_TRAFFIC
       policy: AMap.DrivingPolicy.LEAST_TIME
   };
   driving = new AMap.TruckDriving(drivingOptions);
   AMap.Event.addListener(driving, "complete", driving_CallBack); //返回导航查询结果
   //根据起终点坐标规划驾车路线
   MDrive.search(new AMap.LngLat(116.379018, 39.865026), new AMap.LngLat(116.42732, 39.903752));
});
var TruckDriving;
mapObj.plugin(["AMap.TruckDriving"], function() { //加载驾车服务插件
   var TruckDrivingOptions = {
       //驾车策略，包括 LEAST_TIME，LEAST_FEE, LEAST_DISTANCE,REAL_TRAFFIC
       policy: AMap.TruckDrivingPolicy.LEAST_TIME
   };
   TruckDriving = new AMap.TruckDriving(TruckDrivingOptions);
   AMap.Event.addListener(TruckDriving, "complete", TruckDriving_CallBack); //返回导航查询结果
   //根据起终点坐标规划驾车路线
   MDrive.search(new AMap.LngLat(116.379018, 39.865026), new AMap.LngLat(116.42732, 39.903752));
});
成员函数：
clear()
清除搜索结果

search(locations, callback)
根据起点、终点和途经点（可选）坐标或名称，实现驾车路线规划，途经点通过opts设定

参数说明：
locations (Array<Truck~Location>) 途经点列表
属性	描述
locations.location
类型：Truck~Location	某一个途经点
locations.location.lnglat
类型：[number, number]	经纬度
locations.location.pid
类型：string	POI ID,可缺省
locations.location.type
类型：string	POI类型，可缺省
callback (DrivingCallback) status为complete时，result为TruckResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果。
search(points, callback)
根据起点、终点和途经点（可选）坐标或名称，实现驾车路线规划，途经点通过opts设定

参数说明：
points (Array<Truck~Path>) 途经点列表 例如 : [{keyword:'北京站',city:'010'},//起点 {keyword:'北京西站',city:'010'},//途径 {keyword:'北京大学',city:'010'}//终点 ]
属性	描述
points.point
类型：Truck~Path	某个途经点
points.point.keyworkd
类型：string	关键字
points.point.city
类型：string	城市code
callback (DrivingCallback) status为complete时，result为TruckResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果。
setProvinceAndNumber(province, number)
修改车牌号

参数说明：
province (string)
number (number)
setPolicy(policy)
设置驾车路线规划策略,参考opts.policy

参数说明：
policy (Object) 驾车路线规划策略，参考 opts.policy
事件：
complete
当查询成功时触发此事件

属性说明：
data (DrivingResult)
error
当查询失败时触发此事件

属性说明：
data (ErrorStatus)
AMap.Walking
步行路线规划服务，提供起、终点坐标的驾车导航路线查询功能。AMap. Driving构造函数的参数为 DrivingOptions 对象。DrivingOptions 允许设置驾车策略和返回信息详略。用户可以通过自定义回调函数取回并显示查询结果。若服务请求失败，系统将返回错误信息

new AMap.Walking(opts: WalkingOptions)
参数说明：
opts (WalkingOptions) 参数信息
属性	描述
opts.map
类型：Map	AMap.Map对象, 展现结果的地图实例。当指定此参数后，搜索结果的标注、线路等均会自动添加到此地图上。可选
opts.panel
类型：(string | HTMLElement)?	结果列表的HTML容器id或容器元素，提供此参数后，结果列表将在此容器中进行展示。可选
opts.hideMarkers
类型：boolean
default false	设置隐藏路径规划的起始点图标 设置为true：隐藏图标；设置false：显示图标\n默认值为：false 显示绿色代表畅通，黄色代表轻微拥堵，红色代表比较拥堵，灰色表示无路况信息。
opts.isOutline
类型：boolean?	使用map属性时，绘制的规划线路是否显示描边。缺省为true
opts.outlineColor
类型：string?	使用map属性时，绘制的规划线路的描边颜色。缺省为'white'
opts.autoFitView
类型：boolean?	用于控制在路径规划结束后，是否自动调整地图视野使绘制的路线处于视口的可见范围
示例代码：
var mwalk;
  mapObj.plugin(["AMap.Walking"], function() { //加载步行导航插件
   mwalk = new AMap.Walking (); //构造步行导航类
   AMap.event.addListener(mwalk, "complete", walking_CallBack); //返回导航查询结果
   //根据起、终点坐标规划步行路线
   mwalk.search(new AMap.LngLat(116.379018, 39.865026), new AMap.LngLat(116.42732, 39.903752));
 });
var mwalk;
  mapObj.plugin(["AMap.Walking"], function() { //加载步行导航插件
   mwalk = new AMap.Walking (); //构造步行导航类
   AMap.Event.addListener(mwalk, "complete", walking_CallBack); //返回导航查询结果
   //根据起、终点坐标规划步行路线
   mwalk.search(new AMap.LngLat(116.379018, 39.865026), new AMap.LngLat(116.42732, 39.903752));
 });
成员函数：
clear()
清除搜索的结果

search(origin, destination, callback)
根据起点、终点坐标，实现步行路线规划

参数说明：
origin (LngLat) 起点经纬度
destination (LngLat) 终点经纬度
callback (WalkingCallback) status为complete时，result为 WalkingResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果。
search(points, callback)
根据起点、终点名称，实现步行路线规划

参数说明：
points (Array<Object>) 终点经纬度points为起点、终点和途经点（可选）名称及对应城市的数组，例如： [{keyword:‘方恒国际中心A座’},{keyword:‘望京站’}] 系统取数组第一个元素和最后一个元素作为起点和终点，中间元素为途经点；
callback (WalkingCallback) status为complete时，result为 WalkingResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果。
事件：
complete
当查询成功时触发此事件

Type: WalkingResult

error
当查询失败时触发此事件, ErrorStatus

Type: ErrorStatus

WalkingCallback
Walking.search 的回调函数

Type: Function

参数说明：
status (string) status为complete时，result为 WalkingResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果
result ((info | WalkingResult))
WalkingResult
WalkingResult 对象

Type: Object

属性说明：
info (string) : 成功状态说明
origin (LngLat) : 步行规划起点坐标
destination (LngLat) : 步行规划终点坐标
start (Poi) : 步行规划起点
end (Poi) : 步行规划终点
count (number) : 步行导航路段数目
routes (Array<WalkRoute>) : 步行规划路线列表
属性	描述
routes.distance
类型：number	起点到终点总步行距离，单位：米
routes.time
类型：number	步行时间预计，单位：秒
routes.steps
类型：Array<WalkStep>	路段列表，以道路名称作为分段依据，将整个步行导航方案分隔成若干路段
routes.steps.instruction
类型：string	步行子路段描述,规则：沿 road步行 distance 米 action，例：”沿北京站街步行351米”
routes.steps.distance
类型：number	步行子路段距离，单位：米
routes.steps.time
类型：number	步行子路段预计使用时间，单位：秒
routes.steps.path
类型：Array<LngLat>	步行子路段坐标集合
routes.steps.road
类型：string	道路
routes.steps.action
类型：string	本步行子路段完成后动作
routes.steps.assist_action
类型：string	步行子路段完成后辅助动作，一般为到达某个公交站点或目的地时返回
AMap.Transfer
公交换乘服务，提供起始点公交路线规划服务，目前公交换乘仅支持同一城市的公交路线规划，跨城市出行规划请参考驾车导航查询。公交换乘查询返回结果整合步行信息，若换乘路段（Segment）换乘类型为地铁 “SUBWAY”，则至少包含一条地铁口信息（SubwayEntrance）。用户可以通过自定义回调函数取回并显示查询结果。若服务请求失败，系统将返回错误信息。

new AMap.Transfer(opts: DrivingOptions)
参数说明：
opts (DrivingOptions) 参数信息
属性	描述
opts.map
类型：Map	AMap.Map对象, 展现结果的地图实例。当指定此参数后，搜索结果的标注、线路等均会自动添加到此地图上。可选
opts.city
类型：string	公交换乘的城市，支持城市名称、城市区号、电话区号，此项为必填
opts.policy
类型：number	公交换乘策略strategy
opts.nightflag
类型：boolean
default false	是否计算夜班车，默认为不计算。true：计算，false：不计算
opts.extensions
类型：string
default 'base'	默认值：base，返回基本地址信息\n当取值为：all，返回DriveStep基本信息+DriveStep详细信息
opts.panel
类型：(string | HTMLElement)?	结果列表的HTML容器id或容器元素，提供此参数后，结果列表将在此容器中进行展示。可选
opts.hideMarkers
类型：boolean
default false	设置隐藏路径规划的起始点图标 设置为true：隐藏图标；设置false：显示图标\n默认值为：false
opts.isOutline
类型：boolean?	使用map属性时，绘制的规划线路是否显示描边。缺省为true
opts.outlineColor
类型：string?	使用map属性时，绘制的规划线路的描边颜色。缺省为'white'
opts.autoFitView
类型：boolean?	用于控制在路径规划结束后，是否自动调整地图视野使绘制的路线处于视口的可见范围
示例代码：
var trans;
mapObj.plugin(["AMap.Transfer"], function() { //加载公交换乘插件
   transOptions = {
       city: '北京市', //公交城市
       policy: AMap.TransferPolicy.LEAST_TRANSFER //乘车策略
   };
   trans = new AMap.Transfer (transOptions); //构造公交换乘类
   AMap.Event.addListener(trans, "complete", trans_CallBack); //返回导航查询结果
   AMap.Event.addListener(trans, "error", function(e){alert(e.info);}); //返回错误信息
   //根据起、终点坐标查询公交换乘路线
   trans.search(new AMap.LngLat(116.379018, 39.865026), new AMap.LngLat(116.42732, 39.903752));
});
成员函数：
search(origin, destination, callback)
根据起点和终点坐标，进行公交换乘查询

参数说明：
origin (LngLat) 起点经纬度
destination (LngLat) 终点经纬度
callback (TransferCallback) status为complete时，result为DrivingResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果。
search(points, callback)
根据起点和终点坐标，进行公交换乘查询

参数说明：
points (Array<Object>) 当根据起、终点名称查询时，point为包含起点、终点的数组，例： [{keyword:‘北京南站’},{keyword:‘北京西站’}] 当数组超过两个元素时，取前两个元素为起点、终点，其余元素忽略
callback (TransferCallback) status为complete时，result为DrivingResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果。
leaveAt(time, date)
设置公交路径规划出发时间

参数说明：
time (string)
date (string)
clear()
清除结果显示

setPolicy(policy)
设置公交换乘策略

参数说明：
policy (TransferPolicy) 公交换乘策略
setCity(city)
设置公交换乘查询的城市

参数说明：
city (String) 城市
setCityd(cityd)
设置公交换乘查询的目的地城市

参数说明：
cityd (String) 城市
事件：
complete
当查询成功时触发此事件

Type: TransferResult

error
当查询失败时触发此事件

Type: TransferResult

TransferCallback
Transfer.search 的回调函数 相关示例

Type: Function

参数说明：
status (string) 当status为complete时，result为TransferResult； 当status为error时，result为错误信息info； 当status为no_data时，代表检索返回0结果
result ((info | TransferResult))
TransferResult
TransferResult 对象 详细文档,查阅rest接口 '返回结果参数说明'

Type: Object

AMap.Riding
骑行路线规划服务，提供起、终点坐标的驾车导航路线查询功能。AMap. Driving构造函数的参数为 DrivingOptions 对象。DrivingOptions 允许设置驾车策略和返回信息详略。用户可以通过自定义回调函数取回并显示查询结果。若服务请求失败，系统将返回错误信息

new AMap.Riding(opts: RidingOptions)
参数说明：
opts (RidingOptions) 参数信息
属性	描述
opts.map
类型：Map	AMap.Map对象, 展现结果的地图实例。当指定此参数后，搜索结果的标注、线路等均会自动添加到此地图上。可选
opts.policy
类型：number
default 0	骑行路线规划策略；默认值：0可选值为： 0：推荐路线及最快路线综合 1：推荐路线 2：最快路线
opts.panel
类型：(string | HTMLElement)?	结果列表的HTML容器id或容器元素，提供此参数后，结果列表将在此容器中进行展示。可选
opts.hideMarkers
类型：boolean
default false	设置隐藏路径规划的起始点图标 设置为true：隐藏图标；设置false：显示图标\n默认值为：false 显示绿色代表畅通，黄色代表轻微拥堵，红色代表比较拥堵，灰色表示无路况信息。
opts.isOutline
类型：boolean?	使用map属性时，绘制的规划线路是否显示描边。缺省为true
opts.outlineColor
类型：string?	使用map属性时，绘制的规划线路的描边颜色。缺省为'white'
opts.autoFitView
类型：boolean?	用于控制在路径规划结束后，是否自动调整地图视野使绘制的路线处于视口的可见范围
示例代码：
var mwalk;
  mapObj.plugin(["AMap.Riding"], function() { //加载步行导航插件
   mwalk = new AMap.Riding (); //构造步行导航类
   AMap.Event.addListener(mwalk, "complete", riding_CallBack); //返回导航查询结果
   //根据起、终点坐标规划步行路线
   mwalk.search(new AMap.LngLat(116.379018, 39.865026), new AMap.LngLat(116.42732, 39.903752));
 });
成员函数：
clear()
清除搜索的结果

setPolicy(policy)
骑行路线规划策略

参数说明：
policy (number) 可选值为： 0：推荐路线及最快路线综合 1：推荐路线 2：最快路线
search(origin, destination, callback)
根据起点、终点坐标，实现骑行路线规划

参数说明：
origin (LngLat) 起点经纬度
destination (LngLat) 终点经纬度
callback (RidingCallback) status为complete时，result为 RidingResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果。
search(points, callback)
根据起点、终点名称，实现骑行路线规划

参数说明：
points (Array<Object>) 包含起点、终点的数组，例： [{keyword:‘方恒国际中心A座’},{keyword:‘望京站’}] 当数组超过两个元素时，取前两个元素为起点、终点，其余元素忽略；
callback (RidingCallback) status为complete时，result为 RidingResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果。
事件：
complete
当查询成功时触发此事件

Type: RidingResult

error
当查询失败时触发此事件, ErrorStatus

Type: ErrorStatus

RidingCallback
Riding.search 的回调函数

Type: Function

参数说明：
status (string) status为complete时，result为 RidingResult；当status为error时，result为错误信息info；当status为no_data时，代表检索返回0结果
result ((info | RidingResult))
RidingResult
RidingResult 详细文档,查阅rest接口'返回结果参数说明'

Type: Object

AMap.DragRoute
new AMap.DragRoute(map: Map, path: Array<LngLat>, policy: String, opts: DragRouteOptions)
参数说明：
map (Map) 指定的地图对象
path (Array<LngLat>) 导航的起点、途经点、终点的经纬度坐标数组
policy (String) 指定驾车策略
opts (DragRouteOptions) 配置项
属性	描述
opts.polyOption
类型：PolylineOptions?	设置拖拽路线插件的路线属性对象，包括线样式、宽度、颜色等，参考 PolylineOptions 列表
opts.startMarkerOptions
类型：MarkerOptions?	设置拖拽路线插件起点点标记属性对象，包括点标记样式、大小等，参考 MarkerOptions 列表
opts.midMarkerOptions
类型：MarkerOptions?	设置拖拽路线插件途经点点标记属性对象，包括点标记样式、大小等，参考 MarkerOptions 列表
opts.endMarkerOptions
类型：MarkerOptions?	设置拖拽路线插件终点点标记属性对象，包括点标记样式、大小等，参考 MarkerOptions 列表
opts.showTraffic
类型：boolean
default true	设置显示实时路况信息，true：路线中显示实时路况信息，false：关闭实时路况信息。 默认值：true
示例代码：
var arr = new Array();//经纬度坐标数组
arr.push(new AMap.LngLat("116.403322","39.920255")); //初始的导航起点
arr.push(new AMap.LngLat("116.420703","39.897555")); //初始的导航途经点
arr.push(new AMap.LngLat("116.430703","39.897555")); //初始的导航途经点
arr.push(new AMap.LngLat("116.410703","39.897555")); //初始的导航终点
AMap.plugin(['AMap.DragRoute'],function(){
   dragRoute = new AMap.DragRoute(mapObj, arr, AMap.DrivingPolicy.LEAST_FEE);
   dragRoute.search(); //查询导航路径并开启拖拽导航
});
成员函数：
search()
开始路径导航。支持鼠标拖拽导航路径节点，更改途经点时，系统实时重新计算并显示导航路径

getWays()
返回除了起点和终点之外的所有点返回导航的所有途经点，即所有途径点的坐标数组

返回值：
Array<LngLat>: 所有途经点坐标
getRoute()
返回当前导航路径，即导航路径的经纬度坐标数组

返回值：
Array<LngLat>: 当前导航路径
destroy()
销毁拖拽导航插件。

事件：
addway
添加途经点触发的事件

属性说明：
data ({type: string, lnglat: LngLat, target: Object})
complete
驾车路径规划完成时触发的事件，data同Driving驾车路线规划返回结果DrivingResult

属性说明：
data ({type: string, lnglat: LngLat, data: Object})
AMap.DragRouteTruck
可拖拽货车路径规划

new AMap.DragRouteTruck(map: Map, opts: DragRouteTruckOptions)
参数说明：
map (Map) 指定的地图对象
opts (DragRouteTruckOptions) 配置项
属性	描述
opts.polyOption
类型：PolylineOptions?	设置拖拽路线插件的路线属性对象，包括线样式、宽度、颜色等，参考 PolylineOptions 列表
opts.startMarkerOptions
类型：MarkerOptions?	设置拖拽路线插件起点点标记属性对象，包括点标记样式、大小等，参考 MarkerOptions 列表
opts.midMarkerOptions
类型：MarkerOptions?	设置拖拽路线插件途经点点标记属性对象，包括点标记样式、大小等，参考 MarkerOptions 列表
opts.endMarkerOptions
类型：MarkerOptions?	设置拖拽路线插件终点点标记属性对象，包括点标记样式、大小等，参考 MarkerOptions 列表
opts.showTraffic
类型：boolean
default true	设置显示实时路况信息，true：路线中显示实时路况信息，false：关闭实时路况信息。 默认值：true
opts.policy
类型：number?	驾车路线规划策略 1躲避拥堵 2不走高速 3避免收费 4躲避拥堵且不走高速 5避免收费且不走高速 6躲避拥堵且避免收费 7躲避拥堵且避免收费且不走高速 8高速优先 9躲避拥堵且高速优先
opts.size
类型：number	车型大小，必填，1-4分别对应小型至大型
opts.width
类型：number
default 2.5	宽度，缺省2.5米
opts.height
类型：number
default 1.6	高度,缺省1.6米
opts.load
类型：number
default 0.9	载重,缺省0.9t
opts.weight
类型：number
default 10	自重，缺省10t
opts.axlesNum
类型：number
default 2	轴数，缺省2轴
opts.extensions
类型：string
default 'base'	默认值：base，返回基本地址信息\n当取值为：all，返回DriveStep基本信息+DriveStep详细信息
opts.panel
类型：(string | HTMLElement)?	结果列表的HTML容器id或容器元素，提供此参数后，结果列表将在此容器中进行展示。可选
opts.hideMarkers
类型：boolean
default false	设置隐藏路径规划的起始点图标 设置为true：隐藏图标；设置false：显示图标\n默认值为：false
opts.showTraffic
类型：boolean?	设置是否显示实时路况信息，默认设置为true。 显示绿色代表畅通，黄色代表轻微拥堵，红色代表比较拥堵，灰色表示无路况信息。
opts.province
类型：string?	车牌省份的汉字缩写，用于判断是否限行，与number属性组合使用，可选。例如：京
opts.number
类型：string?	除省份之外车牌的字母和数字，用于判断限行相关，与province属性组合使用，可选。例如:NH1N11
opts.isOutline
类型：boolean?	使用map属性时，绘制的规划线路是否显示描边。缺省为true
opts.outlineColor
类型：string?	使用map属性时，绘制的规划线路的描边颜色。缺省为'white'
opts.autoFitView
类型：boolean?	用于控制在路径规划结束后，是否自动调整地图视野使绘制的路线处于视口的可见范围
opts.cartype
类型：number
default 0	车辆类型 0：普通货车（默认值）1：纯电动货车 2：插电混动货车
opts.showpolyline
类型：number
default 1	是否返回路线数据 当取值为1时，steps与tmcs下的polyline数据会正常返回；当取值为0时，steps与tmcs下的polyline数据为空。
opts.nosteps
类型：number
default 1	是否返回steps字段内容 当取值为0时，steps字段内容正常返回；当取值为1时，steps字段内容为空。
opts.autoRefresh
类型：boolean
default true	是否拖拽后自动更新驾车轨迹
opts.refreshTime
类型：number
default 300	拖拽后自动更新的延迟时间
opts.apiVersion
类型：number
default 'v4'	货车接口版本支持 'v4','v5'
opts.showFields
类型：string?	仅 v5货车接口版本支持 1、具体可指定返回的字段类请见下方返回结果说明中的“show_fields”内字段类型； 2、多个字段间采用“,”进行分割； 3、show_fields未设置时，只返回基础信息类内字段； 4、目前取值支持以下四种："toll_gate"，"cameras"，"general"，"incident"； "toll_gate"：收费站信息 "cameras"：电子眼信息 "general"：交通设施信息 "incident"：交通事件信息
示例代码：
var arr = new Array();//经纬度坐标数组
path.push({ lnglat: [116.303843, 39.983412] });//起点
path.push({ lnglat: [116.321354, 39.896436] });//途径
path.push({ lnglat: [116.407012, 39.992093] });//终点
AMap.plugin(['AMap.DragRouteTruck'],function(){
   dragRoute = new AMap.DragRouteTruck(mapObj, opts);
   dragRoute.search(path); //查询导航路径并开启拖拽导航
});
成员函数：
setAvoidPolygons(areas)
设置避让区域，最大支持三个避让区域，参数为LngLat的二维数组

参数说明：
areas (Array<Array<LngLatLike>>)
clearAvoidPolygons()
清除避让区域

getAvoidPolygons()
获取避让区域，返回LngLat的二维数组

返回值：
Array<Array<LngLat>>: 避让区域
search(locations)
开始路径导航。支持鼠标拖拽导航路径节点，更改途经点时，系统实时重新计算并显示导航路径

参数说明：
locations (any) : Array<{lnglat:LngLatLike}>
updatePath()
手动更新路径。设置 autoRefresh 为 false 之后，通过调用这个方法来手动更新路径规划

getWays()
返回除了起点和终点之外的所有点返回导航的所有途经点，即所有途径点的坐标数组

返回值：
Array<LngLat>: 所有途经点坐标
getRoute()
返回当前导航路径，即导航路径的经纬度坐标数组

返回值：
Array<LngLat>: 当前导航路径
destroy()
销毁拖拽导航插件。

setOption(opts)
修改配置项

参数说明：
opts (Object)
属性	描述
opts.policy
类型：number?	驾车路线规划策略 1躲避拥堵 2不走高速 3避免收费 4躲避拥堵且不走高速 5避免收费且不走高速 6躲避拥堵且避免收费 7躲避拥堵且避免收费且不走高速 8高速优先 9躲避拥堵且高速优先
opts.size
类型：number	车型大小，必填，1-4分别对应小型至大型
opts.width
类型：number
default 2.5	宽度，缺省2.5米
opts.height
类型：number
default 1.6	高度,缺省1.6米
opts.load
类型：number
default 0.9	载重,缺省0.9t
opts.weight
类型：number
default 10	自重，缺省10t
opts.axlesNum
类型：number
default 2	轴数，缺省2轴
opts.extensions
类型：string
default 'base'	默认值：base，返回基本地址信息\n当取值为：all，返回DriveStep基本信息+DriveStep详细信息
opts.panel
类型：(string | HTMLElement)?	结果列表的HTML容器id或容器元素，提供此参数后，结果列表将在此容器中进行展示。可选
opts.hideMarkers
类型：boolean
default false	设置隐藏路径规划的起始点图标 设置为true：隐藏图标；设置false：显示图标\n默认值为：false
opts.showTraffic
类型：boolean?	设置是否显示实时路况信息，默认设置为true。 显示绿色代表畅通，黄色代表轻微拥堵，红色代表比较拥堵，灰色表示无路况信息。
opts.province
类型：string?	车牌省份的汉字缩写，用于判断是否限行，与number属性组合使用，可选。例如：京
opts.number
类型：string?	除省份之外车牌的字母和数字，用于判断限行相关，与province属性组合使用，可选。例如:NH1N11
opts.isOutline
类型：boolean?	使用map属性时，绘制的规划线路是否显示描边。缺省为true
opts.outlineColor
类型：string?	使用map属性时，绘制的规划线路的描边颜色。缺省为'white'
opts.autoFitView
类型：boolean?	用于控制在路径规划结束后，是否自动调整地图视野使绘制的路线处于视口的可见范围
opts.cartype
类型：number
default 0	车辆类型 0：普通货车（默认值）1：纯电动货车 2：插电混动货车
opts.showpolyline
类型：number
default 1	是否返回路线数据 当取值为1时，steps与tmcs下的polyline数据会正常返回；当取值为0时，steps与tmcs下的polyline数据为空。
opts.nosteps
类型：number
default 1	是否返回steps字段内容 当取值为0时，steps字段内容正常返回；当取值为1时，steps字段内容为空。
事件：
addway
添加途经点触发的事件

属性说明：
data ({type: string, lnglat: LngLat, target: Object})
complete
驾车路径规划完成时触发的事件，data同Driving驾车路线规划返回结果DrivingResult

属性说明：
data ({type: string, lnglat: LngLat, data: Object})
AMap.GraspRoad
轨迹纠偏服务插件。用于将一组带方向的、可能偏离道路的经纬度轨迹，纠正为准确沿着道路的一条经纬度路径。比如根据间隔采集的车辆位置和朝向信息生成行驶轨迹

new AMap.GraspRoad()
成员函数：
driving(OriginPath, callback)
用于驾车轨迹的纠偏。

参数说明：
OriginPath (Array<Object>)
属性	描述
OriginPath.x
类型：number	经度
OriginPath.y
类型：number	纬度
OriginPath.ag
类型：number	与正北方向的顺时针夹角， [ 0, 360 ]
OriginPath.tm
类型：number	轨迹点采集的时间，以s为单位 OriginPath数组第一个元素的tm值为从1970年开始的unix的时间戳，精确到秒。 其余元素的tm值为当前采集点的时间减去第一个元素的采集时间的差值
OriginPath.sp
类型：number	轨迹点的速度，单位 km/h，小数、整数均可
callback (GraspRoadCallback) 回调函数
GraspRoadCallback
Type: Function

参数说明：
err (Object) 正确时为空
GraspedPath (Object) 返回数据， 详查rest文档
属性	描述
GraspedPath.distance
类型：number	总距离
GraspedPath.data
类型：Object	
GraspedPath.data.points
类型：Array<Object>	轨迹点数据
GraspedPath.data.points.x
类型：number	经度
GraspedPath.data.points.x
类型：number	纬度
其他服务
行政区查询、天气查询、公交站点和公交线路查询

AMap.DistrictSearch
行政区查询服务（AMap.DistrictSearch）提供行政区信息的查询， 使用该服务可以获取到行政区域的区号、城市编码、中心点、边界、下辖区域等详细信息，为基于行政区域的地图功能提供支持。

new AMap.DistrictSearch(opts: DistrictSearchOptions, level: string, showbiz: boolean, extensions: string, subdistrict: number)
参数说明：
opts (DistrictSearchOptions) 默认参数
level (string) 关键字对应的行政区级别或商圈，可选值： country：国家 province：省/直辖市 city：市 district：区/县 biz_area：商圈
showbiz (boolean) 是否显示商圈，默认值true 可选为true/false，为了能够精准的定位到街道，特别是在快递、物流、送餐等场景下，强烈建议将此设置为false
extensions (string) 是否返回行政区边界坐标点，默认值：base，不返回行政区边界坐标点，取值：all，返回完整行政区边界坐标点
subdistrict (number) 显示下级行政区级数（行政区级别包括：国家、省/直辖市、市、区/县4个级别），商圈为区/县下一 级，可选值：0、1、2、3，默认值：1 0：不返回下级行政区 1：返回下一级行政区 2：返回下两级行政区 3：返回下三级行政区
示例代码：
AMap.plugin('AMap.DistrictSearch', function () {
  var districtSearch = new AMap.DistrictSearch({
    // 关键字对应的行政区级别，country表示国家
    level: 'country',
    //  显示下级行政区级数，1表示返回下一级行政区
    subdistrict: 1
  })
  // 搜索所有省/直辖市信息
  districtSearch.search('中国', function(status, result) {
    // 查询成功时，result即为对应的行政区信息
  })
})
// 除了获取所有省份/直辖市信息外，您可以通过修改level和subdistrict并配合search传入对应keyword查询对应信息。
静态方法：
setLevel(level)
设置关键字对应的行政区级别或商圈，可选值： country：国家 province：省/直辖市 city：市 district：区/县 biz_area：商圈

参数说明：
level (string) 设置级别
setSubdistrict(subdistrict)
设置下级行政区级数（行政区级别包括：国家、省/直辖市、市、区/县4个级别），商圈为区/县下一级，默认值：1 可选值：0、1、2、3 0：不返回下级行政区； 1：返回下一级行政区； 2：返回下两级行政区； 3：返回下三级行政区；

参数说明：
subdistrict (string) 下级行政区级数
search(keyword, DistrictSearchCallBack, keywords)
根据关键字查询行政区或商圈信息 关键字支持：行政区名、citycode、adcode、商圈名。默认值：“全国” 当status为complete时，result为DistrictSearchResult； 当status为error时，result为错误信息info； 当status为no_data时，代表检索返回0结果

参数说明：
keyword (any)
DistrictSearchCallBack (function (status: String, result: info/DistrictSearchResult)) 回调函数
keywords (string) 查询的关键字
事件：
complete
查询成功时触发此事件

返回值：
DistrictSearchResult:
error
当查询失败时触发此事件

返回值：
ErrorStatus:
AMap.Weather
天气查询服务，根据城市名称或区域编码返回城市天气预报信息，包括实时天气信息和四天天气预报。

new AMap.Weather()
示例代码：
map.plugin(['AMap.Weather'], function() {
	//构造 Weather 类
	var amapWeather = new AMap.Weather(); 
	//查询实时天气信息，cityName 见 http://restapi.amap.com/v3/config/district?level=city&sublevel=0&extensions=all&output=xml&key=d9fba2f3196b6a4419358693a2b0d9a9
	amapWeather.getLive('北京'); 
	//查询四天预报天气，包括查询当天天气信息
	amapWeather.getForecast('北京'); 
	AMap.event.addListener(amapWeather, "complete", function callback(){
		//当查询成功时触发 complete 事件
	}); 
});
成员函数：
getLive(city, callback)
查询实时天气信息。

参数说明：
city (String) 城市名称/区域编码（如：“杭州市”/“330100”）
callback (WeatherLiveResult) 回调函数
getForecast(city, callback)
查询四天预报天气，包括查询当天天气信息

参数说明：
city (String)
callback (WeatherForecastResult) 回调函数
事件：
error
当查询失败时触发此事件

complete
当查询成功时触发此事件

WeatherLiveResult
Type: Function

参数说明：
err (Object) 正确时为空
LiveData (Object) 返回数据
属性	描述
LiveData.info
类型：String	成功状态文字描述
LiveData.province
类型：String	省份名
LiveData.city
类型：String	城市名
LiveData.adcode
类型：String	区域编码
LiveData.weather
类型：String	天气现象，详见天气现象列表
LiveData.temperature
类型：String	实时气温，单位：摄氏度
LiveData.windDirection
类型：String	风向，风向编码对应描述
LiveData.windPower
类型：Number	风力，风力编码对应风力级别，单位：级
LiveData.humidity
类型：String	空气湿度（百分比）
LiveData.reportTime
类型：String	数据发布的时间
WeatherForecastResult
Type: Function

参数说明：
err (Object) 正确时为空
ForecastData (Object) 返回数据
属性	描述
ForecastData.info
类型：String	成功状态文字描述
ForecastData.province
类型：String	省份名
ForecastData.city
类型：String	城市名
ForecastData.adcode
类型：String	区域编码
ForecastData.reportTime
类型：String	数据发布的时间
ForecastData.forecast
类型：Array	天气预报数组，包括当天至第三天的预报数据
ForecastData.forecast.date
类型：String	日期，格式为“年-月-日”
ForecastData.forecast.week
类型：String	星期
ForecastData.forecast.dayWeather
类型：String	白天天气现象，详见天气现象列表
ForecastData.forecast.nightWeather
类型：String	夜间天气现象，详见天气现象列表
ForecastData.forecast.dayTemp
类型：Number	白天温度
ForecastData.forecast.nightTemp
类型：Number	白天温度
ForecastData.forecast.dayWindDir
类型：String	白天风向
ForecastData.forecast.dayWindPower
类型：String	白天风力
ForecastData.forecast.nightWindPower
类型：String	夜间风力
AMap.StationSearch
AMap.StationSearch 公交站点查询服务，根据输入关键字、ID查询公交站点信息。 用户可以通过自定义回调函数取回并显示查询结果。若服务请求失败，系统将返回错误信息。

new AMap.StationSearch(opts: StationSearchOptions)
参数说明：
opts (StationSearchOptions) 参数信息
属性	描述
opts.pageIndex
类型：Number	页码（如pageIndex为2，pageSize为10，那么显示的应是第11-20条返回结果） 默认值：1，取值范围：1-100，超过取值范围按默认，超出实际页数按最大值返回
opts.pageSize
类型：Number	单页显示结果条数，默认值：20，取值范围：1-100，超过取值范围按默认
opts.city
类型：String	公交站点所在城市，默认值：“全国”，可选值：cityname（中文或中文全拼）、citycode、adcode
示例代码：
//加载公交站点查询插件
mapObj.plugin(["AMap.StationSearch"], function() {
   //实例化公交站点查询类
   var station = new AMap.StationSearch({
       pageIndex: 1, //页码
       pageSize: 10, //单页显示结果条数
       city:'010'    //确定搜索城市
   });
   station.search('东直门'); //查询
   AMap.event.addListener(station, 'complete', stationSearch_CallBack);
   AMap.event.addListener(station, 'error', function(e) {alert(e.info);});
});
静态方法：
StationSearchOptions
Type: Object

属性说明：
pageIndex (Number) : 页码（如pageIndex为2，pageSize为10，那么显示的应是第11-20条返回结果），默认值：1 取值范围：1-100，超过取值范围按默认; 超出实际页数，按最大值
pageSize (Number) : 单页显示结果条数，默认值：20
city (String) : 公交线路所在城市
成员函数：
setPageIndex
设置查询结果页码，默认值：1 取值范围：1-100，超过取值范围按默认

参数说明：
pageIndex (Number) 结果页码
setPageSize
设置单页显示结果条数，默认值：20 取值范围：1-100，超过取值范围按默认

参数说明：
pageSize (Number) 单页显示结果条数
setCity
设置查询城市，默认值：“全国” 可选值：cityname（中文或中文全拼）、citycode、adcode

参数说明：
city (String) 查询城市
setCity
根据给定的公交站点id进行公交站点详情检索，id是公交站点的唯一标识 当status为complete时，result为StationSearchResult； 当status为error时，result为错误信息info； 当status为no_data时，代表检索返回0结果

参数说明：
id (String) 公交站点 id
setCity
根据给定公交站点名称进行公交站点详情查询，多个关键字用"|"分割，status说明同上 相关示例

参数说明：
keyword (String) 公交站点名称
StationSearchCallback (String) 回调函数
事件：
StationSearchEvent
StationSearch event

属性说明：
complete (event) : 当查询成功时触发此事件
error (event) : 当查询失败时触发此事件
AMap.LineSearch
AMap.LineSearch 公交路线查询类，通过extensions属性控制返回信息详略。 公交线路信息包括起、终点、途径站点，首、末班车时间等信息。用户可以通过自定义回调函数取回并显示查询结果。 若服务请求失败，系统将返回错误信息。

new AMap.LineSearch(opts: LineSearchOptions, extensions: String)
参数说明：
opts (LineSearchOptions) 参数信息
属性	描述
opts.pageIndex
类型：Number	页码（如pageIndex为2，pageSize为10，那么显示的应是第11-20条返回结果） 默认值：1，取值范围：1-100，超过取值范围按默认，超出实际页数按最大值返回
opts.pageSize
类型：Number	单页显示结果条数，默认值：20，取值范围：1-100，超过取值范围按默认
opts.city
类型：String	公交站点所在城市，默认值：“全国”，可选值：cityname（中文或中文全拼）、citycode、adcode
extensions (String) 此项仅公交路线查询时有效，默认值：base，返回公交路线基本信息，当取值为：all，返回公交路线基本信息+详细信息
示例代码：
//加载公交线路查询插件
mapObj.plugin(["AMap.LineSearch"], function() {
    //实例化公交线路查询类
    var linesearch = new AMap.LineSearch({
        pageIndex:1,
        pageSize:1,
        extensions:'all'
    });
    //搜索“536”相关公交线路
    linesearch.search('536');
    AMap.event.addListener(linesearch, "complete", lineSearch_Callback);
   AMap.event.addListener(citysearch, "error", function(e){alert(e.info);});
});
静态方法：
LineSearchOptions
Type: Object

属性说明：
pageIndex (Number) : 页码（如pageIndex为2，pageSize为10，那么显示的应是第11-20条返回结果），默认值：1 取值范围：1-100，超过取值范围按默认; 超出实际页数，按最大值
pageSize (Number) : 单页显示结果条数，默认值：20
city (String) : 公交线路所在城市
extensions (String) : 此项仅公交路线查询时有效 默认值：base，返回公交路线基本信息 当取值为：all，返回公交路线基本信息+详细信息
成员函数：
setPageIndex
设置查询结果页码，默认值：1 取值范围：1-100，超过取值范围按默认

参数说明：
pageIndex (Number) 结果页码
setPageSize
设置单页显示结果条数，默认值：20 取值范围：1-100，超过取值范围按默认

参数说明：
pageSize (Number) 单页显示结果条数
setCity(city)
设置查询城市，默认值：“全国” 可选值：cityname（中文或中文全拼）、citycode、adcode

参数说明：
city (String) 城市
setCity
设置查询城市，默认值：“全国” 可选值：cityname（中文或中文全拼）、citycode、adcode

参数说明：
city (String) 查询城市
setCity
根据给定的公交站点id进行公交站点详情检索，id是公交站点的唯一标识 当status为complete时，result为LineSearchResult； 当status为error时，result为错误信息info； 当status为no_data时，代表检索返回0结果

参数说明：
id (String) 公交站点 id
setCity
根据给定公交站点名称进行公交站点详情查询，多个关键字用"|"分割，status说明同上 相关示例

参数说明：
keyword (String) 公交站点名称
LineSearchCallback (String) 回调函数
事件：
LineSearchEvent
LineSearch event

属性说明：
complete (event) : 当查询成功时触发此事件
error (event) : 当查询失败时触发此事件
定位
用于进行城市定位或者精确定位的插件类型

AMap.Geolocation
AMap.Geolocation 定位服务插件。融合了浏览器定位、高精度IP定位、安卓定位sdk辅助定位等多种手段，提供了获取当前准确位置、获取当前城市信息、持续定位(浏览器定位)等功能。用户可以通过两种当时获得定位的成败和结果，一种是在 getCurrentPosition的时候传入回调函数来处理定位结果，一种是通过事件监听来取得定位结果。

new AMap.Geolocation(options: GeolocationOptions)
参数说明：
options (GeolocationOptions) 初始化参数
属性	描述
options.position
类型：string	悬停位置，默认为"RB"，即右下角
options.offset
类型：[number, number]	缩略图距离悬停位置的像素距离，如 [2,2]
options.borderColor
类型：string	按钮边框颜色值，同CSS，如'silver'
options.borderRadius
类型：string	按钮圆角边框值，同CSS，如'5px'
options.buttonSize
类型：string	箭头按钮的像素尺寸，同CSS，如'12px'
options.convert
类型：boolean	是否将定位结果转换为高德坐标
options.enableHighAccuracy
类型：boolean	进行浏览器原生定位的时候是否尝试获取较高精度，可能影响定位效率，默认为false
options.timeout
类型：number	定位的超时时间，毫秒
options.maximumAge
类型：number	浏览器原生定位的缓存时间，毫秒
options.showButton
类型：boolean	是否显示定位按钮，默认为true
options.showCircle
类型：boolean	是否显示定位精度圆，默认为true
options.showMarker
类型：boolean	是否显示定位点，默认为true
options.markerOptions
类型：MarkerOptions	定位点的样式
options.circleOptions
类型：CircleOptions	定位圆的样式
options.panToLocation
类型：boolean	定位成功后是否自动移动到响应位置
options.zoomToAccuracy
类型：boolean	定位成功后是否自动调整级别
options.GeoLocationFirst
类型：boolean	优先使用H5定位，默认移动端为true，PC端为false
options.noIpLocate
类型：number	是否禁用IP精确定位，默认为0，0:都用 1:手机上不用 2:PC上不用 3:都不用
options.noGeoLocation
类型：number	是否禁用浏览器原生定位，默认为0，0:都用 1:手机上不用 2:PC上不用 3:都不用
options.useNative
类型：boolean	是否与高德定位SDK能力结合，需要同时使用安卓版高德定位sdk，否则无效
options.getCityWhenFail
类型：boolean	定位失败之后是否返回基本城市定位信息
options.needAddress
类型：boolean	是否需要将定位结果进行逆地理编码操作
options.extensions
类型：string	是否需要详细的逆地理编码信息，默认为'base'只返回基本信息，可选'all'
成员函数：
getCurrentPosition(callback)
获取 用户的精确位置，有失败几率

参数说明：
callback (GeolocationCallBack) 定位回调函数，成功或者失败均会回调
getCityInfo(callback)
根据用户 IP 获取 用户所在城市信息

参数说明：
callback (GeolocationCallBack)
GeolocationCallBack
Geolocation插件的定位回调函数

Type: Function

参数说明：
status (string) 'complete' 或者 'error'
result (GeolocationResult) 定位结果
GeolocationResult
浏览器定位的定位结果，定位的过程和失败信息可以从 message 字段中获取

Type: Object

属性说明：
position (LngLat) : 定位到的经纬度位置
accuracy (number) : 定位精度，米
location_type (number) : 定位的类型，ip/h5/sdk/ipcity
message (number) : 定位过程的信息，用于排查定位失败原因
isConverted (number) : 是否已经转换为高德坐标
info (number) : 'SUCCESS' 或者 'PERMISSION_DENIED' 或者 'TIME_OUT' 或者 'POSITION_UNAVAILABLE'
addressComponent (number) : needAddress的时候返回，结构化地址信息
formattedAddress (number) : needAddress的时候返回，规范地址
pois (number) : needAddress的时候返回，定位点附近的POI信息
roads (number) : needAddress的时候返回，定位点附近的道路信息
crosses (number) : needAddress的时候返回，定位点附近的交叉口信息
AMap.CitySearch
AMap.CitySearch 根据IP返回对应城市信息，提供根据输入IP或自动获取IP获取对应城市信息功能。 用户可以通过自定义回调函数取回并显示查询结果。 若服务请求失败，系统将返回错误信息。

new AMap.CitySearch()
成员函数：
getLocalCity(CitySearchCallback, cbk)
自动获取用户IP，回调返回当前用户所在城市 当status为complete时，result为CitySearchResult； 当status为error时，result为错误信息info； 当status为no_data时，代表检索返回0结果

参数说明：
CitySearchCallback (function) 查询的回调函数
cbk (function (status: String, result: info)) 回调函数
getCityByIp(ip, CitySearchCallback)
根据输入IP地址返回对应城市信息，status同上

参数说明：
ip (String) IP地址
CitySearchCallback (function (status: String, result: info)) 回调函数
事件：
complete
当查询成功时触发此事件

error
当查询失败时触发此事件

通用库
一些通用的函数库

GeometryUtil
GeometryUtil为一组空间数据计算的函数库，v1.4.2新增。支持点线面的空间关系计算、长度、面积计算等等，

成员函数：
distance(p1, p2)
计算两个经纬度点之间的实际距离。单位：米

参数说明：
p1 (LngLatLike)
p2 (LngLatLike)
返回值：
number:
ringArea(ring)
计算一个经纬度路径围成区域的实际面积。单位：平米

参数说明：
ring (Array<LngLatLike>)
返回值：
number:
ringAreaByAltitude(AverageAltitude)
计算一个带有绝对海拔的经纬度高度路径围成区域的实际面积。单位：平米

参数说明：
AverageAltitude (number)
返回值：
number:
isClockwise(ring)
判断一个经纬度路径是否为顺时针

参数说明：
ring (Array<LngLatLike>)
返回值：
boolean:
typePolygon(ring)
判断一个经纬度路径面类型

参数说明：
ring (Array<LngLatLike>)
返回值：
boolean:
makesureClockwise(ring)
将一个路径变为顺时针

参数说明：
ring (Array<LngLatLike>)
返回值：
Array<[number, number]>:
makesureAntiClockwise(ring)
将一个路径变为逆时针

参数说明：
ring (Array<LngLatLike>)
返回值：
Array<[number, number]>:
distanceOfLine(ring)
计算一个经纬度路径的实际长度。单位：米

参数说明：
ring (Array<LngLatLike>)
返回值：
number:
distanceOfLineByAltitude(ring)
计算一个经纬度带绝对海报高度路径的实际长度。单位：米

参数说明：
ring (Array<LngLatLike>)
返回值：
any: {number}
distanceLineByAltitude(pt1, pt2)
计算一个经纬度带绝对海报高度两点空间距离的实际长度。单位：米

参数说明：
pt1 (Array<number>)
pt2 (Array<number>)
返回值：
any: {number}
ringRingClip(ring1, ring2)
计算两个经纬度面的交叉区域。只适用于凸多边形

参数说明：
ring1 (Array<LngLatLike>)
ring2 (Array<LngLatLike>)
doesSegmentsIntersect(p1, p2, p3, p4)
判断两个线段是否相交

参数说明：
p1 (LngLatLike)
p2 (LngLatLike)
p3 (LngLatLike)
p4 (LngLatLike)
返回值：
boolean:
doesSegmentLineIntersect(p1, p2, line)
判断线段和一个路径是否相交

参数说明：
p1 (LngLatLike)
p2 (LngLatLike)
line (Array<LngLatLike>)
返回值：
boolean:
doesSegmentRingIntersect(p1, p2, ring)
判断线段和一个环是否相交

参数说明：
p1 (LngLatLike)
p2 (LngLatLike)
ring (Array<LngLatLike>)
返回值：
boolean:
doesSegmentPolygonIntersect(p1, p2)
判断线段和多个环是否相交

参数说明：
p1 (LngLatLike)
p2 (LngLatLike)
返回值：
boolean:
doesLineLineIntersect(line, line)
判断两个经纬度路径是否相交

参数说明：
line (Array<LngLatLike>)
line (Array<LngLatLike>)
返回值：
boolean:
doesLineRingIntersect(line, ring)
判断经纬度路径和经纬度面是否交叉

参数说明：
line (Array<LngLatLike>)
ring (Array<LngLatLike>)
返回值：
boolean:
doesRingRingIntersect(ring1, ring2)
判断两个经纬度面是否交叉

参数说明：
ring1 (Array<LngLatLike>)
ring2 (Array<LngLatLike>)
返回值：
boolean:
pointInRing(p, ring)
判断点是否在环内，支持任意坐标系

参数说明：
p (LngLatLike)
ring (Array<LngLatLike>)
返回值：
boolean:
isPointInRing(p, ring)
判断点是否在环内

参数说明：
p (LngLatLike)
ring (Array<LngLatLike>)
返回值：
boolean:
isPointInBbox(p, bbox)
判断点是否在环内

参数说明：
p (LngLatLike)
bbox (Array<LngLatLike>)
返回值：
boolean:
isRingInRing(ring1, ring2)
判断环是否在另一个环内

参数说明：
ring1 (Array<LngLatLike>)
ring2 (Array<LngLatLike>)
返回值：
boolean:
isPointInPolygon(p, rings)
判断点是否在多个环组成区域内

参数说明：
p (LngLatLike)
rings ([Array<ringLngLatLike>])
返回值：
boolean:
isPointInPolygons(p, polygons)
判断点是否在带洞多多边型内

参数说明：
p (LngLatLike)
polygons ([[Array<ringLngLatLike>]])
返回值：
boolean:
isPointOnSegment(p1, p2, p3, tolerance)
判断P1是否在P2P3上，tolerance为误差范围

参数说明：
p1 (LngLatLike)
p2 (LngLatLike)
p3 (LngLatLike)
tolerance (Number)
返回值：
boolean:
isPointOnLine(p, line, tolerance)
判断P是否在line上，tolerance为误差范围

参数说明：
p (LngLatLike)
line (Array<LngLatLike>)
tolerance (number)
返回值：
boolean:
isPointOnRing(p, ring, tolerance)
判断P是否在ring的边上，tolerance为误差范围

参数说明：
p (LngLatLike)
ring (Array<LngLatLike>)
tolerance (number)
返回值：
boolean:
isPointOnPolygon(p, tolerance)
判断P是否在多个ring的边上，tolerance为误差范围

参数说明：
p (LngLatLike)
tolerance (number)
返回值：
boolean:
closestOnSegment(p1, p2, p3)
计算P2P3上距离P1最近的点

参数说明：
p1 (LngLatLike)
p2 (LngLatLike)
p3 (LngLatLike)
返回值：
boolean:
closestOnLine(p, line)
计算line上距离P最近的点

参数说明：
p (LngLatLike)
line (Array<LngLatLike>)
返回值：
boolean:
distanceToSegment(p1, p2, p3)
计算P2P3到P1的距离。单位：米

参数说明：
p1 (LngLatLike)
p2 (LngLatLike)
p3 (LngLatLike)
返回值：
LngLat:
distanceToLine(p, line)
计算P到line的距离。单位：米

参数说明：
p (LngLatLike)
line (Array<LngLatLike>)
返回值：
number:
DomUtil
成员函数：
getViewport(obj)
获取DOM元素的大小

参数说明：
obj (HTMLElement)
返回值：
[number, number]:
getViewportOffset(element)
获取DOM元素距离窗口左上角的距离

参数说明：
element (HTMLElement)
返回值：
[number, number]:
create(tagName, container, className, position)
在parentNode内部创建一个className类名的tagName元素

参数说明：
tagName (string) 节点类型
container (HTMLElement) 上级节点对象
className (string)
position (string) 插入位置
返回值：
HTMLElement:
hasClass(el, name)
DOM元素是否包含className

参数说明：
el (HTMLElement)
name (string)
返回值：
boolean:
addClass(el, name)
给DOM元素添加一个className

参数说明：
el (HTMLElement)
name (string)
setClass(el, name)
给DOM元素设置为className样式

参数说明：
el (HTMLElement)
name (string)
removeClass(el, name)
给DOM元素删除一个className

参数说明：
el (HTMLElement)
name (string)
remove(el)
将DOM元素从父节点删除

参数说明：
el (HTMLElement)
empty(el)
清空DOM元素

参数说明：
el (HTMLElement)
rotate(target, angle, center)
给DOM元素旋转一个角度，以center为中心，center以元素左上角为坐标原点

参数说明：
target (HTMLElement)
angle (number)
center (Pixel)
setCss(obj, css)
给DOM元素删除一组样式，Object同样式表

参数说明：
obj ((HTMLElement | Array<HTMLElement>))
css (Object)
setOpacity(el, value)
给DOM元素设定一个透明度

参数说明：
el (HTMLElement)
value (number)
Browser
属性说明：
us (string) : 当前浏览器userAgent
mobile (boolean) : 是否移动设备
plat (string) : 平台类型，如：'windows'、'mac'、'ios'、'android'、'other'
windows (boolean) : 是否windows设备
ios (boolean) : 是否iOS设备
iPad (boolean) : 是否iPad
Phone (boolean) : 是否iPhone
android (boolean) : 是否安卓设备
android23 (boolean) : 是否安卓4以下系统
chrome (boolean) : 是否Chrome浏览器
firefox (boolean) : 是否火狐浏览器
safari (boolean) : 是否Safari浏览器
wechat (boolean) : 是否微信
uc (boolean) : 是否UC浏览器
qq (boolean) : 是否QQ或者QQ浏览器
ie (boolean) : 是否IE
ie6 (boolean) : 是否IE6
ie7 (boolean) : 是否IE7
ie8 (boolean) : 是否IE8
ie9 (boolean) : 是否IE9
ie10 (boolean) : 是否IE10
ie11 (boolean) : 是否IE11
ielt9 (boolean) : 是否IE9以下
edge (boolean) : 是否Edge浏览器
isLocalStorage (boolean) : 是否支持LocaStorage
isGeolocation (boolean) : 是否支持Geolocation
mobileWebkit (boolean) : 是否Webkit移动浏览器
mobileWebkit3d (boolean) : 是否支持Css3D的Webkit移动端浏览器
retina (boolean) : 是否高清屏幕，devicePixelRatio>1
touch (boolean) : 是否触屏
msPointer (boolean) : 是否msPointer设备
pointer (boolean) : 是否pointer设备
webkit (boolean) : 是否webkit浏览器
webkit3d (boolean) : 是否支持Css3D的Webkit浏览器
gecko3d (boolean) : 是否支持Css3D的gecko浏览器
ie3d (boolean) : 是否支持Css3D的ie浏览器
any3d (boolean) : 是否支持Css3D的浏览器
opera3d (boolean) : 是否支持Css3D的opera浏览器
isCanvas (boolean) : 是否支持canvas
isSvg (boolean) : 是否支持svg
isVML (boolean) : 是否支持vml
isWorker (boolean) : 是否支持WebWorker
isWebsocket (boolean) : 是否支持WebSocket
isWebGL (boolean) : 是否支持webgl
Util
成员函数：
isDOM(obj)
判断参数是否为DOM元素

参数说明：
obj (any)
返回值：
boolean:
colorNameToHex(colorName)
参数说明：
colorName (string)
返回值：
string: 如#FFFFFF的颜色值
rgbHex2Rgba(hex)
将16进制RGB转为rgba(R,G,B,A)

参数说明：
hex (string)
返回值：
string:
argbHex2Rgba(hex)
将16进制RGBA转为rgba(R,G,B,A)

参数说明：
hex (string)
返回值：
string:
isEmpty(obj)
判断一个对象是否为空

参数说明：
obj (any)
返回值：
boolean:
deleteItemFromArray(array, item)
从数组删除元素

参数说明：
array (any)
item (any)
deleteItemFromArrayByIndex(array, index)
按索引删除数组元素

参数说明：
array (any)
index (number)
indexOf(array, item)
返回元素索引

参数说明：
array (any)
item (any)
返回值：
number:
format(num, digits)
保留小数点后digits位

参数说明：
num (number)
digits (number)
返回值：
number:
isArray(obj)
判断是否数组

参数说明：
obj (any)
返回值：
boolean:
includes(array, item)
判断数组是否包含某个元素

参数说明：
array (Array<any>)
item (any)
返回值：
boolean:
requestIdleCallback(func)
同原生requestIdleCallback

参数说明：
func (Function)
返回值：
number:
cancelIdleCallback(id)
同原生 cancelIdleCallback

参数说明：
id (number)
requestAnimFrame(func)
同原生 Util.requestAnimFrame

参数说明：
func (Function)
返回值：
number:
cancelAnimFrame(id)
同原生 Util.cancelAnimFrame

参数说明：
id (number)