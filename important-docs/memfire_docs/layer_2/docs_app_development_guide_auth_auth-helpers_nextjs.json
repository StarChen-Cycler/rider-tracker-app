{
  "url": "https://docs.memfiredb.com/docs/app/development_guide/auth/auth-helpers/nextjs",
  "title": "使用Next.js进行Supabase认证 | MemFire Cloud在线文档",
  "depth": 2,
  "timestamp": "2025-08-12 18:15:16",
  "html": "<main class=\"page-content bg-transparent\">\n<div class=\"top-header d-print-none\" id=\"top-header\">\n<div class=\"header-bar d-flex justify-content-between\">\n<div class=\"d-flex align-items-center\">\n<a alt=\"HomePage\" aria-label=\"HomePage\" class=\"logo-icon me-3\" href=\"/\">\n<div class=\"small\">\n<!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->\n<svg height=\"112px\" version=\"1.1\" viewbox=\"0 0 99 112\" width=\"99px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<title>MemFireDB备份 6</title>\n<defs>\n<lineargradient id=\"linearGradient-1\" x1=\"49.9999885%\" x2=\"49.9999885%\" y1=\"98.082503%\" y2=\"0.766550128%\">\n<stop offset=\"0%\" stop-color=\"#ED1C23\"></stop>\n<stop offset=\"100%\" stop-color=\"#FBAF3B\"></stop>\n</lineargradient>\n</defs>\n<g fill=\"none\" fill-rule=\"evenodd\" id=\"定稿\" stroke=\"none\" stroke-width=\"1\">\n<g id=\"MemFireDB备份-6\">\n<polygon fill=\"#F9AE7C\" id=\"Fill-1\" points=\"25.9728553 40.7912363 47.4268317 0.00591833831 1.15453123 26.7215251\"></polygon>\n<polygon fill=\"#F9AE7C\" id=\"Fill-3\" points=\"97.4213117 26.7267606 51.1285247 0.000910513587 72.4242993 40.8351686\"></polygon>\n<polygon fill=\"#F9904A\" id=\"Fill-5\" points=\"24.8347133 42.7618153 0.000455256793 28.682999 0.000455256793 82.1608764\"></polygon>\n<polygon fill=\"url(#linearGradient-1)\" id=\"Fill-7\" points=\"27.6634514 42.4662399 49.279044 109.05096 70.7296059 42.507213 49.2779058 1.3747617\"></polygon>\n<polygon fill=\"#F9904A\" id=\"Fill-9\" points=\"98.5660549 28.6951771 73.5622137 42.8047233 98.5660549 82.1719163\"></polygon>\n<polygon fill=\"#FB6D33\" id=\"Fill-13\" points=\"72.2987623 45.061545 50.7514582 111.900071 97.579172 84.8646465\"></polygon>\n<polygon fill=\"#FB6D33\" id=\"Fill-15\" points=\"26.1006687 45.0226206 0.987565799 84.8644188 47.8095888 111.898705\"></polygon>\n<path d=\"M60.0737516,38.507213 C59.3168872,35.669825 57.0462939,33.3514298 57.0462939,33.3514298 C57.0462939,33.3514298 57.0804382,35.8849338 56.2894295,37.513615 C55.4847631,39.1696116 53.8765685,40.3054773 53.8765685,40.3054773 C53.8765685,40.3054773 56.1016361,33.8840802 54.2715038,30.1247973 C52.0259496,25.5073552 49.1771803,23.3357803 49.1771803,23.3357803 C49.1771803,23.3357803 50.1070423,28.1319107 48.6240432,31.5065016 C47.1672215,34.8264618 42.8058614,36.7260208 40.7241997,38.7132167 C39.1865699,40.1791435 38.0814341,43.0711623 37.6068289,44.4847347 C37.5715465,44.5883056 37.560165,44.6918765 37.5533362,44.7943093 C37.584066,43.9816759 37.8890881,39.8024186 40.9654858,37.4293925 C43.8404325,35.2111538 41.2431925,30.3478731 41.2431925,30.3478731 C41.2431925,30.3478731 41.7212121,32.5638355 40.9939394,34.1401622 C40.2655285,35.7153507 38.7187936,36.5962726 38.0154218,38.259098 C37.3883056,39.7409589 37.5203301,44.1432921 37.5453692,44.8409731 C37.5453692,44.8591834 37.5476455,44.8762555 37.5476455,44.8921895 C37.5476455,44.9263338 37.5487836,44.9456822 37.5487836,44.9456822 L37.5487836,44.9115379 C37.5590269,45.2655001 37.7138142,45.6080808 37.9972116,45.8448143 L48.3713757,55.6442168 C48.8380139,56.0323232 49.5163466,56.0334614 49.9841229,55.6476312 L60.5938825,45.7105136 C60.9034571,45.4544316 61.0719021,45.0686015 61.0457249,44.6656992 C60.9546735,43.2282259 60.5699815,40.3692133 60.0737516,38.507213\" fill=\"#FFFFFF\" id=\"Fill-17\"></path>\n</g>\n</g>\n</svg>\n</div>\n<div class=\"big\">\n<svg height=\"20\" width=\"232\" xmlns=\"http://www.w3.org/2000/svg\"><defs><lineargradient id=\"a\" x1=\"50%\" x2=\"50%\" y1=\"98.083%\" y2=\".767%\"><stop offset=\"0%\" stop-color=\"#ED1C23\"></stop><stop offset=\"100%\" stop-color=\"#FBAF3B\"></stop></lineargradient></defs><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M78.622 12.384l1.596 21.94H77.49l-.847-14.154-8.98 15.523-4.899-15.53-4.416 14.162H55.6l7.085-21.871 5.712 17.174 10.224-17.244zm99.46.382l.324.01.454.036c.085.008.175.018.269.03l.61.096c1.09.203 2.518.644 3.883 1.596l.515.383-.46 3.694-.413-.62-.154-.195-.255-.285c-.765-.802-2.485-2.188-5.23-2.188-4.55 0-8.723 3.809-9.3 8.491-.287 2.311.334 4.469 1.755 6.077 1.342 1.517 3.257 2.354 5.39 2.354 2.606 0 4.58-1.225 5.606-2.04l.359-.3.424-.408.507-.552-.466 3.766-.093.06a12.622 12.622 0 01-4.577 1.842l-.629.1-.53.058-.418.027-.444.003c-2.918-.002-5.532-1.142-7.36-3.21-1.851-2.096-2.67-4.88-2.305-7.837.73-5.88 5.964-10.696 11.806-10.974l.732-.014zm18.174 9.018c1.724 0 3.344.713 4.443 1.956 1.101 1.248 1.59 2.88 1.377 4.596-.432 3.504-3.808 6.466-7.375 6.466-1.728 0-3.348-.715-4.45-1.96-1.096-1.242-1.583-2.864-1.377-4.563.44-3.52 3.818-6.495 7.382-6.495zm19.446.535l-1.486 12.02h-2.558l.16-1.292c-.936.93-2.462 1.755-4.173 1.755-1.318 0-2.48-.492-3.267-1.385-.804-.91-1.168-2.184-1.008-3.497l.9-7.274 2.597-.327-.914 7.402c-.101.785.084 1.466.525 1.968.49.552 1.27.845 2.25.845 1.526 0 3.3-1.155 3.51-2.873l.87-7.015 2.594-.327zm-63.587-.547c1.77 0 3.21.58 4.164 1.678 1.047 1.207 1.48 3.01 1.263 5.233l-.097.771h-9.914c.16 1.896 1.567 2.979 3.895 2.979 1.806 0 2.878-.434 3.868-.961l1.119-.623-.312 2.522-.106.06c-1.224.687-2.604 1.356-4.8 1.356-2.092 0-3.873-.708-5.006-1.992-.991-1.12-1.404-2.599-1.198-4.272.548-4.433 4.001-6.751 7.124-6.751zm-62.717 0c1.771 0 3.211.58 4.164 1.678 1.048 1.207 1.48 3.01 1.263 5.233l-.097.771h-9.914c.16 1.896 1.567 2.979 3.895 2.979 1.622 0 2.652-.35 3.563-.803l.594-.315.83-.466-.312 2.522-.105.06c-1.224.687-2.604 1.356-4.8 1.356-2.093 0-3.874-.708-5.007-1.992-.99-1.12-1.404-2.599-1.197-4.272.547-4.433 4-6.751 7.123-6.751zM231.476 12l-2.767 22.34h-2.556l.197-1.59c-1.104 1.191-2.882 2.021-4.471 2.021-1.781 0-3.24-.583-4.217-1.69-1.02-1.151-1.452-2.817-1.222-4.686.485-3.908 3.43-6.636 7.167-6.636 1.565 0 3.065.832 3.852 2.064l1.356-10.968 2.661-.855zm-42.07.002L186.64 34.34h-2.556l2.664-21.483 2.66-.854zm-56.632 1.268l-1.166 2.527h-9.586l-.85 6.867h6.627v.48h-.12l-.883 1.778v.24h-5.933l-1.138 9.163h-2.729l2.612-21.055h13.166zm2.715 9.038l-1.497 12.017h-2.559l1.455-11.722 2.601-.295zm-24.427-.537c1 0 1.93.427 2.616 1.204.84.95 1.224 2.29 1.053 3.677l-.955 7.673h-2.527l.922-7.445c.13-1.017-.027-1.81-.45-2.287-.326-.367-.815-.554-1.458-.554-1.954 0-3.178 1.346-3.332 2.613l-.955 7.673h-2.556l.922-7.445c.127-1.03-.024-1.826-.442-2.297-.319-.362-.801-.544-1.437-.544-1.522 0-3.3 1.166-3.516 2.901l-.912 7.385h-2.559l1.455-11.722 2.594-.295-.146 1.164c1.027-1.077 2.419-1.701 3.854-1.701 1.375 0 2.58.79 3.226 2.083.914-1.13 2.05-2.083 4.603-2.083zm29.487.532l-.206 1.73c1.082-.978 2.932-1.7 4.514-1.7h.269l-.271 2.282h-.214c-1.814 0-4.469.837-4.7 2.7l-.866 7.01h-2.558l1.45-11.693 2.582-.329zm55.47 1.865c-2.31 0-4.27 1.792-4.563 4.168-.144 1.145.15 2.196.824 2.957.64.725 1.586 1.126 2.656 1.126 2.292 0 4.241-1.78 4.532-4.14.146-1.169-.144-2.237-.821-3.003-.634-.715-1.567-1.108-2.628-1.108zm27.497-.029c-2.278 0-4.15 1.752-4.45 4.17-.149 1.187.137 2.255.8 3.006.611.692 1.526 1.076 2.57 1.076 2.294 0 4.173-1.743 4.468-4.143.152-1.21-.13-2.285-.79-3.033-.623-.704-1.52-1.076-2.598-1.076zm-134.356.045c-1.89 0-3.372 1.094-4.015 2.947h7.164a2.853 2.853 0 00-.71-1.956c-.574-.648-1.416-.991-2.439-.991zm62.715 0c-1.892 0-3.37 1.094-4.013 2.947h7.166a2.867 2.867 0 00-.713-1.956c-.573-.648-1.416-.991-2.44-.991zm-17.267-7.614c.919 0 1.706.748 1.754 1.668a1.587 1.587 0 01-1.603 1.692c-.917 0-1.704-.75-1.754-1.668a1.593 1.593 0 011.603-1.692z\" fill=\"#116\"></path><path d=\"M11.131 17.482L20.326.002.495 11.453zm30.621-6.028L21.912 0l9.127 17.5z\" fill=\"#F9AE7C\"></path><path d=\"M10.643 18.326L0 12.293v22.919z\" fill=\"#F9904A\"></path><path d=\"M11.856 18.2l9.264 28.536 9.193-28.519L21.119.59z\" fill=\"url(#a)\"></path><path d=\"M42.243 12.298l-10.716 6.047 10.716 16.872z\" fill=\"#F9904A\"></path><path d=\"M30.985 19.312l-9.234 28.645L41.82 36.371zm-19.799-.017L.423 36.37 20.49 47.957z\" fill=\"#FB6D33\"></path><path d=\"M25.746 16.503c-.324-1.216-1.298-2.21-1.298-2.21s.015 1.086-.324 1.784c-.345.71-1.034 1.197-1.034 1.197s.954-2.752.17-4.363c-.963-1.98-2.184-2.91-2.184-2.91s.398 2.056-.237 3.502c-.624 1.423-2.494 2.237-3.386 3.088-.659.629-1.132 1.868-1.336 2.474a.509.509 0 00-.023.133c.013-.349.144-2.14 1.463-3.157 1.232-.95.119-3.035.119-3.035s.205.95-.107 1.625c-.312.676-.975 1.053-1.277 1.766-.268.635-.212 2.522-.201 2.82v.023l.001.022v-.014a.54.54 0 00.193.4l4.446 4.2c.2.166.49.166.69.001l4.548-4.259a.535.535 0 00.193-.448c-.039-.616-.203-1.84-.416-2.639\" fill=\"#FFF\"></path></g></svg>\n</div>\n</a>\n<button class=\"btn btn-icon btn-soft\" id=\"close-sidebar\">\n<span class=\"material-icons size-20 menu-icon align-middle\">menu</span>\n</button>\n</div>\n<div class=\"d-flex align-items-center\">\n<ul class=\"list-unstyled mb-0\">\n</ul>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://memfiredb.com/\" target=\"_blank\" type=\"button\">官网</a>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://community.memfiredb.com/\" target=\"_blank\" type=\"button\">论坛</a>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://cloud.memfiredb.com/auth/login\" target=\"_blank\" type=\"button\">登录</a>\n<button aria-label=\"Toggle user interface mode\" class=\"btn btn-icon btn-default ms-2\" id=\"mode\" type=\"button\">\n<span class=\"toggle-dark\">\n<svg fill=\"currentColor\" height=\"30\" viewbox=\"0 0 48 48\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\n<title>Enable dark mode</title>\n<path d=\"M24 42q-7.5 0-12.75-5.25T6 24q0-7.5 5.25-12.75T24 6q.4 0 .85.025.45.025 1.15.075-1.8 1.6-2.8 3.95-1 2.35-1 4.95 0 4.5 3.15 7.65Q28.5 25.8 33 25.8q2.6 0 4.95-.925T41.9 22.3q.05.6.075.975Q42 23.65 42 24q0 7.5-5.25 12.75T24 42Zm0-3q5.45 0 9.5-3.375t5.05-7.925q-1.25.55-2.675.825Q34.45 28.8 33 28.8q-5.75 0-9.775-4.025T19.2 15q0-1.2.25-2.575.25-1.375.9-3.125-4.9 1.35-8.125 5.475Q9 18.9 9 24q0 6.25 4.375 10.625T24 39Zm-.2-14.85Z\"></path>\n</svg>\n</span>\n<span class=\"toggle-light\">\n<svg fill=\"currentColor\" height=\"30\" viewbox=\"0 0 48 48\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\n<title>Enable light mode</title>\n<path d=\"M24 31q2.9 0 4.95-2.05Q31 26.9 31 24q0-2.9-2.05-4.95Q26.9 17 24 17q-2.9 0-4.95 2.05Q17 21.1 17 24q0 2.9 2.05 4.95Q21.1 31 24 31Zm0 3q-4.15 0-7.075-2.925T14 24q0-4.15 2.925-7.075T24 14q4.15 0 7.075 2.925T34 24q0 4.15-2.925 7.075T24 34ZM3.5 25.5q-.65 0-1.075-.425Q2 24.65 2 24q0-.65.425-1.075Q2.85 22.5 3.5 22.5h5q.65 0 1.075.425Q10 23.35 10 24q0 .65-.425 1.075-.425.425-1.075.425Zm36 0q-.65 0-1.075-.425Q38 24.65 38 24q0-.65.425-1.075.425-.425 1.075-.425h5q.65 0 1.075.425Q46 23.35 46 24q0 .65-.425 1.075-.425.425-1.075.425ZM24 10q-.65 0-1.075-.425Q22.5 9.15 22.5 8.5v-5q0-.65.425-1.075Q23.35 2 24 2q.65 0 1.075.425.425.425.425 1.075v5q0 .65-.425 1.075Q24.65 10 24 10Zm0 36q-.65 0-1.075-.425-.425-.425-.425-1.075v-5q0-.65.425-1.075Q23.35 38 24 38q.65 0 1.075.425.425.425.425 1.075v5q0 .65-.425 1.075Q24.65 46 24 46ZM12 14.1l-2.85-2.8q-.45-.45-.425-1.075.025-.625.425-1.075.45-.45 1.075-.45t1.075.45L14.1 12q.4.45.4 1.05 0 .6-.4 1-.4.45-1.025.45-.625 0-1.075-.4Zm24.7 24.75L33.9 36q-.4-.45-.4-1.075t.45-1.025q.4-.45 1-.45t1.05.45l2.85 2.8q.45.45.425 1.075-.025.625-.425 1.075-.45.45-1.075.45t-1.075-.45ZM33.9 14.1q-.45-.45-.45-1.05 0-.6.45-1.05l2.8-2.85q.45-.45 1.075-.425.625.025 1.075.425.45.45.45 1.075t-.45 1.075L36 14.1q-.4.4-1.025.4-.625 0-1.075-.4ZM9.15 38.85q-.45-.45-.45-1.075t.45-1.075L12 33.9q.45-.45 1.05-.45.6 0 1.05.45.45.45.45 1.05 0 .6-.45 1.05l-2.8 2.85q-.45.45-1.075.425-.625-.025-1.075-.425ZM24 24Z\"></path>\n</svg>\n</span>\n</button>\n</div>\n</div>\n</div>\n<div class=\"container-fluid\">\n<div class=\"layout-spacing\">\n<div class=\"d-md-flex justify-content-between align-items-center\"></div>\n<div class=\"row flex-xl-nowrap\">\n<div class=\"docs-toc col-xl-3 d-xl-block\"><toc>\n<div class=\"fw-bold text-uppercase mb-2\">本页</div>\n\n</toc></div>\n<div class=\"docs-toc-mobile d-print-none d-xl-none\">\n<button aria-expanded=\"false\" class=\"btn-secondary dropdown-toggle\" data-bs-offset=\"0,0\" data-bs-toggle=\"dropdown\" id=\"toc-dropdown-btn\" type=\"button\">安装Next.js助手库</button>\n</div>\n<div class=\"docs-content col-12 col-xl-9 mt-0\">\n<div class=\"mb-0 d-flex\">\n<h1 class=\"content-title mb-0\">\n                                                    使用Next.js进行Supabase认证\n                                                    \n                                                </h1>\n</div>\n<div class=\"main-content\" data-bs-root-margin=\"0px 0px -65%\" data-bs-spy=\"scroll\" data-bs-target=\"#toc-mobile\" id=\"content\">\n<div data-prismjs-copy=\"\" data-prismjs-copy-error=\"\" data-prismjs-copy-success=\"\">\n<p>该子模块为在Next中实现用户身份验证提供了方便的帮助Next.js应用程序。</p>\n<h2 id=\"安装nextjs助手库\">安装Next.js助手库 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%ae%89%e8%a3%85nextjs%e5%8a%a9%e6%89%8b%e5%ba%93\"><i class=\"material-icons align-middle\">link</i></a></h2>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"dbecfa\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-sh\" id=\"69d233f\" tabindex=\"0\"><code class=\"language-sh\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @supabase/auth-helpers-nextjs</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>此库支持以下工具版本：</p>\n<ul>\n<li>Node.js: <code>^10.13.0 || &gt;=12.0.0</code></li>\n<li>Next.js: <code>&gt;=10</code></li>\n<li>注：Next.js13除了新的<code>app</code>目录方法外，其他都受支持。我们正在努力增加对此的支持，您可以关注<a href=\"https://github.com/supabase/auth-helpers/issues/341\" rel=\"external\" target=\"_blank\">此处<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>.</li>\n</ul>\n<p>此外，为可在所有基于React的框架中使用的组件和挂钩安装<strong>React Auth Helpers</strong>。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-sh\" id=\"d90eb67\" tabindex=\"0\"><code class=\"language-sh\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @supabase/auth-helpers-react</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"fdeacb\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-sh\" id=\"37fa4e5\" tabindex=\"0\"><code class=\"language-sh\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @supabase/auth-helpers-nextjs</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>此库支持以下工具版本：</p>\n<ul>\n<li>Node.js: <code>^10.13.0 || &gt;=12.0.0</code></li>\n<li>Next.js: <code>&gt;=10</code></li>\n<li>注：Next.js13除了新的<code>app</code>目录方法外，其他都受支持。我们正在努力增加对此的支持，您可以关注<a href=\"https://github.com/supabase/auth-helpers/issues/341\" rel=\"external\" target=\"_blank\">此处<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>.</li>\n</ul>\n<p>此外，为可在所有基于React的框架中使用的组件和挂钩安装<strong>React Auth Helpers</strong>。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-sh\" id=\"e1d4704\" tabindex=\"0\"><code class=\"language-sh\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> @supabase/auth-helpers-react</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h2 id=\"设置环境变量\">设置环境变量 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e8%ae%be%e7%bd%ae%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f\"><i class=\"material-icons align-middle\">link</i></a></h2><p>在项目的<code>应用设置</code>-&gt;<code>API</code>中检索项目URL和匿名密钥以设置以下环境变量。对于本地开发，可以在<code>.env.local</code>文件。参见<a href=\"https://github.com/supabase/auth-helpers/blob/main/examples/nextjs/.env.local.example\" rel=\"external\" target=\"_blank\">示例<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"0fe451f\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token assign-left variable\">NEXT_PUBLIC_SUPABASE_URL</span><span class=\"token operator\">=</span>YOUR_SUPABASE_URL\n<span class=\"token assign-left variable\">NEXT_PUBLIC_SUPABASE_ANON_KEY</span><span class=\"token operator\">=</span>YOUR_SUPABASE_ANON_KEY</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"基本设置\">基本设置 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%9f%ba%e6%9c%ac%e8%ae%be%e7%bd%ae\"><i class=\"material-icons align-middle\">link</i></a></h2>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"acfbde\" role=\"tabpanel\">\n<p>包装<code>pages/_app.js</code>组件与<code>SessionContextProvider</code>组件：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"100b739\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createBrowserSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SessionContextProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-react'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> Component<span class=\"token punctuation\">,</span> pageProps <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> router <span class=\"token operator\">=</span> <span class=\"token function\">useRouter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Create a new supabase browser client on every first render.</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>supabaseClient<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">createBrowserSupabaseClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SessionContextProvider</span></span>\n      <span class=\"token attr-name\">supabaseClient</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>supabaseClient<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">initialSession</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>pageProps<span class=\"token punctuation\">.</span>initialSession<span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Component</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>pageProps<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">SessionContextProvider</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"cdbaef\" role=\"tabpanel\">\n<p>包装<code>pages/_app.js</code>组件与<code>SessionContextProvider</code>组件：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"8e23729\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createBrowserSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> SessionContextProvider<span class=\"token punctuation\">,</span> Session <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-react'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  Component<span class=\"token punctuation\">,</span>\n  pageProps<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> AppProps<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">{</span>\n  initialSession<span class=\"token operator\">:</span> Session\n<span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create a new supabase browser client on every first render.</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>supabaseClient<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">createBrowserSupabaseClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">SessionContextProvider</span></span>\n      <span class=\"token attr-name\">supabaseClient</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>supabaseClient<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">initialSession</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>pageProps<span class=\"token punctuation\">.</span>initialSession<span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Component</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>pageProps<span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">SessionContextProvider</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>现在，您可以通过检查 <code>useUser()</code>钩子返回的<code>user</code>对象是否已定义来确定用户是否已通过身份验证。</p>\n<h2 id=\"使用rls获取客户端数据\">使用RLS获取客户端数据 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%bd%bf%e7%94%a8rls%e8%8e%b7%e5%8f%96%e5%ae%a2%e6%88%b7%e7%ab%af%e6%95%b0%e6%8d%ae\"><i class=\"material-icons align-middle\">link</i></a></h2><p>为了使<a data-bs-delay='{\"hide\":300,\"show\":550}' data-bs-html=\"true\" data-bs-title=\"&lt;a href='/docs/app/development_guide/auth/auth-deep-dive/auth-row-level-security/'&gt;&lt;p&gt;深层探索&lt;/p&gt;&lt;strong&gt;第二部分:行级安全&lt;/strong&gt;&lt;br&gt;Supabase Auth Deep Dive第二部分 - 行级安全&lt;/a&gt;\" data-bs-toggle=\"tooltip\" href=\"/docs/app/development_guide/auth/auth-deep-dive/auth-row-level-security/\">行级别安全</a>在客户端获取数据时正常工作，您需要确保使用<code>supabaseClient</code>钩子中的 <code>useSupabaseClient</code>，并且仅在 <code>useUser()</code>钩子中定义了客户端用户后才运行查询：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"5f1eadf\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Auth<span class=\"token punctuation\">,</span> ThemeSupa <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-ui-react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useUser<span class=\"token punctuation\">,</span> useSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">LoginPage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> supabaseClient <span class=\"token operator\">=</span> <span class=\"token function\">useSupabaseClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> <span class=\"token function\">useUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">,</span> setData<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabaseClient<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// Only run query once user is logged in.</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token function\">loadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>user<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>user<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Auth</span></span>\n        <span class=\"token attr-name\">redirectTo</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>http://localhost:3000/<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">appearance</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> ThemeSupa <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">supabaseClient</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>supabaseClient<span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">providers</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">[</span><span class=\"token string\">'google'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'github'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token attr-name\">socialLayout</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>horizontal<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> supabaseClient<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">signOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Sign out</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">user:</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">client-side data fetching with RLS</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> LoginPage</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"服务器端渲染-ssr\">服务器端渲染 (SSR) <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%ab%af%e6%b8%b2%e6%9f%93-ssr\"><i class=\"material-icons align-middle\">link</i></a></h2><p>创建服务器超级客户端以检索登录用户的会话：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"719718e\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createServerSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Profile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Hello </span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getServerSideProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create authenticated Supabase Client</span>\n  <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createServerSupabaseClient</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Check if we have a session</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>session<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">destination</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">permanent</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">initialSession</span><span class=\"token operator\">:</span> session<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> session<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"使用rls获取服务器端数据\">使用RLS获取服务器端数据 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%bd%bf%e7%94%a8rls%e8%8e%b7%e5%8f%96%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%ab%af%e6%95%b0%e6%8d%ae\"><i class=\"material-icons align-middle\">link</i></a></h2><p>您可以使用服务器超级数据库客户端运行<a data-bs-delay='{\"hide\":300,\"show\":550}' data-bs-html=\"true\" data-bs-title=\"&lt;a href='/docs/app/development_guide/auth/auth-deep-dive/auth-row-level-security/'&gt;&lt;p&gt;深层探索&lt;/p&gt;&lt;strong&gt;第二部分:行级安全&lt;/strong&gt;&lt;br&gt;Supabase Auth Deep Dive第二部分 - 行级安全&lt;/a&gt;\" data-bs-toggle=\"tooltip\" href=\"/docs/app/development_guide/auth/auth-deep-dive/auth-row-level-security/\">行级别安全性</a>服务器端验证查询：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"fbdeca\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"06e6f6a\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createServerSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ProtectedPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> data <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Protected content for </span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getServerSideProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create authenticated Supabase Client</span>\n  <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createServerSupabaseClient</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Check if we have a session</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>session<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">destination</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">permanent</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Run queries with RLS on the server</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">initialSession</span><span class=\"token operator\">:</span> session<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">user</span><span class=\"token operator\">:</span> session<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> data <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"cdaefb\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"c44b500\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User<span class=\"token punctuation\">,</span> createServerSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GetServerSidePropsContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ProtectedPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> data <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> user<span class=\"token operator\">:</span> User<span class=\"token punctuation\">;</span> data<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Protected content for </span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getServerSideProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token operator\">:</span> GetServerSidePropsContext<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create authenticated Supabase Client</span>\n  <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createServerSupabaseClient</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Check if we have a session</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>session<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      redirect<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        destination<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n        permanent<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Run queries with RLS on the server</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'users'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      initialSession<span class=\"token operator\">:</span> session<span class=\"token punctuation\">,</span>\n      user<span class=\"token operator\">:</span> session<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span>\n      data<span class=\"token operator\">:</span> data <span class=\"token operator\">??</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h2 id=\"oauth-provider-token\">使用 <code>provider token</code>将服务器端数据提取到OAuth API <a aria-hidden=\"true\" class=\"anchor\" href=\"#oauth-provider-token\"><i class=\"material-icons align-middle\">link</i></a></h2><p>当使用第三方身份验证提供程序时，会话将使用附加的 <code>provider_token</code>字段启动，该字段保存在身份验证cookie中，可以在会话对象中访问。<code>provider_token</code>可用于代表登录用户向OAuth提供程序的API端点发出API请求。</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"aebcfd\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"51d5d8b\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createServerSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ProtectedPage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> allRepos <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Protected content for </span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Data fetched with provider token:</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>allRepos<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">user:</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getServerSideProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ctx</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create authenticated Supabase Client</span>\n  <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createServerSupabaseClient</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Check if we have a session</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>session<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">redirect</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">destination</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">permanent</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Retrieve provider_token &amp; logged in user's third-party id from metadata</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> provider_token<span class=\"token punctuation\">,</span> user <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> session\n  <span class=\"token keyword\">const</span> userId <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>user_metadata<span class=\"token punctuation\">.</span>user_name\n\n  <span class=\"token keyword\">const</span> allRepos <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://api.github.com/search/repositories?q=user:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>userId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">method</span><span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">Authorization</span><span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">token </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>provider_token<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">props</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> allRepos <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"efabdc\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"e858404\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> User<span class=\"token punctuation\">,</span> createServerSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GetServerSidePropsContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ProtectedPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> allRepos <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> user<span class=\"token operator\">:</span> User<span class=\"token punctuation\">;</span> allRepos<span class=\"token operator\">:</span> <span class=\"token builtin\">any</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Protected content for </span><span class=\"token punctuation\">{</span>user<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Data fetched with provider token:</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>allRepos<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">user:</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getServerSideProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token operator\">:</span> GetServerSidePropsContext<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create authenticated Supabase Client</span>\n  <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createServerSupabaseClient</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Check if we have a session</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>session<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      redirect<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        destination<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n        permanent<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Retrieve provider_token &amp; logged in user's third-party id from metadata</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> provider_token<span class=\"token punctuation\">,</span> user <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> session\n  <span class=\"token keyword\">const</span> userId <span class=\"token operator\">=</span> user<span class=\"token punctuation\">.</span>user_metadata<span class=\"token punctuation\">.</span>user_name\n\n  <span class=\"token keyword\">const</span> allRepos <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://api.github.com/search/repositories?q=user:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>userId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      method<span class=\"token operator\">:</span> <span class=\"token string\">'GET'</span><span class=\"token punctuation\">,</span>\n      headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        Authorization<span class=\"token operator\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">token </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>provider_token<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span> props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">,</span> allRepos <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h2 id=\"保护api路由\">保护API路由 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%bf%9d%e6%8a%a4api%e8%b7%af%e7%94%b1\"><i class=\"material-icons align-middle\">link</i></a></h2><p>创建服务器超级客户端以检索登录用户的会话：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"cfaedb\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"ec3bb7f\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createServerSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">ProtectedRoute</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create authenticated Supabase Client</span>\n  <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createServerSupabaseClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> req<span class=\"token punctuation\">,</span> res <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Check if we have a session</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">data</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>session<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> <span class=\"token string\">'not_authenticated'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">description</span><span class=\"token operator\">:</span> <span class=\"token string\">'The user does not have an active session or is not authenticated'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Run queries with RLS on the server</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ProtectedRoute</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"defcba\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"ff084a9\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NextApiHandler <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createServerSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n\n<span class=\"token keyword\">const</span> ProtectedRoute<span class=\"token operator\">:</span> <span class=\"token function-variable function\">NextApiHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create authenticated Supabase Client</span>\n  <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createServerSupabaseClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> req<span class=\"token punctuation\">,</span> res <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Check if we have a session</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>session<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      error<span class=\"token operator\">:</span> <span class=\"token string\">'not_authenticated'</span><span class=\"token punctuation\">,</span>\n      description<span class=\"token operator\">:</span> <span class=\"token string\">'The user does not have an active session or is not authenticated'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Run queries with RLS on the server</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ProtectedRoute</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h2 id=\"使用nextjs中间件进行身份验证\">使用Next.js中间件进行身份验证。 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%bd%bf%e7%94%a8nextjs%e4%b8%ad%e9%97%b4%e4%bb%b6%e8%bf%9b%e8%a1%8c%e8%ba%ab%e4%bb%bd%e9%aa%8c%e8%af%81\"><i class=\"material-icons align-middle\">link</i></a></h2><p>作为保护单个页面的替代方案，您可以使用<a href=\"https://nextjs.org/docs/middleware\" rel=\"external\" target=\"_blank\">Next.js中间件<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>以保护整个目录或与配置对象匹配的目录。在以下示例中，所有对<code>/middleware protected/*</code>的请求都将检查用户是否已登录，如果成功，请求将被转发到目标路由，否则用户将被重定向：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-ts\" id=\"2fc0602\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createMiddlewareSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NextResponse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/server'</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> NextRequest <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/server'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">middleware</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> NextRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// We need to create a response and hand it to the supabase client to be able to modify the response headers.</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> NextResponse<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Create authenticated Supabase Client.</span>\n  <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createMiddlewareSupabaseClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> req<span class=\"token punctuation\">,</span> res <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Check if we have a session</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Check auth condition</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>session<span class=\"token operator\">?.</span>user<span class=\"token punctuation\">.</span>email<span class=\"token operator\">?.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@gmail.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Authentication successful, forward request to protected route.</span>\n    <span class=\"token keyword\">return</span> res\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Auth condition not met, redirect to home page.</span>\n  <span class=\"token keyword\">const</span> redirectUrl <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>nextUrl<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  redirectUrl<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">=</span> <span class=\"token string\">'/'</span>\n  redirectUrl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">redirectedFrom</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>nextUrl<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> NextResponse<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span>redirectUrl<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  matcher<span class=\"token operator\">:</span> <span class=\"token string\">'/middleware-protected'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"迁移指南\">迁移指南 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e8%bf%81%e7%a7%bb%e6%8c%87%e5%8d%97\"><i class=\"material-icons align-middle\">link</i></a></h2><h3 id=\"迁移到v05x\">迁移到v0.5.X <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e8%bf%81%e7%a7%bb%e5%88%b0v05x\"><i class=\"material-icons align-middle\">link</i></a></h3><p>使这些助手更灵活，更易于维护，更易于为新版本的Next.js升级，我们将其分解为最有用的部分，即管理cookie，并在任何环境（客户端、服务器、中间件/边缘）中为您提供经过认证的超级js客户端。</p>\n<p>因此，我们将<code>withApiAuth</code>、<code>withPageAuth</code> 和 <code>withMiddlewareAuth</code>高阶函数标记为已弃用，它们将在下一个<strong>次要</strong>版本（v0.6.X）中删除。</p>\n<p>请按照以下步骤更新API路由、页面和中间件处理程序。谢谢</p>\n<h4 id=\"withapiauth已弃用\"><code>withApiAuth</code>已弃用！ <a aria-hidden=\"true\" class=\"anchor\" href=\"#withapiauth%e5%b7%b2%e5%bc%83%e7%94%a8\"><i class=\"material-icons align-middle\">link</i></a></h4><p>在<code>NextApiHandler</code>中使用<code>createServerSubaseClient</code>：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"feadbc\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"39133c9\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withApiAuth <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withApiAuth</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">ProtectedRoute</span><span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">,</span> supabase<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Run queries with RLS on the server</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"dbecaf\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"ff084a9\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NextApiHandler <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createServerSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n\n<span class=\"token keyword\">const</span> ProtectedRoute<span class=\"token operator\">:</span> <span class=\"token function-variable function\">NextApiHandler</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create authenticated Supabase Client</span>\n  <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createServerSupabaseClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> req<span class=\"token punctuation\">,</span> res <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Check if we have a session</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>session<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">401</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      error<span class=\"token operator\">:</span> <span class=\"token string\">'not_authenticated'</span><span class=\"token punctuation\">,</span>\n      description<span class=\"token operator\">:</span> <span class=\"token string\">'The user does not have an active session or is not authenticated'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Run queries with RLS on the server</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> ProtectedRoute</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h4 id=\"withpageauth已弃用\"><code>withPageAuth</code>已弃用！ <a aria-hidden=\"true\" class=\"anchor\" href=\"#withpageauth%e5%b7%b2%e5%bc%83%e7%94%a8\"><i class=\"material-icons align-middle\">link</i></a></h4><p>在<code>getServerSideProps</code>中使用<code>createServerSubaseClient</code>：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"dfeacb\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"980803d\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withPageAuth<span class=\"token punctuation\">,</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Profile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> user<span class=\"token operator\">:</span> User <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> getServerSideProps <span class=\"token operator\">=</span> <span class=\"token function\">withPageAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> redirectTo<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"eacbdf\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"db304fe\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createServerSupabaseClient<span class=\"token punctuation\">,</span> User <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> GetServerSidePropsContext <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">Profile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> user<span class=\"token operator\">:</span> User <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>pre</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">{</span><span class=\"token constant\">JSON</span><span class=\"token punctuation\">.</span><span class=\"token function\">stringify</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>pre</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getServerSideProps</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>ctx<span class=\"token operator\">:</span> GetServerSidePropsContext<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// Create authenticated Supabase Client</span>\n  <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createServerSupabaseClient</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Check if we have a session</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>session<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      redirect<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        destination<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n        permanent<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    props<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      initialSession<span class=\"token operator\">:</span> session<span class=\"token punctuation\">,</span>\n      user<span class=\"token operator\">:</span> session<span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h4 id=\"withmiddlewareauth已弃用\"><code>withMiddlewareAuth</code>已弃用！ <a aria-hidden=\"true\" class=\"anchor\" href=\"#withmiddlewareauth%e5%b7%b2%e5%bc%83%e7%94%a8\"><i class=\"material-icons align-middle\">link</i></a></h4>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"ecdbfa\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"ca0f318\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withMiddlewareAuth <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> middleware <span class=\"token operator\">=</span> <span class=\"token function\">withMiddlewareAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  redirectTo<span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n  authGuard<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">isPermitted</span><span class=\"token operator\">:</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> user<span class=\"token punctuation\">.</span>email<span class=\"token operator\">?.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@gmail.com'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">??</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    redirectTo<span class=\"token operator\">:</span> <span class=\"token string\">'/insufficient-permissions'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  matcher<span class=\"token operator\">:</span> <span class=\"token string\">'/middleware-protected'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"debcfa\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"aef4f9f\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createMiddlewareSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-nextjs'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> NextResponse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/server'</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> NextRequest <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next/server'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">middleware</span><span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> NextRequest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// We need to create a response and hand it to the supabase client to be able to modify the response headers.</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> NextResponse<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Create authenticated Supabase Client.</span>\n  <span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createMiddlewareSupabaseClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> req<span class=\"token punctuation\">,</span> res <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// Check if we have a session</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> session <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getSession</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// Check auth condition</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>session<span class=\"token operator\">?.</span>user<span class=\"token punctuation\">.</span>email<span class=\"token operator\">?.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@gmail.com'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Authentication successful, forward request to protected route.</span>\n    <span class=\"token keyword\">return</span> res\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// Auth condition not met, redirect to home page.</span>\n  <span class=\"token keyword\">const</span> redirectUrl <span class=\"token operator\">=</span> req<span class=\"token punctuation\">.</span>nextUrl<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  redirectUrl<span class=\"token punctuation\">.</span>pathname <span class=\"token operator\">=</span> <span class=\"token string\">'/'</span>\n  redirectUrl<span class=\"token punctuation\">.</span>searchParams<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">redirectedFrom</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> req<span class=\"token punctuation\">.</span>nextUrl<span class=\"token punctuation\">.</span>pathname<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> NextResponse<span class=\"token punctuation\">.</span><span class=\"token function\">redirect</span><span class=\"token punctuation\">(</span>redirectUrl<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  matcher<span class=\"token operator\">:</span> <span class=\"token string\">'/middleware-protected'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h3 id=\"迁移到v04x和supabase-js-v2\">迁移到v0.4.X和supabase js v2 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e8%bf%81%e7%a7%bb%e5%88%b0v04x%e5%92%8csupabase-js-v2\"><i class=\"material-icons align-middle\">link</i></a></h3><p>随着<code>supabase-js</code> v2的更新，不再需要 <code>auth</code>API路由，因此您可以继续删除 <code>/pages/api/</code>目录下的 <code>auth</code>目录。请参阅<a href=\"/docs/app/sdkdocs/javascript/upgrade-guide\">v2迁移指南</a>以了解supabase js中的全部更改。</p>\n<p><code>/api/auth/logout</code> api路由已删除，请改用 <code>signout</code> 方法：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"3cbb540\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n  <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">await</span> supabaseClient<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">signOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    router<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n<span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n  Logout\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>已删除<code>supabaseClient</code> 和 <code>supabaseServerClient</code>，改用<code>createBrowserSupbaseClient</code>或<code>createServerSubaseClient</code>方法。这允许您向客户端提供CLI生成的类型：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"476c23e\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token comment\">// client-side</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> Database <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'types_db'</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>supabaseClient<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token generic-function\"><span class=\"token function\">createBrowserSupabaseClient</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Database<span class=\"token operator\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// server-side API route</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> NextApiRequest<span class=\"token punctuation\">,</span> NextApiResponse <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'next'</span>\n<span class=\"token keyword\">import</span> <span class=\"token keyword\">type</span> <span class=\"token punctuation\">{</span> Database <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'types_db'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>req<span class=\"token operator\">:</span> NextApiRequest<span class=\"token punctuation\">,</span> res<span class=\"token operator\">:</span> NextApiResponse<span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> supabaseServerClient <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">createServerSupabaseClient</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Database<span class=\"token operator\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    req<span class=\"token punctuation\">,</span>\n    res<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n    data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> user <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabaseServerClient<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> user<span class=\"token operator\">?.</span>name <span class=\"token operator\">??</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<ul>\n<li><code>UserProvider</code> 已被 <code>SessionContextProvider</code>替换。确保包装您的 <code>pages/_app.js</code>与<code>SessionContextProvider</code>兼容。然后，在整个应用程序中，您可以使用 <code>useSessionContext</code>钩子获取 <code>session</code>，使用<code>useSubaseClient</code>钩子获取经过身份验证的<code>supbaseClient</code>。</li>\n<li><code>useUser</code>钩子现在返回<code>user</code>对象或<code>null</code>。</li>\n<li>TypeScript的用法：您可以将<a href=\"/docs/app/sdkdocs/javascript/typescript-support#generating-types\">使用Suabase CLI</a>生成的类型传递给Supabase客户端，以获得增强的类型安全性和自动完成:</li>\n</ul>\n<p>创建新的超级数据库客户端对象：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"1d318e7\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Database <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../database.types'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>supabaseClient<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token generic-function\"><span class=\"token function\">createBrowserSupabaseClient</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Database<span class=\"token operator\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>从SessionContext中检索超级客户端对象：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-tsx\" id=\"ca7ad3e\" tabindex=\"0\"><code class=\"language-tsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useSupabaseClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/auth-helpers-react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Database <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'../database.types'</span>\n\n<span class=\"token keyword\">const</span> supabaseClient <span class=\"token operator\">=</span> <span class=\"token generic-function\"><span class=\"token function\">useSupabaseClient</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span>Database<span class=\"token operator\">&gt;</span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<div><hr class=\"doc-hr\"/>\n<div class=\"d-print-none\" id=\"doc-nav\">\n<div class=\"row flex-xl-nowrap\">\n<div class=\"col-sm-6 pt-2 doc-next\">\n<a href=\"/docs/app/development_guide/auth/auth-helpers/auth-ui/\">\n<div class=\"card h-100 my-1\">\n<div class=\"card-body py-2\">\n<p class=\"card-title fs-5 fw-semibold lh-base mb-0\"><i class=\"material-icons align-middle\">navigate_before</i> 身份验证UI</p>\n</div>\n</div>\n</a>\n</div>\n<div class=\"col-sm-6 pt-2 doc-prev\">\n<a class=\"ms-auto\" href=\"/docs/app/development_guide/auth/auth-helpers/sveltekit/\">\n<div class=\"card h-100 my-1 text-end\">\n<div class=\"card-body py-2\">\n<p class=\"card-title fs-5 fw-semibold lh-base mb-0\">使用SveltKit进行Supabase认证 <i class=\"material-icons align-middle\">navigate_next</i></p>\n</div>\n</div>\n</a>\n</div>\n</div>\n</div></div>\n</div>\n</div>\n</div>\n</div>\n\n</main>",
  "markdown": "[MemFireDB备份 6](/)\n\nmenu\n\n[官网](https://memfiredb.com/)\n[论坛](https://community.memfiredb.com/)\n[登录](https://cloud.memfiredb.com/auth/login)\n\nEnable dark mode\n\nEnable light mode\n\n本页\n\n安装Next.js助手库\n\n# 使用Next.js进行Supabase认证\n\n该子模块为在Next中实现用户身份验证提供了方便的帮助Next.js应用程序。\n\n## 安装Next.js助手库 [*link*](#%e5%ae%89%e8%a3%85nextjs%e5%8a%a9%e6%89%8b%e5%ba%93)\n\n```\nnpm install @supabase/auth-helpers-nextjs\n```\n\n此库支持以下工具版本：\n\n* Node.js: `^10.13.0 || >=12.0.0`\n* Next.js: `>=10`\n* 注：Next.js13除了新的`app`目录方法外，其他都受支持。我们正在努力增加对此的支持，您可以关注[此处](https://github.com/supabase/auth-helpers/issues/341).\n\n此外，为可在所有基于React的框架中使用的组件和挂钩安装**React Auth Helpers**。\n\n```\nnpm install @supabase/auth-helpers-react\n```\n\n```\nyarn add @supabase/auth-helpers-nextjs\n```\n\n此库支持以下工具版本：\n\n* Node.js: `^10.13.0 || >=12.0.0`\n* Next.js: `>=10`\n* 注：Next.js13除了新的`app`目录方法外，其他都受支持。我们正在努力增加对此的支持，您可以关注[此处](https://github.com/supabase/auth-helpers/issues/341).\n\n此外，为可在所有基于React的框架中使用的组件和挂钩安装**React Auth Helpers**。\n\n```\nyarn add @supabase/auth-helpers-react\n```\n\n## 设置环境变量 [*link*](#%e8%ae%be%e7%bd%ae%e7%8e%af%e5%a2%83%e5%8f%98%e9%87%8f)\n\n在项目的`应用设置`->`API`中检索项目URL和匿名密钥以设置以下环境变量。对于本地开发，可以在`.env.local`文件。参见[示例](https://github.com/supabase/auth-helpers/blob/main/examples/nextjs/.env.local.example)。\n\n```\nNEXT_PUBLIC_SUPABASE_URL=YOUR_SUPABASE_URL\nNEXT_PUBLIC_SUPABASE_ANON_KEY=YOUR_SUPABASE_ANON_KEY\n```\n\n## 基本设置 [*link*](#%e5%9f%ba%e6%9c%ac%e8%ae%be%e7%bd%ae)\n\n包装`pages/_app.js`组件与`SessionContextProvider`组件：\n\n```\nimport { createBrowserSupabaseClient } from '@supabase/auth-helpers-nextjs'\nimport { SessionContextProvider } from '@supabase/auth-helpers-react'\n\nfunction MyApp({ Component, pageProps }) {\n  const router = useRouter()\n  // Create a new supabase browser client on every first render.\n  const [supabaseClient] = useState(() => createBrowserSupabaseClient())\n\n  return (\n    <SessionContextProvider\n      supabaseClient={supabaseClient}\n      initialSession={pageProps.initialSession}\n    >\n      <Component {...pageProps} />\n    </SessionContextProvider>\n  )\n}\n```\n\n包装`pages/_app.js`组件与`SessionContextProvider`组件：\n\n```\nimport { createBrowserSupabaseClient } from '@supabase/auth-helpers-nextjs'\nimport { SessionContextProvider, Session } from '@supabase/auth-helpers-react'\n\nfunction MyApp({\n  Component,\n  pageProps,\n}: AppProps<{\n  initialSession: Session\n}>) {\n  // Create a new supabase browser client on every first render.\n  const [supabaseClient] = useState(() => createBrowserSupabaseClient())\n\n  return (\n    <SessionContextProvider\n      supabaseClient={supabaseClient}\n      initialSession={pageProps.initialSession}\n    >\n      <Component {...pageProps} />\n    </SessionContextProvider>\n  )\n}\n```\n\n现在，您可以通过检查 `useUser()`钩子返回的`user`对象是否已定义来确定用户是否已通过身份验证。\n\n## 使用RLS获取客户端数据 [*link*](#%e4%bd%bf%e7%94%a8rls%e8%8e%b7%e5%8f%96%e5%ae%a2%e6%88%b7%e7%ab%af%e6%95%b0%e6%8d%ae)\n\n为了使[行级别安全](/docs/app/development_guide/auth/auth-deep-dive/auth-row-level-security/)在客户端获取数据时正常工作，您需要确保使用`supabaseClient`钩子中的 `useSupabaseClient`，并且仅在 `useUser()`钩子中定义了客户端用户后才运行查询：\n\n```\nimport { Auth, ThemeSupa } from '@supabase/auth-ui-react'\nimport { useUser, useSupabaseClient } from '@supabase/auth-helpers-react'\nimport { useEffect, useState } from 'react'\n\nconst LoginPage = () => {\n  const supabaseClient = useSupabaseClient()\n  const user = useUser()\n  const [data, setData] = useState()\n\n  useEffect(() => {\n    async function loadData() {\n      const { data } = await supabaseClient.from('test').select('*')\n      setData(data)\n    }\n    // Only run query once user is logged in.\n    if (user) loadData()\n  }, [user])\n\n  if (!user)\n    return (\n      <Auth\n        redirectTo=\"http://localhost:3000/\"\n        appearance={{ theme: ThemeSupa }}\n        supabaseClient={supabaseClient}\n        providers={['google', 'github']}\n        socialLayout=\"horizontal\"\n      />\n    )\n\n  return (\n    <>\n      <button onClick={() => supabaseClient.auth.signOut()}>Sign out</button>\n      <p>user:</p>\n      <pre>{JSON.stringify(user, null, 2)}</pre>\n      <p>client-side data fetching with RLS</p>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </>\n  )\n}\n\nexport default LoginPage\n```\n\n## 服务器端渲染 (SSR) [*link*](#%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%ab%af%e6%b8%b2%e6%9f%93-ssr)\n\n创建服务器超级客户端以检索登录用户的会话：\n\n```\nimport { createServerSupabaseClient } from '@supabase/auth-helpers-nextjs'\n\nexport default function Profile({ user }) {\n  return <div>Hello {user.name}</div>\n}\n\nexport const getServerSideProps = async (ctx) => {\n  // Create authenticated Supabase Client\n  const supabase = createServerSupabaseClient(ctx)\n  // Check if we have a session\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  if (!session)\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false,\n      },\n    }\n\n  return {\n    props: {\n      initialSession: session,\n      user: session.user,\n    },\n  }\n}\n```\n\n## 使用RLS获取服务器端数据 [*link*](#%e4%bd%bf%e7%94%a8rls%e8%8e%b7%e5%8f%96%e6%9c%8d%e5%8a%a1%e5%99%a8%e7%ab%af%e6%95%b0%e6%8d%ae)\n\n您可以使用服务器超级数据库客户端运行[行级别安全性](/docs/app/development_guide/auth/auth-deep-dive/auth-row-level-security/)服务器端验证查询：\n\n```\nimport { createServerSupabaseClient } from '@supabase/auth-helpers-nextjs'\n\nexport default function ProtectedPage({ user, data }) {\n  return (\n    <>\n      <div>Protected content for {user.email}</div>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n      <pre>{JSON.stringify(user, null, 2)}</pre>\n    </>\n  )\n}\n\nexport const getServerSideProps = async (ctx) => {\n  // Create authenticated Supabase Client\n  const supabase = createServerSupabaseClient(ctx)\n  // Check if we have a session\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  if (!session)\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false,\n      },\n    }\n\n  // Run queries with RLS on the server\n  const { data } = await supabase.from('users').select('*')\n\n  return {\n    props: {\n      initialSession: session,\n      user: session.user,\n      data: data ?? [],\n    },\n  }\n}\n```\n\n```\nimport { User, createServerSupabaseClient } from '@supabase/auth-helpers-nextjs'\nimport { GetServerSidePropsContext } from 'next'\n\nexport default function ProtectedPage({ user, data }: { user: User; data: any }) {\n  return (\n    <>\n      <div>Protected content for {user.email}</div>\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n      <pre>{JSON.stringify(user, null, 2)}</pre>\n    </>\n  )\n}\n\nexport const getServerSideProps = async (ctx: GetServerSidePropsContext) => {\n  // Create authenticated Supabase Client\n  const supabase = createServerSupabaseClient(ctx)\n  // Check if we have a session\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  if (!session)\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false,\n      },\n    }\n\n  // Run queries with RLS on the server\n  const { data } = await supabase.from('users').select('*')\n\n  return {\n    props: {\n      initialSession: session,\n      user: session.user,\n      data: data ?? [],\n    },\n  }\n}\n```\n\n## 使用 `provider token`将服务器端数据提取到OAuth API [*link*](#oauth-provider-token)\n\n当使用第三方身份验证提供程序时，会话将使用附加的 `provider_token`字段启动，该字段保存在身份验证cookie中，可以在会话对象中访问。`provider_token`可用于代表登录用户向OAuth提供程序的API端点发出API请求。\n\n```\nimport { createServerSupabaseClient } from '@supabase/auth-helpers-nextjs'\n\nexport default function ProtectedPage({ user, allRepos }) {\n  return (\n    <>\n      <div>Protected content for {user.email}</div>\n      <p>Data fetched with provider token:</p>\n      <pre>{JSON.stringify(allRepos, null, 2)}</pre>\n      <p>user:</p>\n      <pre>{JSON.stringify(user, null, 2)}</pre>\n    </>\n  )\n}\n\nexport const getServerSideProps = async (ctx) => {\n  // Create authenticated Supabase Client\n  const supabase = createServerSupabaseClient(ctx)\n  // Check if we have a session\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  if (!session)\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false,\n      },\n    }\n\n  // Retrieve provider_token & logged in user's third-party id from metadata\n  const { provider_token, user } = session\n  const userId = user.user_metadata.user_name\n\n  const allRepos = await (\n    await fetch(`https://api.github.com/search/repositories?q=user:${userId}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `token ${provider_token}`,\n      },\n    })\n  ).json()\n\n  return { props: { user, allRepos } }\n}\n```\n\n```\nimport { User, createServerSupabaseClient } from '@supabase/auth-helpers-nextjs'\nimport { GetServerSidePropsContext } from 'next'\n\nexport default function ProtectedPage({ user, allRepos }: { user: User; allRepos: any }) {\n  return (\n    <>\n      <div>Protected content for {user.email}</div>\n      <p>Data fetched with provider token:</p>\n      <pre>{JSON.stringify(allRepos, null, 2)}</pre>\n      <p>user:</p>\n      <pre>{JSON.stringify(user, null, 2)}</pre>\n    </>\n  )\n}\n\nexport const getServerSideProps = async (ctx: GetServerSidePropsContext) => {\n  // Create authenticated Supabase Client\n  const supabase = createServerSupabaseClient(ctx)\n  // Check if we have a session\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  if (!session)\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false,\n      },\n    }\n\n  // Retrieve provider_token & logged in user's third-party id from metadata\n  const { provider_token, user } = session\n  const userId = user.user_metadata.user_name\n\n  const allRepos = await (\n    await fetch(`https://api.github.com/search/repositories?q=user:${userId}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `token ${provider_token}`,\n      },\n    })\n  ).json()\n\n  return { props: { user, allRepos } }\n}\n```\n\n## 保护API路由 [*link*](#%e4%bf%9d%e6%8a%a4api%e8%b7%af%e7%94%b1)\n\n创建服务器超级客户端以检索登录用户的会话：\n\n```\nimport { createServerSupabaseClient } from '@supabase/auth-helpers-nextjs'\n\nconst ProtectedRoute = async (req, res) => {\n  // Create authenticated Supabase Client\n  const supabase = createServerSupabaseClient({ req, res })\n  // Check if we have a session\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  if (!session)\n    return res.status(401).json({\n      error: 'not_authenticated',\n      description: 'The user does not have an active session or is not authenticated',\n    })\n\n  // Run queries with RLS on the server\n  const { data } = await supabase.from('test').select('*')\n  res.json(data)\n}\n\nexport default ProtectedRoute\n```\n\n```\nimport { NextApiHandler } from 'next'\nimport { createServerSupabaseClient } from '@supabase/auth-helpers-nextjs'\n\nconst ProtectedRoute: NextApiHandler = async (req, res) => {\n  // Create authenticated Supabase Client\n  const supabase = createServerSupabaseClient({ req, res })\n  // Check if we have a session\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  if (!session)\n    return res.status(401).json({\n      error: 'not_authenticated',\n      description: 'The user does not have an active session or is not authenticated',\n    })\n\n  // Run queries with RLS on the server\n  const { data } = await supabase.from('test').select('*')\n  res.json(data)\n}\n\nexport default ProtectedRoute\n```\n\n## 使用Next.js中间件进行身份验证。 [*link*](#%e4%bd%bf%e7%94%a8nextjs%e4%b8%ad%e9%97%b4%e4%bb%b6%e8%bf%9b%e8%a1%8c%e8%ba%ab%e4%bb%bd%e9%aa%8c%e8%af%81)\n\n作为保护单个页面的替代方案，您可以使用[Next.js中间件](https://nextjs.org/docs/middleware)以保护整个目录或与配置对象匹配的目录。在以下示例中，所有对`/middleware protected/*`的请求都将检查用户是否已登录，如果成功，请求将被转发到目标路由，否则用户将被重定向：\n\n```\nimport { createMiddlewareSupabaseClient } from '@supabase/auth-helpers-nextjs'\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\nexport async function middleware(req: NextRequest) {\n  // We need to create a response and hand it to the supabase client to be able to modify the response headers.\n  const res = NextResponse.next()\n  // Create authenticated Supabase Client.\n  const supabase = createMiddlewareSupabaseClient({ req, res })\n  // Check if we have a session\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  // Check auth condition\n  if (session?.user.email?.endsWith('@gmail.com')) {\n    // Authentication successful, forward request to protected route.\n    return res\n  }\n\n  // Auth condition not met, redirect to home page.\n  const redirectUrl = req.nextUrl.clone()\n  redirectUrl.pathname = '/'\n  redirectUrl.searchParams.set(`redirectedFrom`, req.nextUrl.pathname)\n  return NextResponse.redirect(redirectUrl)\n}\n\nexport const config = {\n  matcher: '/middleware-protected',\n}\n```\n\n## 迁移指南 [*link*](#%e8%bf%81%e7%a7%bb%e6%8c%87%e5%8d%97)\n\n### 迁移到v0.5.X [*link*](#%e8%bf%81%e7%a7%bb%e5%88%b0v05x)\n\n使这些助手更灵活，更易于维护，更易于为新版本的Next.js升级，我们将其分解为最有用的部分，即管理cookie，并在任何环境（客户端、服务器、中间件/边缘）中为您提供经过认证的超级js客户端。\n\n因此，我们将`withApiAuth`、`withPageAuth` 和 `withMiddlewareAuth`高阶函数标记为已弃用，它们将在下一个**次要**版本（v0.6.X）中删除。\n\n请按照以下步骤更新API路由、页面和中间件处理程序。谢谢\n\n#### `withApiAuth`已弃用！ [*link*](#withapiauth%e5%b7%b2%e5%bc%83%e7%94%a8)\n\n在`NextApiHandler`中使用`createServerSubaseClient`：\n\n```\nimport { withApiAuth } from '@supabase/auth-helpers-nextjs'\n\nexport default withApiAuth(async function ProtectedRoute(req, res, supabase) {\n  // Run queries with RLS on the server\n  const { data } = await supabase.from('test').select('*')\n  res.json(data)\n})\n```\n\n```\nimport { NextApiHandler } from 'next'\nimport { createServerSupabaseClient } from '@supabase/auth-helpers-nextjs'\n\nconst ProtectedRoute: NextApiHandler = async (req, res) => {\n  // Create authenticated Supabase Client\n  const supabase = createServerSupabaseClient({ req, res })\n  // Check if we have a session\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  if (!session)\n    return res.status(401).json({\n      error: 'not_authenticated',\n      description: 'The user does not have an active session or is not authenticated',\n    })\n\n  // Run queries with RLS on the server\n  const { data } = await supabase.from('test').select('*')\n  res.json(data)\n}\n\nexport default ProtectedRoute\n```\n\n#### `withPageAuth`已弃用！ [*link*](#withpageauth%e5%b7%b2%e5%bc%83%e7%94%a8)\n\n在`getServerSideProps`中使用`createServerSubaseClient`：\n\n```\nimport { withPageAuth, User } from '@supabase/auth-helpers-nextjs'\n\nexport default function Profile({ user }: { user: User }) {\n  return <pre>{JSON.stringify(user, null, 2)}</pre>\n}\n\nexport const getServerSideProps = withPageAuth({ redirectTo: '/' })\n```\n\n```\nimport { createServerSupabaseClient, User } from '@supabase/auth-helpers-nextjs'\nimport { GetServerSidePropsContext } from 'next'\n\nexport default function Profile({ user }: { user: User }) {\n  return <pre>{JSON.stringify(user, null, 2)}</pre>\n}\n\nexport const getServerSideProps = async (ctx: GetServerSidePropsContext) => {\n  // Create authenticated Supabase Client\n  const supabase = createServerSupabaseClient(ctx)\n  // Check if we have a session\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  if (!session)\n    return {\n      redirect: {\n        destination: '/',\n        permanent: false,\n      },\n    }\n\n  return {\n    props: {\n      initialSession: session,\n      user: session.user,\n    },\n  }\n}\n```\n\n#### `withMiddlewareAuth`已弃用！ [*link*](#withmiddlewareauth%e5%b7%b2%e5%bc%83%e7%94%a8)\n\n```\nimport { withMiddlewareAuth } from '@supabase/auth-helpers-nextjs'\n\nexport const middleware = withMiddlewareAuth({\n  redirectTo: '/',\n  authGuard: {\n    isPermitted: async (user) => {\n      return user.email?.endsWith('@gmail.com') ?? false\n    },\n    redirectTo: '/insufficient-permissions',\n  },\n})\n\nexport const config = {\n  matcher: '/middleware-protected',\n}\n```\n\n```\nimport { createMiddlewareSupabaseClient } from '@supabase/auth-helpers-nextjs'\nimport { NextResponse } from 'next/server'\nimport type { NextRequest } from 'next/server'\n\nexport async function middleware(req: NextRequest) {\n  // We need to create a response and hand it to the supabase client to be able to modify the response headers.\n  const res = NextResponse.next()\n  // Create authenticated Supabase Client.\n  const supabase = createMiddlewareSupabaseClient({ req, res })\n  // Check if we have a session\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  // Check auth condition\n  if (session?.user.email?.endsWith('@gmail.com')) {\n    // Authentication successful, forward request to protected route.\n    return res\n  }\n\n  // Auth condition not met, redirect to home page.\n  const redirectUrl = req.nextUrl.clone()\n  redirectUrl.pathname = '/'\n  redirectUrl.searchParams.set(`redirectedFrom`, req.nextUrl.pathname)\n  return NextResponse.redirect(redirectUrl)\n}\n\nexport const config = {\n  matcher: '/middleware-protected',\n}\n```\n\n### 迁移到v0.4.X和supabase js v2 [*link*](#%e8%bf%81%e7%a7%bb%e5%88%b0v04x%e5%92%8csupabase-js-v2)\n\n随着`supabase-js` v2的更新，不再需要 `auth`API路由，因此您可以继续删除 `/pages/api/`目录下的 `auth`目录。请参阅[v2迁移指南](/docs/app/sdkdocs/javascript/upgrade-guide)以了解supabase js中的全部更改。\n\n`/api/auth/logout` api路由已删除，请改用 `signout` 方法：\n\n```\n<button\n  onClick={async () => {\n    await supabaseClient.auth.signOut()\n    router.push('/')\n  }}\n>\n  Logout\n</button>\n```\n\n已删除`supabaseClient` 和 `supabaseServerClient`，改用`createBrowserSupbaseClient`或`createServerSubaseClient`方法。这允许您向客户端提供CLI生成的类型：\n\n```\n// client-side\nimport type { Database } from 'types_db'\nconst [supabaseClient] = useState(() => createBrowserSupabaseClient<Database>())\n\n// server-side API route\nimport type { NextApiRequest, NextApiResponse } from 'next'\nimport type { Database } from 'types_db'\n\nexport default async (req: NextApiRequest, res: NextApiResponse) => {\n  const supabaseServerClient = createServerSupabaseClient<Database>({\n    req,\n    res,\n  })\n  const {\n    data: { user },\n  } = await supabaseServerClient.auth.getUser()\n\n  res.status(200).json({ name: user?.name ?? '' })\n}\n```\n\n* `UserProvider` 已被 `SessionContextProvider`替换。确保包装您的 `pages/_app.js`与`SessionContextProvider`兼容。然后，在整个应用程序中，您可以使用 `useSessionContext`钩子获取 `session`，使用`useSubaseClient`钩子获取经过身份验证的`supbaseClient`。\n* `useUser`钩子现在返回`user`对象或`null`。\n* TypeScript的用法：您可以将[使用Suabase CLI](/docs/app/sdkdocs/javascript/typescript-support#generating-types)生成的类型传递给Supabase客户端，以获得增强的类型安全性和自动完成:\n\n创建新的超级数据库客户端对象：\n\n```\nimport { Database } from '../database.types'\n\nconst [supabaseClient] = useState(() => createBrowserSupabaseClient<Database>())\n```\n\n从SessionContext中检索超级客户端对象：\n\n```\nimport { useSupabaseClient } from '@supabase/auth-helpers-react'\nimport { Database } from '../database.types'\n\nconst supabaseClient = useSupabaseClient<Database>()\n```\n\n---\n\n[*navigate\\_before* 身份验证UI](/docs/app/development_guide/auth/auth-helpers/auth-ui/)\n\n[使用SveltKit进行Supabase认证 *navigate\\_next*](/docs/app/development_guide/auth/auth-helpers/sveltekit/)"
}