{
  "url": "https://docs.memfiredb.com/docs/app/quickstart/with-flutter/",
  "title": "快速入门: Flutter | MemFire Cloud在线文档",
  "depth": 1,
  "timestamp": "2025-08-12 17:53:55",
  "html": "<main class=\"page-content bg-transparent\">\n<div class=\"top-header d-print-none\" id=\"top-header\">\n<div class=\"header-bar d-flex justify-content-between\">\n<div class=\"d-flex align-items-center\">\n<a alt=\"HomePage\" aria-label=\"HomePage\" class=\"logo-icon me-3\" href=\"/\">\n<div class=\"small\">\n<!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->\n<svg height=\"112px\" version=\"1.1\" viewbox=\"0 0 99 112\" width=\"99px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<title>MemFireDB备份 6</title>\n<defs>\n<lineargradient id=\"linearGradient-1\" x1=\"49.9999885%\" x2=\"49.9999885%\" y1=\"98.082503%\" y2=\"0.766550128%\">\n<stop offset=\"0%\" stop-color=\"#ED1C23\"></stop>\n<stop offset=\"100%\" stop-color=\"#FBAF3B\"></stop>\n</lineargradient>\n</defs>\n<g fill=\"none\" fill-rule=\"evenodd\" id=\"定稿\" stroke=\"none\" stroke-width=\"1\">\n<g id=\"MemFireDB备份-6\">\n<polygon fill=\"#F9AE7C\" id=\"Fill-1\" points=\"25.9728553 40.7912363 47.4268317 0.00591833831 1.15453123 26.7215251\"></polygon>\n<polygon fill=\"#F9AE7C\" id=\"Fill-3\" points=\"97.4213117 26.7267606 51.1285247 0.000910513587 72.4242993 40.8351686\"></polygon>\n<polygon fill=\"#F9904A\" id=\"Fill-5\" points=\"24.8347133 42.7618153 0.000455256793 28.682999 0.000455256793 82.1608764\"></polygon>\n<polygon fill=\"url(#linearGradient-1)\" id=\"Fill-7\" points=\"27.6634514 42.4662399 49.279044 109.05096 70.7296059 42.507213 49.2779058 1.3747617\"></polygon>\n<polygon fill=\"#F9904A\" id=\"Fill-9\" points=\"98.5660549 28.6951771 73.5622137 42.8047233 98.5660549 82.1719163\"></polygon>\n<polygon fill=\"#FB6D33\" id=\"Fill-13\" points=\"72.2987623 45.061545 50.7514582 111.900071 97.579172 84.8646465\"></polygon>\n<polygon fill=\"#FB6D33\" id=\"Fill-15\" points=\"26.1006687 45.0226206 0.987565799 84.8644188 47.8095888 111.898705\"></polygon>\n<path d=\"M60.0737516,38.507213 C59.3168872,35.669825 57.0462939,33.3514298 57.0462939,33.3514298 C57.0462939,33.3514298 57.0804382,35.8849338 56.2894295,37.513615 C55.4847631,39.1696116 53.8765685,40.3054773 53.8765685,40.3054773 C53.8765685,40.3054773 56.1016361,33.8840802 54.2715038,30.1247973 C52.0259496,25.5073552 49.1771803,23.3357803 49.1771803,23.3357803 C49.1771803,23.3357803 50.1070423,28.1319107 48.6240432,31.5065016 C47.1672215,34.8264618 42.8058614,36.7260208 40.7241997,38.7132167 C39.1865699,40.1791435 38.0814341,43.0711623 37.6068289,44.4847347 C37.5715465,44.5883056 37.560165,44.6918765 37.5533362,44.7943093 C37.584066,43.9816759 37.8890881,39.8024186 40.9654858,37.4293925 C43.8404325,35.2111538 41.2431925,30.3478731 41.2431925,30.3478731 C41.2431925,30.3478731 41.7212121,32.5638355 40.9939394,34.1401622 C40.2655285,35.7153507 38.7187936,36.5962726 38.0154218,38.259098 C37.3883056,39.7409589 37.5203301,44.1432921 37.5453692,44.8409731 C37.5453692,44.8591834 37.5476455,44.8762555 37.5476455,44.8921895 C37.5476455,44.9263338 37.5487836,44.9456822 37.5487836,44.9456822 L37.5487836,44.9115379 C37.5590269,45.2655001 37.7138142,45.6080808 37.9972116,45.8448143 L48.3713757,55.6442168 C48.8380139,56.0323232 49.5163466,56.0334614 49.9841229,55.6476312 L60.5938825,45.7105136 C60.9034571,45.4544316 61.0719021,45.0686015 61.0457249,44.6656992 C60.9546735,43.2282259 60.5699815,40.3692133 60.0737516,38.507213\" fill=\"#FFFFFF\" id=\"Fill-17\"></path>\n</g>\n</g>\n</svg>\n</div>\n<div class=\"big\">\n<svg height=\"20\" width=\"232\" xmlns=\"http://www.w3.org/2000/svg\"><defs><lineargradient id=\"a\" x1=\"50%\" x2=\"50%\" y1=\"98.083%\" y2=\".767%\"><stop offset=\"0%\" stop-color=\"#ED1C23\"></stop><stop offset=\"100%\" stop-color=\"#FBAF3B\"></stop></lineargradient></defs><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M78.622 12.384l1.596 21.94H77.49l-.847-14.154-8.98 15.523-4.899-15.53-4.416 14.162H55.6l7.085-21.871 5.712 17.174 10.224-17.244zm99.46.382l.324.01.454.036c.085.008.175.018.269.03l.61.096c1.09.203 2.518.644 3.883 1.596l.515.383-.46 3.694-.413-.62-.154-.195-.255-.285c-.765-.802-2.485-2.188-5.23-2.188-4.55 0-8.723 3.809-9.3 8.491-.287 2.311.334 4.469 1.755 6.077 1.342 1.517 3.257 2.354 5.39 2.354 2.606 0 4.58-1.225 5.606-2.04l.359-.3.424-.408.507-.552-.466 3.766-.093.06a12.622 12.622 0 01-4.577 1.842l-.629.1-.53.058-.418.027-.444.003c-2.918-.002-5.532-1.142-7.36-3.21-1.851-2.096-2.67-4.88-2.305-7.837.73-5.88 5.964-10.696 11.806-10.974l.732-.014zm18.174 9.018c1.724 0 3.344.713 4.443 1.956 1.101 1.248 1.59 2.88 1.377 4.596-.432 3.504-3.808 6.466-7.375 6.466-1.728 0-3.348-.715-4.45-1.96-1.096-1.242-1.583-2.864-1.377-4.563.44-3.52 3.818-6.495 7.382-6.495zm19.446.535l-1.486 12.02h-2.558l.16-1.292c-.936.93-2.462 1.755-4.173 1.755-1.318 0-2.48-.492-3.267-1.385-.804-.91-1.168-2.184-1.008-3.497l.9-7.274 2.597-.327-.914 7.402c-.101.785.084 1.466.525 1.968.49.552 1.27.845 2.25.845 1.526 0 3.3-1.155 3.51-2.873l.87-7.015 2.594-.327zm-63.587-.547c1.77 0 3.21.58 4.164 1.678 1.047 1.207 1.48 3.01 1.263 5.233l-.097.771h-9.914c.16 1.896 1.567 2.979 3.895 2.979 1.806 0 2.878-.434 3.868-.961l1.119-.623-.312 2.522-.106.06c-1.224.687-2.604 1.356-4.8 1.356-2.092 0-3.873-.708-5.006-1.992-.991-1.12-1.404-2.599-1.198-4.272.548-4.433 4.001-6.751 7.124-6.751zm-62.717 0c1.771 0 3.211.58 4.164 1.678 1.048 1.207 1.48 3.01 1.263 5.233l-.097.771h-9.914c.16 1.896 1.567 2.979 3.895 2.979 1.622 0 2.652-.35 3.563-.803l.594-.315.83-.466-.312 2.522-.105.06c-1.224.687-2.604 1.356-4.8 1.356-2.093 0-3.874-.708-5.007-1.992-.99-1.12-1.404-2.599-1.197-4.272.547-4.433 4-6.751 7.123-6.751zM231.476 12l-2.767 22.34h-2.556l.197-1.59c-1.104 1.191-2.882 2.021-4.471 2.021-1.781 0-3.24-.583-4.217-1.69-1.02-1.151-1.452-2.817-1.222-4.686.485-3.908 3.43-6.636 7.167-6.636 1.565 0 3.065.832 3.852 2.064l1.356-10.968 2.661-.855zm-42.07.002L186.64 34.34h-2.556l2.664-21.483 2.66-.854zm-56.632 1.268l-1.166 2.527h-9.586l-.85 6.867h6.627v.48h-.12l-.883 1.778v.24h-5.933l-1.138 9.163h-2.729l2.612-21.055h13.166zm2.715 9.038l-1.497 12.017h-2.559l1.455-11.722 2.601-.295zm-24.427-.537c1 0 1.93.427 2.616 1.204.84.95 1.224 2.29 1.053 3.677l-.955 7.673h-2.527l.922-7.445c.13-1.017-.027-1.81-.45-2.287-.326-.367-.815-.554-1.458-.554-1.954 0-3.178 1.346-3.332 2.613l-.955 7.673h-2.556l.922-7.445c.127-1.03-.024-1.826-.442-2.297-.319-.362-.801-.544-1.437-.544-1.522 0-3.3 1.166-3.516 2.901l-.912 7.385h-2.559l1.455-11.722 2.594-.295-.146 1.164c1.027-1.077 2.419-1.701 3.854-1.701 1.375 0 2.58.79 3.226 2.083.914-1.13 2.05-2.083 4.603-2.083zm29.487.532l-.206 1.73c1.082-.978 2.932-1.7 4.514-1.7h.269l-.271 2.282h-.214c-1.814 0-4.469.837-4.7 2.7l-.866 7.01h-2.558l1.45-11.693 2.582-.329zm55.47 1.865c-2.31 0-4.27 1.792-4.563 4.168-.144 1.145.15 2.196.824 2.957.64.725 1.586 1.126 2.656 1.126 2.292 0 4.241-1.78 4.532-4.14.146-1.169-.144-2.237-.821-3.003-.634-.715-1.567-1.108-2.628-1.108zm27.497-.029c-2.278 0-4.15 1.752-4.45 4.17-.149 1.187.137 2.255.8 3.006.611.692 1.526 1.076 2.57 1.076 2.294 0 4.173-1.743 4.468-4.143.152-1.21-.13-2.285-.79-3.033-.623-.704-1.52-1.076-2.598-1.076zm-134.356.045c-1.89 0-3.372 1.094-4.015 2.947h7.164a2.853 2.853 0 00-.71-1.956c-.574-.648-1.416-.991-2.439-.991zm62.715 0c-1.892 0-3.37 1.094-4.013 2.947h7.166a2.867 2.867 0 00-.713-1.956c-.573-.648-1.416-.991-2.44-.991zm-17.267-7.614c.919 0 1.706.748 1.754 1.668a1.587 1.587 0 01-1.603 1.692c-.917 0-1.704-.75-1.754-1.668a1.593 1.593 0 011.603-1.692z\" fill=\"#116\"></path><path d=\"M11.131 17.482L20.326.002.495 11.453zm30.621-6.028L21.912 0l9.127 17.5z\" fill=\"#F9AE7C\"></path><path d=\"M10.643 18.326L0 12.293v22.919z\" fill=\"#F9904A\"></path><path d=\"M11.856 18.2l9.264 28.536 9.193-28.519L21.119.59z\" fill=\"url(#a)\"></path><path d=\"M42.243 12.298l-10.716 6.047 10.716 16.872z\" fill=\"#F9904A\"></path><path d=\"M30.985 19.312l-9.234 28.645L41.82 36.371zm-19.799-.017L.423 36.37 20.49 47.957z\" fill=\"#FB6D33\"></path><path d=\"M25.746 16.503c-.324-1.216-1.298-2.21-1.298-2.21s.015 1.086-.324 1.784c-.345.71-1.034 1.197-1.034 1.197s.954-2.752.17-4.363c-.963-1.98-2.184-2.91-2.184-2.91s.398 2.056-.237 3.502c-.624 1.423-2.494 2.237-3.386 3.088-.659.629-1.132 1.868-1.336 2.474a.509.509 0 00-.023.133c.013-.349.144-2.14 1.463-3.157 1.232-.95.119-3.035.119-3.035s.205.95-.107 1.625c-.312.676-.975 1.053-1.277 1.766-.268.635-.212 2.522-.201 2.82v.023l.001.022v-.014a.54.54 0 00.193.4l4.446 4.2c.2.166.49.166.69.001l4.548-4.259a.535.535 0 00.193-.448c-.039-.616-.203-1.84-.416-2.639\" fill=\"#FFF\"></path></g></svg>\n</div>\n</a>\n<button class=\"btn btn-icon btn-soft\" id=\"close-sidebar\">\n<span class=\"material-icons size-20 menu-icon align-middle\">menu</span>\n</button>\n</div>\n<div class=\"d-flex align-items-center\">\n<ul class=\"list-unstyled mb-0\">\n</ul>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://memfiredb.com/\" target=\"_blank\" type=\"button\">官网</a>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://community.memfiredb.com/\" target=\"_blank\" type=\"button\">论坛</a>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://cloud.memfiredb.com/auth/login\" target=\"_blank\" type=\"button\">登录</a>\n<button aria-label=\"Toggle user interface mode\" class=\"btn btn-icon btn-default ms-2\" id=\"mode\" type=\"button\">\n<span class=\"toggle-dark\">\n<svg fill=\"currentColor\" height=\"30\" viewbox=\"0 0 48 48\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\n<title>Enable dark mode</title>\n<path d=\"M24 42q-7.5 0-12.75-5.25T6 24q0-7.5 5.25-12.75T24 6q.4 0 .85.025.45.025 1.15.075-1.8 1.6-2.8 3.95-1 2.35-1 4.95 0 4.5 3.15 7.65Q28.5 25.8 33 25.8q2.6 0 4.95-.925T41.9 22.3q.05.6.075.975Q42 23.65 42 24q0 7.5-5.25 12.75T24 42Zm0-3q5.45 0 9.5-3.375t5.05-7.925q-1.25.55-2.675.825Q34.45 28.8 33 28.8q-5.75 0-9.775-4.025T19.2 15q0-1.2.25-2.575.25-1.375.9-3.125-4.9 1.35-8.125 5.475Q9 18.9 9 24q0 6.25 4.375 10.625T24 39Zm-.2-14.85Z\"></path>\n</svg>\n</span>\n<span class=\"toggle-light\">\n<svg fill=\"currentColor\" height=\"30\" viewbox=\"0 0 48 48\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\n<title>Enable light mode</title>\n<path d=\"M24 31q2.9 0 4.95-2.05Q31 26.9 31 24q0-2.9-2.05-4.95Q26.9 17 24 17q-2.9 0-4.95 2.05Q17 21.1 17 24q0 2.9 2.05 4.95Q21.1 31 24 31Zm0 3q-4.15 0-7.075-2.925T14 24q0-4.15 2.925-7.075T24 14q4.15 0 7.075 2.925T34 24q0 4.15-2.925 7.075T24 34ZM3.5 25.5q-.65 0-1.075-.425Q2 24.65 2 24q0-.65.425-1.075Q2.85 22.5 3.5 22.5h5q.65 0 1.075.425Q10 23.35 10 24q0 .65-.425 1.075-.425.425-1.075.425Zm36 0q-.65 0-1.075-.425Q38 24.65 38 24q0-.65.425-1.075.425-.425 1.075-.425h5q.65 0 1.075.425Q46 23.35 46 24q0 .65-.425 1.075-.425.425-1.075.425ZM24 10q-.65 0-1.075-.425Q22.5 9.15 22.5 8.5v-5q0-.65.425-1.075Q23.35 2 24 2q.65 0 1.075.425.425.425.425 1.075v5q0 .65-.425 1.075Q24.65 10 24 10Zm0 36q-.65 0-1.075-.425-.425-.425-.425-1.075v-5q0-.65.425-1.075Q23.35 38 24 38q.65 0 1.075.425.425.425.425 1.075v5q0 .65-.425 1.075Q24.65 46 24 46ZM12 14.1l-2.85-2.8q-.45-.45-.425-1.075.025-.625.425-1.075.45-.45 1.075-.45t1.075.45L14.1 12q.4.45.4 1.05 0 .6-.4 1-.4.45-1.025.45-.625 0-1.075-.4Zm24.7 24.75L33.9 36q-.4-.45-.4-1.075t.45-1.025q.4-.45 1-.45t1.05.45l2.85 2.8q.45.45.425 1.075-.025.625-.425 1.075-.45.45-1.075.45t-1.075-.45ZM33.9 14.1q-.45-.45-.45-1.05 0-.6.45-1.05l2.8-2.85q.45-.45 1.075-.425.625.025 1.075.425.45.45.45 1.075t-.45 1.075L36 14.1q-.4.4-1.025.4-.625 0-1.075-.4ZM9.15 38.85q-.45-.45-.45-1.075t.45-1.075L12 33.9q.45-.45 1.05-.45.6 0 1.05.45.45.45.45 1.05 0 .6-.45 1.05l-2.8 2.85q-.45.45-1.075.425-.625-.025-1.075-.425ZM24 24Z\"></path>\n</svg>\n</span>\n</button>\n</div>\n</div>\n</div>\n<div class=\"container-fluid\">\n<div class=\"layout-spacing\">\n<div class=\"d-md-flex justify-content-between align-items-center\"></div>\n<div class=\"row flex-xl-nowrap\">\n<div class=\"docs-toc col-xl-3 d-xl-block\"><toc>\n<div class=\"fw-bold text-uppercase mb-2\">本页</div>\n\n</toc></div>\n<div class=\"docs-toc-mobile d-print-none d-xl-none\">\n<button aria-expanded=\"false\" class=\"btn-secondary dropdown-toggle\" data-bs-offset=\"0,0\" data-bs-toggle=\"dropdown\" id=\"toc-dropdown-btn\" type=\"button\">第一步：在 MemFire Cloud 仪表板中</button>\n</div>\n<div class=\"docs-content col-12 col-xl-9 mt-0\">\n<div class=\"mb-0 d-flex\">\n<h1 class=\"content-title mb-0\">\n                                                    快速入门: Flutter\n                                                    \n                                                </h1>\n</div>\n<div class=\"main-content\" data-bs-root-margin=\"0px 0px -65%\" data-bs-spy=\"scroll\" data-bs-target=\"#toc-mobile\" id=\"content\">\n<div data-prismjs-copy=\"\" data-prismjs-copy-error=\"\" data-prismjs-copy-success=\"\">\n<h2 id=\"第一步在-memfire-cloud-仪表板中创建httpscloudmemfiredbcomproject一个新应用\">第一步：在 MemFire Cloud 仪表板中<a href=\"https://cloud.memfiredb.com/project\" rel=\"external\" target=\"_blank\">创建<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>一个新应用。 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e4%b8%80%e6%ad%a5%e5%9c%a8-memfire-cloud-%e4%bb%aa%e8%a1%a8%e6%9d%bf%e4%b8%ad%e5%88%9b%e5%bb%bahttpscloudmemfiredbcomproject%e4%b8%80%e4%b8%aa%e6%96%b0%e5%ba%94%e7%94%a8\"><i class=\"material-icons align-middle\">link</i></a></h2><p>应用准备就绪后，进入应用，在左侧菜单-&gt;表编辑器选择 SQL 编辑器在 MemFire Cloud 数据库中创建一个表。使用以下 SQL 并自行运行。</p>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>在本地工作时，可以运行以下命令创建新的迁移文件：</p>\n</div>\n</div>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"7721565\" tabindex=\"0\"><code class=\"language-bash\">supabase migration new user_management_starter</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"c38adca\" tabindex=\"0\"><code class=\"language-bash\">-- Create a table <span class=\"token keyword\">for</span> public profiles\ncreate table profiles <span class=\"token punctuation\">(</span>\n  <span class=\"token function\">id</span> uuid references auth.users not null primary key,\n  updated_at timestamp with <span class=\"token function\">time</span> zone,\n  username text unique,\n  full_name text,\n  avatar_url text,\n  website text,\n\n  constraint username_length check <span class=\"token punctuation\">(</span>char_length<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n-- Set up Row Level Security <span class=\"token punctuation\">(</span>RLS<span class=\"token punctuation\">)</span>\n-- See https://supabase.com/docs/app/development_guide/auth/row-level-security <span class=\"token keyword\">for</span> <span class=\"token function\">more</span> details.\nalter table profiles\n  <span class=\"token builtin class-name\">enable</span> row level security<span class=\"token punctuation\">;</span>\n\ncreate policy <span class=\"token string\">\"Public profiles are viewable by everyone.\"</span> on profiles\n  <span class=\"token keyword\">for</span> <span class=\"token keyword\">select</span> using <span class=\"token punctuation\">(</span>true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncreate policy <span class=\"token string\">\"Users can insert their own profile.\"</span> on profiles\n  <span class=\"token keyword\">for</span> insert with check <span class=\"token punctuation\">(</span>auth.uid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncreate policy <span class=\"token string\">\"Users can update own profile.\"</span> on profiles\n  <span class=\"token keyword\">for</span> update using <span class=\"token punctuation\">(</span>auth.uid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token function\">id</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n-- This trigger automatically creates a profile entry when a new user signs up via Supabase Auth.\n-- See https://supabase.com/docs/app/development_guide/auth/managing-user-data<span class=\"token comment\">#using-triggers for more details.</span>\ncreate <span class=\"token keyword\">function</span> public.handle_new_user<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nreturns trigger as <span class=\"token variable\">$$</span>\nbegin\n  insert into public.profiles <span class=\"token punctuation\">(</span>id, full_name, avatar_url<span class=\"token punctuation\">)</span>\n  values <span class=\"token punctuation\">(</span>new.id, new.raw_user_meta_data-<span class=\"token operator\">&gt;&gt;</span><span class=\"token string\">'full_name'</span>, new.raw_user_meta_data-<span class=\"token operator\">&gt;&gt;</span><span class=\"token string\">'avatar_url'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token builtin class-name\">return</span> new<span class=\"token punctuation\">;</span>\nend<span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$$</span> language plpgsql security definer<span class=\"token punctuation\">;</span>\ncreate trigger on_auth_user_created\n  after insert on auth.users\n  <span class=\"token keyword\">for</span> each row execute procedure public.handle_new_user<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n-- Set up Storage<span class=\"token operator\">!</span>\ninsert into storage.buckets <span class=\"token punctuation\">(</span>id, name<span class=\"token punctuation\">)</span>\n  values <span class=\"token punctuation\">(</span><span class=\"token string\">'avatars'</span>, <span class=\"token string\">'avatars'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n-- Set up access controls <span class=\"token keyword\">for</span> storage.\n-- See https://supabase.com/docs/app/development_guide/storage/security/access-control<span class=\"token comment\">#policy-examples for more details.</span>\ncreate policy <span class=\"token string\">\"Avatar images are publicly accessible.\"</span> on storage.objects\n  <span class=\"token keyword\">for</span> <span class=\"token keyword\">select</span> using <span class=\"token punctuation\">(</span>bucket_id <span class=\"token operator\">=</span> <span class=\"token string\">'avatars'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncreate policy <span class=\"token string\">\"Anyone can upload an avatar.\"</span> on storage.objects\n  <span class=\"token keyword\">for</span> insert with check <span class=\"token punctuation\">(</span>bucket_id <span class=\"token operator\">=</span> <span class=\"token string\">'avatars'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncreate policy <span class=\"token string\">\"Anyone can update their own avatar.\"</span> on storage.objects\n  <span class=\"token keyword\">for</span> update using <span class=\"token punctuation\">(</span>auth.uid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> owner<span class=\"token punctuation\">)</span> with check <span class=\"token punctuation\">(</span>bucket_id <span class=\"token operator\">=</span> <span class=\"token string\">'avatars'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"第二步获取-api-密钥\">第二步：获取 API 密钥 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e4%ba%8c%e6%ad%a5%e8%8e%b7%e5%8f%96-api-%e5%af%86%e9%92%a5\"><i class=\"material-icons align-middle\">link</i></a></h2><p>现在您已经创建了一些数据库表，可以使用自动生成的 API 插入数据了。</p>\n<p>我们只需从 API 设置中获取项目 URL 和匿名密钥。</p>\n<p>1、转到控制面板中的 API 设置页面。\n2、在此页面上找到项目 URL、anon 和 service_role 密钥。</p>\n<h2 id=\"第三步创建-flutter-应用\">第三步：创建 Flutter 应用 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e4%b8%89%e6%ad%a5%e5%88%9b%e5%bb%ba-flutter-%e5%ba%94%e7%94%a8\"><i class=\"material-icons align-middle\">link</i></a></h2><p>我们可以使用 flutter create 来初始化\n一个名为 supabase_quickstart 的应用程序</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"05b19e3\" tabindex=\"0\"><code class=\"language-bash\">flutter create supabase_quickstart</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"第四步安装-supabase-客户端库\">第四步：安装 Supabase 客户端库 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e5%9b%9b%e6%ad%a5%e5%ae%89%e8%a3%85-supabase-%e5%ae%a2%e6%88%b7%e7%ab%af%e5%ba%93\"><i class=\"material-icons align-middle\">link</i></a></h2><p>最快的入门方法是使用 supabase_flutter 客户端库，它提供了一些简便的API，用于在 Flutter 应用程序中使用 Supabase。\n在Flutter应用程序中打开pubspec.yaml文件，并将supabase_flutter添加为依赖项。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"86393dd\" tabindex=\"0\"><code class=\"language-bash\">supabase_flutter: ^2.0.0</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>运行 flutter pub get 安装依赖项。</p>\n<h2 id=\"第五步设置深层链接\">第五步：设置深层链接 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e4%ba%94%e6%ad%a5%e8%ae%be%e7%bd%ae%e6%b7%b1%e5%b1%82%e9%93%be%e6%8e%a5\"><i class=\"material-icons align-middle\">link</i></a></h2><p>既然我们已经安装了依赖项，那就来设置深层链接吧。\n当用户点击魔法链接登录时，需要设置深层链接才能将用户带回应用程序。\n我们只需对 Flutter 应用程序稍作调整，就能设置深度链接。</p>\n<p>我们必须使用 io.supabase.flutterquickstart 作为方案。在本例中，我们将使用 login-callback 作为深度链接的主机，但您也可以根据自己的喜好进行更改。</p>\n<p>首先，在控制面板中添加 io.supabase.flutterquickstart://login-callback/ 作为新的重定向 URL。</p>\n<p>以上就是 MemFire Cloud 的设置，其余的都是特定平台的设置：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"edcbaf\" role=\"tabpanel\">\n<p>编辑 ios/Runner/Info.plist 文件。</p>\n<p>添加 CFBundleURLTypes 以启用深度链接：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"780307f\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> <span class=\"token operator\">...</span> other tags <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>plist<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>dict<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> <span class=\"token operator\">...</span> other tags <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> Add <span class=\"token keyword\">this</span> array <span class=\"token keyword\">for</span> Deep Links <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>key<span class=\"token operator\">&gt;</span>CFBundleURLTypes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>key<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>array<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>dict<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">&gt;</span>CFBundleTypeRole<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>key<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span>Editor<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>string<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>key<span class=\"token operator\">&gt;</span>CFBundleURLSchemes<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>key<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>array<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>string<span class=\"token operator\">&gt;</span>io<span class=\"token punctuation\">.</span>supabase<span class=\"token punctuation\">.</span>flutterquickstart<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>string<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>array<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dict<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>array<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> <span class=\"token operator\">...</span> other tags <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>dict<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>plist<span class=\"token operator\">&gt;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"bfceda\" role=\"tabpanel\">\n<p>编辑 android/app/src/main/AndroidManifest.xml 文件。</p>\n<p>添加意图过滤器以启用深度链接：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-ts\" id=\"0aeedee\" tabindex=\"0\"><code class=\"language-ts\"><span class=\"token operator\">&lt;</span>manifest <span class=\"token operator\">...</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> <span class=\"token operator\">...</span> other tags <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span>application <span class=\"token operator\">...</span><span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span>activity <span class=\"token operator\">...</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> <span class=\"token operator\">...</span> other tags <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> Add <span class=\"token keyword\">this</span> intent<span class=\"token operator\">-</span>filter <span class=\"token keyword\">for</span> Deep Links <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>intent<span class=\"token operator\">-</span>filter<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>action android<span class=\"token operator\">:</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"android.intent.action.VIEW\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>category android<span class=\"token operator\">:</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"android.intent.category.DEFAULT\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>category android<span class=\"token operator\">:</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"android.intent.category.BROWSABLE\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> Accepts URIs that begin <span class=\"token keyword\">with</span> <span class=\"token constant\">YOUR_SCHEME</span><span class=\"token operator\">:</span><span class=\"token operator\">/</span><span class=\"token operator\">/</span><span class=\"token constant\">YOUR_HOST</span> <span class=\"token operator\">--</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>data\n        android<span class=\"token operator\">:</span>scheme<span class=\"token operator\">=</span><span class=\"token string\">\"io.supabase.flutterquickstart\"</span>\n        android<span class=\"token operator\">:</span>host<span class=\"token operator\">=</span><span class=\"token string\">\"login-callback\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>intent<span class=\"token operator\">-</span>filter<span class=\"token operator\">&gt;</span>\n\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>activity<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>application<span class=\"token operator\">&gt;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>manifest<span class=\"token operator\">&gt;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"facdeb\" role=\"tabpanel\">\n<p>主函数\n既然我们已经准备好了深层链接，那就用之前复制的 API 凭据在主函数中初始化 Supabase 客户端吧。\n这些变量将暴露在应用程序中，这完全没有问题，因为我们已经在数据库中启用了\n我们的数据库启用了行级安全。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"4c87317\" tabindex=\"0\"><code class=\"language-js\">Future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">await</span> Supabase<span class=\"token punctuation\">.</span><span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span>\n  <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'YOUR_SUPABASE_URL'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">anonKey</span><span class=\"token operator\">:</span> <span class=\"token string\">'YOUR_SUPABASE_ANON_KEY'</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h2 id=\"第六步设置闪屏\">第六步：设置闪屏 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e5%85%ad%e6%ad%a5%e8%ae%be%e7%bd%ae%e9%97%aa%e5%b1%8f\"><i class=\"material-icons align-middle\">link</i></a></h2><p>让我们创建一个闪屏，在用户打开应用程序后立即显示。\n该屏幕会检索当前会话并相应地重定向用户。\nlib/pages/splash_page.dart</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"69480c7\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_quickstart/main.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SplashPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span>\n<span class=\"token keyword\">const</span> <span class=\"token function\">SplashPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n@override\n_SplashPageState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">_SplashPageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_SplashPageState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>SplashPage<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n@override\n<span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">_redirect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nFuture<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">_redirect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> Future<span class=\"token punctuation\">.</span><span class=\"token function\">delayed</span><span class=\"token punctuation\">(</span>Duration<span class=\"token punctuation\">.</span>zero<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  final session <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>currentSession<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>session <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pushReplacementNamed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/account'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n    Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pushReplacementNamed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n@override\nWidget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">BuildContext context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n    <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>child<span class=\"token operator\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"第七步设置登录页面\">第七步：设置登录页面 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e4%b8%83%e6%ad%a5%e8%ae%be%e7%bd%ae%e7%99%bb%e5%bd%95%e9%a1%b5%e9%9d%a2\"><i class=\"material-icons align-middle\">link</i></a></h2><p>让我们创建一个 Flutter 部件来管理登录和注册。\n我们将使用 Magic Links，这样用户就可以使用电子邮件登录，而无需使用密码。\n请注意，该页面使用 onAuthStateChange 设置了用户认证状态的监听器。\n当用户点击魔法链接回到应用程序时，将触发一个新事件，该页面可以捕捉到该事件并相应地重定向用户。\nlib/pages/login_page.dart</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"764f997\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'dart:async'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/foundation.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_flutter/supabase_flutter.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_quickstart/main.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LoginPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function\">LoginPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  @override\n  _LoginPageState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">_LoginPageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_LoginPageState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>LoginPage<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  bool _isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  bool _redirecting <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  late final TextEditingController _emailController <span class=\"token operator\">=</span> <span class=\"token function\">TextEditingController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  late final StreamSubscription<span class=\"token operator\">&lt;</span>AuthState<span class=\"token operator\">&gt;</span> _authStateSubscription<span class=\"token punctuation\">;</span>\n\n  Future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">_signIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        _isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">signInWithOtp</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">email</span><span class=\"token operator\">:</span> _emailController<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">emailRedirectTo</span><span class=\"token operator\">:</span>\n            kIsWeb <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> <span class=\"token string\">'io.supabase.flutterquickstart://login-callback/'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ScaffoldMessenger<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">showSnackBar</span><span class=\"token punctuation\">(</span>\n          <span class=\"token keyword\">const</span> <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>content<span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Check your email for a login link!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        _emailController<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> on AuthException <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error occurred'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          _isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  @override\n  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _authStateSubscription <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>onAuthStateChange<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>_redirecting<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n      final session <span class=\"token operator\">=</span> data<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>session <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        _redirecting <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pushReplacementNamed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/account'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @override\n  <span class=\"token keyword\">void</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _emailController<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _authStateSubscription<span class=\"token punctuation\">.</span><span class=\"token function\">cancel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @override\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">BuildContext context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n      <span class=\"token literal-property property\">appBar</span><span class=\"token operator\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sign In'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> <span class=\"token function\">ListView</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>vertical<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">horizontal</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sign in via the magic link with your email below'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">const</span> <span class=\"token function\">SizedBox</span><span class=\"token punctuation\">(</span>height<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function\">TextFormField</span><span class=\"token punctuation\">(</span>\n            <span class=\"token literal-property property\">controller</span><span class=\"token operator\">:</span> _emailController<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">decoration</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">InputDecoration</span><span class=\"token punctuation\">(</span>labelText<span class=\"token operator\">:</span> <span class=\"token string\">'Email'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token keyword\">const</span> <span class=\"token function\">SizedBox</span><span class=\"token punctuation\">(</span>height<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token function\">ElevatedButton</span><span class=\"token punctuation\">(</span>\n            <span class=\"token literal-property property\">onPressed</span><span class=\"token operator\">:</span> _isLoading <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> _signIn<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">child</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>_isLoading <span class=\"token operator\">?</span> <span class=\"token string\">'Loading'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Send Magic Link'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"第八步设置账户页面\">第八步：设置账户页面 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e5%85%ab%e6%ad%a5%e8%ae%be%e7%bd%ae%e8%b4%a6%e6%88%b7%e9%a1%b5%e9%9d%a2\"><i class=\"material-icons align-middle\">link</i></a></h2><p>用户登录后，我们可以让他们编辑个人资料详情并管理自己的账户。\n让我们为此创建一个名为 account_page.dart 的新部件。\nlib/pages/account_page.dart</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"6e50b35\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_flutter/supabase_flutter.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_quickstart/main.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function\">AccountPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  @override\n  _AccountPageState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">_AccountPageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_AccountPageState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>AccountPage<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  final _usernameController <span class=\"token operator\">=</span> <span class=\"token function\">TextEditingController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  final _websiteController <span class=\"token operator\">=</span> <span class=\"token function\">TextEditingController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">var</span> _loading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/// Called once a user id is received within `onAuthenticated()`</span>\n  Future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">_getProfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      _loading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      final userId <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>currentUser<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n      final data <span class=\"token operator\">=</span>\n          <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'profiles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> userId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">single</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      _usernameController<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> String<span class=\"token punctuation\">;</span>\n      _websiteController<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'website'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> String<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> on PostgrestException <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error occurred'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          _loading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/// Called when user taps `Update` button</span>\n  Future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">_updateProfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      _loading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    final userName <span class=\"token operator\">=</span> _usernameController<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    final website <span class=\"token operator\">=</span> _websiteController<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    final user <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>currentUser<span class=\"token punctuation\">;</span>\n    final updates <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">'id'</span><span class=\"token operator\">:</span> user<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'username'</span><span class=\"token operator\">:</span> userName<span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'website'</span><span class=\"token operator\">:</span> website<span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'updated_at'</span><span class=\"token operator\">:</span> DateTime<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toIso8601String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'profiles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">upsert</span><span class=\"token punctuation\">(</span>updates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n          <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Successfully updated profile!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> on PostgrestException <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error occurred'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          _loading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  Future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">_signOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">signOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> on AuthException <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error occurred'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pushReplacementNamed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  @override\n  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">_getProfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @override\n  <span class=\"token keyword\">void</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _usernameController<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _websiteController<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @override\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">BuildContext context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n      <span class=\"token literal-property property\">appBar</span><span class=\"token operator\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Profile'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> _loading\n          <span class=\"token operator\">?</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>child<span class=\"token operator\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token operator\">:</span> <span class=\"token function\">ListView</span><span class=\"token punctuation\">(</span>\n              <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>vertical<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">horizontal</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token function\">TextFormField</span><span class=\"token punctuation\">(</span>\n                  <span class=\"token literal-property property\">controller</span><span class=\"token operator\">:</span> _usernameController<span class=\"token punctuation\">,</span>\n                  <span class=\"token literal-property property\">decoration</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">InputDecoration</span><span class=\"token punctuation\">(</span>labelText<span class=\"token operator\">:</span> <span class=\"token string\">'User Name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">const</span> <span class=\"token function\">SizedBox</span><span class=\"token punctuation\">(</span>height<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">TextFormField</span><span class=\"token punctuation\">(</span>\n                  <span class=\"token literal-property property\">controller</span><span class=\"token operator\">:</span> _websiteController<span class=\"token punctuation\">,</span>\n                  <span class=\"token literal-property property\">decoration</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">InputDecoration</span><span class=\"token punctuation\">(</span>labelText<span class=\"token operator\">:</span> <span class=\"token string\">'Website'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">const</span> <span class=\"token function\">SizedBox</span><span class=\"token punctuation\">(</span>height<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">ElevatedButton</span><span class=\"token punctuation\">(</span>\n                  <span class=\"token literal-property property\">onPressed</span><span class=\"token operator\">:</span> _loading <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> _updateProfile<span class=\"token punctuation\">,</span>\n                  <span class=\"token literal-property property\">child</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>_loading <span class=\"token operator\">?</span> <span class=\"token string\">'Saving...'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Update'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">const</span> <span class=\"token function\">SizedBox</span><span class=\"token punctuation\">(</span>height<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">TextButton</span><span class=\"token punctuation\">(</span>onPressed<span class=\"token operator\">:</span> _signOut<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">child</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sign Out'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"第九步启动\">第九步：启动 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e4%b9%9d%e6%ad%a5%e5%90%af%e5%8a%a8\"><i class=\"material-icons align-middle\">link</i></a></h2><p>现在所有组件都已就位，让我们更新 lib/main.dart：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"955f38c\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_flutter/supabase_flutter.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_quickstart/pages/account_page.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_quickstart/pages/login_page.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_quickstart/pages/splash_page.dart'</span><span class=\"token punctuation\">;</span>\n\nFuture<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">await</span> Supabase<span class=\"token punctuation\">.</span><span class=\"token function\">initialize</span><span class=\"token punctuation\">(</span>\n    <span class=\"token literal-property property\">url</span><span class=\"token operator\">:</span> <span class=\"token string\">'YOUR_SUPABASE_URL'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">anonKey</span><span class=\"token operator\">:</span> <span class=\"token string\">'YOUR_SUPABASE_ANON_KEY'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">runApp</span><span class=\"token punctuation\">(</span><span class=\"token function\">MyApp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nfinal supabase <span class=\"token operator\">=</span> Supabase<span class=\"token punctuation\">.</span>instance<span class=\"token punctuation\">.</span>client<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatelessWidget</span> <span class=\"token punctuation\">{</span>\n  @override\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">BuildContext context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">MaterialApp</span><span class=\"token punctuation\">(</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'Supabase Flutter'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">theme</span><span class=\"token operator\">:</span> ThemeData<span class=\"token punctuation\">.</span><span class=\"token function\">dark</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyWith</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">primaryColor</span><span class=\"token operator\">:</span> Colors<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">textButtonTheme</span><span class=\"token operator\">:</span> <span class=\"token function\">TextButtonThemeData</span><span class=\"token punctuation\">(</span>\n          <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> TextButton<span class=\"token punctuation\">.</span><span class=\"token function\">styleFrom</span><span class=\"token punctuation\">(</span>\n            <span class=\"token literal-property property\">foregroundColor</span><span class=\"token operator\">:</span> Colors<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">elevatedButtonTheme</span><span class=\"token operator\">:</span> <span class=\"token function\">ElevatedButtonThemeData</span><span class=\"token punctuation\">(</span>\n          <span class=\"token literal-property property\">style</span><span class=\"token operator\">:</span> ElevatedButton<span class=\"token punctuation\">.</span><span class=\"token function\">styleFrom</span><span class=\"token punctuation\">(</span>\n            <span class=\"token literal-property property\">foregroundColor</span><span class=\"token operator\">:</span> Colors<span class=\"token punctuation\">.</span>white<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Colors<span class=\"token punctuation\">.</span>green<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">initialRoute</span><span class=\"token operator\">:</span> <span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">routes</span><span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>String<span class=\"token punctuation\">,</span> WidgetBuilder<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'/'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">const</span> <span class=\"token function\">SplashPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'/login'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">const</span> <span class=\"token function\">LoginPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'/account'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">_</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token keyword\">const</span> <span class=\"token function\">AccountPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>完成后，在终端窗口中运行，即可在 Android 或 iOS 上启动：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"2a87d26\" tabindex=\"0\"><code class=\"language-bash\">flutter run</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>如果是web版，运行以下命令在 localhost:3000 上启动它</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"5c9d3a0\" tabindex=\"0\"><code class=\"language-bash\">flutter run <span class=\"token parameter variable\">-d</span> web-server --web-hostname localhost --web-port <span class=\"token number\">3000</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>然后打开浏览器，登录 localhost:3000，就能看到已完成的应用程序了。</p>\n<h2 id=\"第十步简介照片\">第十步：简介照片 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e5%8d%81%e6%ad%a5%e7%ae%80%e4%bb%8b%e7%85%a7%e7%89%87\"><i class=\"material-icons align-middle\">link</i></a></h2><p>每个 MemFire Cloud 项目都配置了用于管理大文件（如\n照片和视频。</p>\n<h3 id=\"确保我们有一个公共存储桶\">确保我们有一个公共存储桶 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%a1%ae%e4%bf%9d%e6%88%91%e4%bb%ac%e6%9c%89%e4%b8%80%e4%b8%aa%e5%85%ac%e5%85%b1%e5%ad%98%e5%82%a8%e6%a1%b6\"><i class=\"material-icons align-middle\">link</i></a></h3><p>我们将把图片存储为可公开共享的图片。\n确保你的头像邮筒设置为公开，如果不是，请点击悬停在存储桶名称上时出现的点菜单更改公开。\n如果您的存储桶已设置为公开，您应该会在邮筒名称旁边看到一个橙色的 “公开 “徽章</p>\n<h2 id=\"第十一步在账户页面添加图片上传功能\">第十一步：在账户页面添加图片上传功能 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e5%8d%81%e4%b8%80%e6%ad%a5%e5%9c%a8%e8%b4%a6%e6%88%b7%e9%a1%b5%e9%9d%a2%e6%b7%bb%e5%8a%a0%e5%9b%be%e7%89%87%e4%b8%8a%e4%bc%a0%e5%8a%9f%e8%83%bd\"><i class=\"material-icons align-middle\">link</i></a></h2><p>我们将使用 image_picker 插件从设备中选择图片。</p>\n<p>在 pubspec.yaml 文件中添加以下一行以安装 image_picker：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"2892823\" tabindex=\"0\"><code class=\"language-bash\">image_picker: ^1.0.5</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>根据平台的不同，使用 image_picker 还需要一些额外的准备工作。\n请按照 image_picker 的 README.md 中的说明，了解如何针对您使用的平台进行设置。</p>\n<p>完成上述所有步骤后，就可以开始编码了。</p>\n<h2 id=\"第十二步创建上传小部件\">第十二步：创建上传小部件 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e5%8d%81%e4%ba%8c%e6%ad%a5%e5%88%9b%e5%bb%ba%e4%b8%8a%e4%bc%a0%e5%b0%8f%e9%83%a8%e4%bb%b6\"><i class=\"material-icons align-middle\">link</i></a></h2><p>让我们为用户创建一个头像，这样他们就可以上传个人照片了。\n我们可以先创建一个新的组件：</p>\n<p>lib/components/avatar.dart</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"a66cff5\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:image_picker/image_picker.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_flutter/supabase_flutter.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_quickstart/main.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Avatar</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function\">Avatar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>imageUrl<span class=\"token punctuation\">,</span>\n    required <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onUpload<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  final String<span class=\"token operator\">?</span> imageUrl<span class=\"token punctuation\">;</span>\n  final <span class=\"token keyword\">void</span> <span class=\"token function\">Function</span><span class=\"token punctuation\">(</span>String<span class=\"token punctuation\">)</span> onUpload<span class=\"token punctuation\">;</span>\n\n  @override\n  _AvatarState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">_AvatarState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_AvatarState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>Avatar<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  bool _isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n\n  @override\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">BuildContext context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Column</span><span class=\"token punctuation\">(</span>\n      <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>widget<span class=\"token punctuation\">.</span>imageUrl <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">||</span> widget<span class=\"token punctuation\">.</span>imageUrl<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>isEmpty<span class=\"token punctuation\">)</span>\n          <span class=\"token function\">Container</span><span class=\"token punctuation\">(</span>\n            <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">color</span><span class=\"token operator\">:</span> Colors<span class=\"token punctuation\">.</span>grey<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">child</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>\n              <span class=\"token literal-property property\">child</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'No Image'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">else</span>\n          Image<span class=\"token punctuation\">.</span><span class=\"token function\">network</span><span class=\"token punctuation\">(</span>\n            widget<span class=\"token punctuation\">.</span>imageUrl<span class=\"token operator\">!</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> <span class=\"token number\">150</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">fit</span><span class=\"token operator\">:</span> BoxFit<span class=\"token punctuation\">.</span>cover<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token function\">ElevatedButton</span><span class=\"token punctuation\">(</span>\n          <span class=\"token literal-property property\">onPressed</span><span class=\"token operator\">:</span> _isLoading <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> _upload<span class=\"token punctuation\">,</span>\n          <span class=\"token literal-property property\">child</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Upload'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  Future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">_upload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n    final picker <span class=\"token operator\">=</span> <span class=\"token function\">ImagePicker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    final imageFile <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> picker<span class=\"token punctuation\">.</span><span class=\"token function\">pickImage</span><span class=\"token punctuation\">(</span>\n      <span class=\"token literal-property property\">source</span><span class=\"token operator\">:</span> ImageSource<span class=\"token punctuation\">.</span>gallery<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">maxWidth</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">maxHeight</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>imageFile <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> _isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      final bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> imageFile<span class=\"token punctuation\">.</span><span class=\"token function\">readAsBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      final fileExt <span class=\"token operator\">=</span> imageFile<span class=\"token punctuation\">.</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>last<span class=\"token punctuation\">;</span>\n      final fileName <span class=\"token operator\">=</span> <span class=\"token string\">'${DateTime.now().toIso8601String()}.$fileExt'</span><span class=\"token punctuation\">;</span>\n      final filePath <span class=\"token operator\">=</span> fileName<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>storage<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'avatars'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">uploadBinary</span><span class=\"token punctuation\">(</span>\n            filePath<span class=\"token punctuation\">,</span>\n            bytes<span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">fileOptions</span><span class=\"token operator\">:</span> <span class=\"token function\">FileOptions</span><span class=\"token punctuation\">(</span>contentType<span class=\"token operator\">:</span> imageFile<span class=\"token punctuation\">.</span>mimeType<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      final imageUrlResponse <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>storage\n          <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'avatars'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">createSignedUrl</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">60</span> <span class=\"token operator\">*</span> <span class=\"token number\">24</span> <span class=\"token operator\">*</span> <span class=\"token number\">365</span> <span class=\"token operator\">*</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      widget<span class=\"token punctuation\">.</span><span class=\"token function\">onUpload</span><span class=\"token punctuation\">(</span>imageUrlResponse<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> on StorageException <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ScaffoldMessenger<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">showSnackBar</span><span class=\"token punctuation\">(</span>\n          <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n            <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ScaffoldMessenger<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">showSnackBar</span><span class=\"token punctuation\">(</span>\n          <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n            <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error occurred'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> _isLoading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"第十三步添加新的-widget\">第十三步：添加新的 widget <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e5%8d%81%e4%b8%89%e6%ad%a5%e6%b7%bb%e5%8a%a0%e6%96%b0%e7%9a%84-widget\"><i class=\"material-icons align-middle\">link</i></a></h2><p>然后我们就可以在账户页面中添加该 widget，并添加一些逻辑，以便在用户上传新头像时更新 avatar_url。\nlib/pages/account_page.dart</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"3c0e59d\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token string\">'package:flutter/material.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_flutter/supabase_flutter.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_quickstart/components/avatar.dart'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token string\">'package:supabase_quickstart/main.dart'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">AccountPage</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">StatefulWidget</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function\">AccountPage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span>key<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  @override\n  _AccountPageState <span class=\"token function\">createState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">_AccountPageState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">_AccountPageState</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">State</span><span class=\"token operator\">&lt;</span>AccountPage<span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  final _usernameController <span class=\"token operator\">=</span> <span class=\"token function\">TextEditingController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  final _websiteController <span class=\"token operator\">=</span> <span class=\"token function\">TextEditingController</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  String<span class=\"token operator\">?</span> _avatarUrl<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">var</span> _loading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/// Called once a user id is received within `onAuthenticated()`</span>\n  Future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">_getProfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      _loading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      final userId <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>currentSession<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n      final data <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase\n          <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'profiles'</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> userId<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">single</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      _usernameController<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> String<span class=\"token punctuation\">;</span>\n      _websiteController<span class=\"token punctuation\">.</span>text <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'website'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> String<span class=\"token punctuation\">;</span>\n      _avatarUrl <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token string\">'avatar_url'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">??</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> String<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> on PostgrestException <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error occurred'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          _loading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/// Called when user taps `Update` button</span>\n  Future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">_updateProfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      _loading <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    final userName <span class=\"token operator\">=</span> _usernameController<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    final website <span class=\"token operator\">=</span> _websiteController<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    final user <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>currentUser<span class=\"token punctuation\">;</span>\n    final updates <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">'id'</span><span class=\"token operator\">:</span> user<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'username'</span><span class=\"token operator\">:</span> userName<span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'website'</span><span class=\"token operator\">:</span> website<span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">'updated_at'</span><span class=\"token operator\">:</span> DateTime<span class=\"token punctuation\">.</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toIso8601String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'profiles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">upsert</span><span class=\"token punctuation\">(</span>updates<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n          <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Successfully updated profile!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> on PostgrestException <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error occurred'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          _loading <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  Future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">_signOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">signOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> on AuthException <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error occurred'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        Navigator<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pushReplacementNamed</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/login'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">/// Called when image has been uploaded to Supabase storage from within Avatar widget</span>\n  Future<span class=\"token operator\">&lt;</span><span class=\"token keyword\">void</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">_onUpload</span><span class=\"token punctuation\">(</span>String imageUrl<span class=\"token punctuation\">)</span> async <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      final userId <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>currentUser<span class=\"token operator\">!</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'profiles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">upsert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">'id'</span><span class=\"token operator\">:</span> userId<span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">'avatar_url'</span><span class=\"token operator\">:</span> imageUrl<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n          <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Updated your profile image!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> on PostgrestException <span class=\"token function\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">SnackBar</span><span class=\"token punctuation\">(</span>\n        <span class=\"token literal-property property\">content</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Unexpected error occurred'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">backgroundColor</span><span class=\"token operator\">:</span> Theme<span class=\"token punctuation\">.</span><span class=\"token function\">of</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>colorScheme<span class=\"token punctuation\">.</span>error<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      _avatarUrl <span class=\"token operator\">=</span> imageUrl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @override\n  <span class=\"token keyword\">void</span> <span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">initState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">_getProfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @override\n  <span class=\"token keyword\">void</span> <span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    _usernameController<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    _websiteController<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  @override\n  Widget <span class=\"token function\">build</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">BuildContext context</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">Scaffold</span><span class=\"token punctuation\">(</span>\n      <span class=\"token literal-property property\">appBar</span><span class=\"token operator\">:</span> <span class=\"token function\">AppBar</span><span class=\"token punctuation\">(</span>title<span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Profile'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> _loading\n          <span class=\"token operator\">?</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Center</span><span class=\"token punctuation\">(</span>child<span class=\"token operator\">:</span> <span class=\"token function\">CircularProgressIndicator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token operator\">:</span> <span class=\"token function\">ListView</span><span class=\"token punctuation\">(</span>\n              <span class=\"token literal-property property\">padding</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> EdgeInsets<span class=\"token punctuation\">.</span><span class=\"token function\">symmetric</span><span class=\"token punctuation\">(</span>vertical<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">horizontal</span><span class=\"token operator\">:</span> <span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token literal-property property\">children</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n                <span class=\"token function\">Avatar</span><span class=\"token punctuation\">(</span>\n                  <span class=\"token literal-property property\">imageUrl</span><span class=\"token operator\">:</span> _avatarUrl<span class=\"token punctuation\">,</span>\n                  <span class=\"token literal-property property\">onUpload</span><span class=\"token operator\">:</span> _onUpload<span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">const</span> <span class=\"token function\">SizedBox</span><span class=\"token punctuation\">(</span>height<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">TextFormField</span><span class=\"token punctuation\">(</span>\n                  <span class=\"token literal-property property\">controller</span><span class=\"token operator\">:</span> _usernameController<span class=\"token punctuation\">,</span>\n                  <span class=\"token literal-property property\">decoration</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">InputDecoration</span><span class=\"token punctuation\">(</span>labelText<span class=\"token operator\">:</span> <span class=\"token string\">'User Name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">const</span> <span class=\"token function\">SizedBox</span><span class=\"token punctuation\">(</span>height<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">TextFormField</span><span class=\"token punctuation\">(</span>\n                  <span class=\"token literal-property property\">controller</span><span class=\"token operator\">:</span> _websiteController<span class=\"token punctuation\">,</span>\n                  <span class=\"token literal-property property\">decoration</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">InputDecoration</span><span class=\"token punctuation\">(</span>labelText<span class=\"token operator\">:</span> <span class=\"token string\">'Website'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">const</span> <span class=\"token function\">SizedBox</span><span class=\"token punctuation\">(</span>height<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">ElevatedButton</span><span class=\"token punctuation\">(</span>\n                  <span class=\"token literal-property property\">onPressed</span><span class=\"token operator\">:</span> _loading <span class=\"token operator\">?</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">:</span> _updateProfile<span class=\"token punctuation\">,</span>\n                  <span class=\"token literal-property property\">child</span><span class=\"token operator\">:</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span>_loading <span class=\"token operator\">?</span> <span class=\"token string\">'Saving...'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Update'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token keyword\">const</span> <span class=\"token function\">SizedBox</span><span class=\"token punctuation\">(</span>height<span class=\"token operator\">:</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                <span class=\"token function\">TextButton</span><span class=\"token punctuation\">(</span>onPressed<span class=\"token operator\">:</span> _signOut<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">child</span><span class=\"token operator\">:</span> <span class=\"token keyword\">const</span> <span class=\"token function\">Text</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Sign Out'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"第十四步存储管理\">第十四步：存储管理 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ac%ac%e5%8d%81%e5%9b%9b%e6%ad%a5%e5%ad%98%e5%82%a8%e7%ae%a1%e7%90%86\"><i class=\"material-icons align-middle\">link</i></a></h2><p>如果上传额外的个人资料照片，它们会累积到\n在头像桶中，因为它们的名称是随机的，只有最新的才会被从 public.profiles\npublic.profiles。</p>\n<p>要自动删除过时的存储对象，可扩展数据库触发器。请注意，仅从\n对象表中删除对象是不够的，因为这样做会使实际存储对象成为orphaned并泄漏到\nS3 后端中的实际存储对象。相反，应通过 http 扩展调用 Postgres 中的存储 API。</p>\n<p>在仪表板中为扩展模式启用 http 扩展。\n然后，在 SQL 编辑器中定义以下 SQL 函数，以便通过 API 删除\n存储对象：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"6562e77\" tabindex=\"0\"><code class=\"language-js\">create or replace <span class=\"token keyword\">function</span> <span class=\"token function\">delete_storage_object</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">bucket text<span class=\"token punctuation\">,</span> object text<span class=\"token punctuation\">,</span> out status int<span class=\"token punctuation\">,</span> out content text</span><span class=\"token punctuation\">)</span>\nreturns record\nlanguage <span class=\"token string\">'plpgsql'</span>\nsecurity definer\n<span class=\"token keyword\">as</span> $$\ndeclare\n  project_url text <span class=\"token operator\">:</span><span class=\"token operator\">=</span> <span class=\"token string\">'&lt;YOURPROJECTURL&gt;'</span><span class=\"token punctuation\">;</span>\n  service_role_key text <span class=\"token operator\">:</span><span class=\"token operator\">=</span> <span class=\"token string\">'&lt;YOURSERVICEROLEKEY&gt;'</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">--</span>  full access needed\n  url text <span class=\"token operator\">:</span><span class=\"token operator\">=</span> project_url<span class=\"token operator\">||</span><span class=\"token string\">'/storage/v1/object/'</span><span class=\"token operator\">||</span>bucket<span class=\"token operator\">||</span><span class=\"token string\">'/'</span><span class=\"token operator\">||</span>object<span class=\"token punctuation\">;</span>\nbegin\n  select\n      into status<span class=\"token punctuation\">,</span> content\n           result<span class=\"token punctuation\">.</span>status<span class=\"token operator\">:</span><span class=\"token operator\">:</span>int<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>content<span class=\"token operator\">:</span><span class=\"token operator\">:</span>text\n      <span class=\"token constant\">FROM</span> extensions<span class=\"token punctuation\">.</span><span class=\"token function\">http</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'DELETE'</span><span class=\"token punctuation\">,</span>\n    url<span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">ARRAY</span><span class=\"token punctuation\">[</span>extensions<span class=\"token punctuation\">.</span><span class=\"token function\">http_header</span><span class=\"token punctuation\">(</span><span class=\"token string\">'authorization'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'Bearer '</span><span class=\"token operator\">||</span>service_role_key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span>\n    <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token operator\">:</span>extensions<span class=\"token punctuation\">.</span>http_request<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> result<span class=\"token punctuation\">;</span>\nend<span class=\"token punctuation\">;</span>\n$$<span class=\"token punctuation\">;</span>\n\ncreate or replace <span class=\"token keyword\">function</span> <span class=\"token function\">delete_avatar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">avatar_url text<span class=\"token punctuation\">,</span> out status int<span class=\"token punctuation\">,</span> out content text</span><span class=\"token punctuation\">)</span>\nreturns record\nlanguage <span class=\"token string\">'plpgsql'</span>\nsecurity definer\n<span class=\"token keyword\">as</span> $$\nbegin\n  select\n      into status<span class=\"token punctuation\">,</span> content\n           result<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>content\n      from <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span><span class=\"token function\">delete_storage_object</span><span class=\"token punctuation\">(</span><span class=\"token string\">'avatars'</span><span class=\"token punctuation\">,</span> avatar_url<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> result<span class=\"token punctuation\">;</span>\nend<span class=\"token punctuation\">;</span>\n$$<span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>接下来，添加一个触发器，在更新或删除个人资料时删除任何过时的头像：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"7dbc3dd\" tabindex=\"0\"><code class=\"language-js\">create or replace <span class=\"token keyword\">function</span> <span class=\"token function\">delete_old_avatar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nreturns trigger\nlanguage <span class=\"token string\">'plpgsql'</span>\nsecurity definer\n<span class=\"token keyword\">as</span> $$\ndeclare\n  status int<span class=\"token punctuation\">;</span>\n  content text<span class=\"token punctuation\">;</span>\n  avatar_name text<span class=\"token punctuation\">;</span>\nbegin\n  <span class=\"token keyword\">if</span> <span class=\"token function\">coalesce</span><span class=\"token punctuation\">(</span>old<span class=\"token punctuation\">.</span>avatar_url<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span> <span class=\"token string\">''</span>\n      <span class=\"token function\">and</span> <span class=\"token punctuation\">(</span>tg_op <span class=\"token operator\">=</span> <span class=\"token string\">'DELETE'</span> <span class=\"token function\">or</span> <span class=\"token punctuation\">(</span>old<span class=\"token punctuation\">.</span>avatar_url <span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">coalesce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">.</span>avatar_url<span class=\"token punctuation\">,</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> then\n    <span class=\"token operator\">--</span> extract avatar name\n    <span class=\"token literal-property property\">avatar_name</span> <span class=\"token operator\">:</span><span class=\"token operator\">=</span> old<span class=\"token punctuation\">.</span>avatar_url<span class=\"token punctuation\">;</span>\n    select\n      into status<span class=\"token punctuation\">,</span> content\n      result<span class=\"token punctuation\">.</span>status<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>content\n      from <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span><span class=\"token function\">delete_avatar</span><span class=\"token punctuation\">(</span>avatar_name<span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> status <span class=\"token operator\">&lt;</span><span class=\"token operator\">&gt;</span> <span class=\"token number\">200</span> then\n      raise warning <span class=\"token string\">'Could not delete avatar: % %'</span><span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">;</span>\n    end <span class=\"token keyword\">if</span><span class=\"token punctuation\">;</span>\n  end <span class=\"token keyword\">if</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> tg_op <span class=\"token operator\">=</span> <span class=\"token string\">'DELETE'</span> then\n    <span class=\"token keyword\">return</span> old<span class=\"token punctuation\">;</span>\n  end <span class=\"token keyword\">if</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span><span class=\"token punctuation\">;</span>\nend<span class=\"token punctuation\">;</span>\n$$<span class=\"token punctuation\">;</span>\n\ncreate trigger before_profile_changes\n  before update <span class=\"token keyword\">of</span> avatar_url or <span class=\"token keyword\">delete</span> on <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span>profiles\n  <span class=\"token keyword\">for</span> each row execute <span class=\"token keyword\">function</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span><span class=\"token function\">delete_old_avatar</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>最后，在删除用户之前删除 public.profile 行。\n如果省略了这一步，那么在删除用户时就不能删除用户。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"6aeb381\" tabindex=\"0\"><code class=\"language-js\">create or replace <span class=\"token keyword\">function</span> <span class=\"token function\">delete_old_profile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nreturns trigger\nlanguage <span class=\"token string\">'plpgsql'</span>\nsecurity definer\n<span class=\"token keyword\">as</span> $$\nbegin\n  <span class=\"token keyword\">delete</span> from <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span>profiles where id <span class=\"token operator\">=</span> old<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> old<span class=\"token punctuation\">;</span>\nend<span class=\"token punctuation\">;</span>\n$$<span class=\"token punctuation\">;</span>\n\ncreate trigger before_delete_user\n  before <span class=\"token keyword\">delete</span> on auth<span class=\"token punctuation\">.</span>users\n  <span class=\"token keyword\">for</span> each row execute <span class=\"token keyword\">function</span> <span class=\"token keyword\">public</span><span class=\"token punctuation\">.</span><span class=\"token function\">delete_old_profile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>恭喜您，您已经使用 Flutter 和 MemFire Cloud 构建了一个功能齐全的用户管理应用程序！</p>\n</div>\n</div>\n<div><hr class=\"doc-hr\"/>\n<div class=\"d-print-none\" id=\"doc-nav\">\n<div class=\"row flex-xl-nowrap\">\n<div class=\"col-sm-6 pt-2 doc-next\">\n<a href=\"/docs/app/quickstart/with-react/\">\n<div class=\"card h-100 my-1\">\n<div class=\"card-body py-2\">\n<p class=\"card-title fs-5 fw-semibold lh-base mb-0\"><i class=\"material-icons align-middle\">navigate_before</i> 快速入门: React</p>\n</div>\n</div>\n</a>\n</div>\n<div class=\"col-sm-6 pt-2 doc-prev\">\n<a class=\"ms-auto\" href=\"/docs/app/quickstart/with-nextjs/\">\n<div class=\"card h-100 my-1 text-end\">\n<div class=\"card-body py-2\">\n<p class=\"card-title fs-5 fw-semibold lh-base mb-0\">快速入门: Next.js <i class=\"material-icons align-middle\">navigate_next</i></p>\n</div>\n</div>\n</a>\n</div>\n</div>\n</div></div>\n</div>\n</div>\n</div>\n</div>\n\n</main>",
  "markdown": "[MemFireDB备份 6](/)\n\nmenu\n\n[官网](https://memfiredb.com/)\n[论坛](https://community.memfiredb.com/)\n[登录](https://cloud.memfiredb.com/auth/login)\n\nEnable dark mode\n\nEnable light mode\n\n本页\n\n第一步：在 MemFire Cloud 仪表板中\n\n# 快速入门: Flutter\n\n## 第一步：在 MemFire Cloud 仪表板中[创建](https://cloud.memfiredb.com/project)一个新应用。 [*link*](#%e7%ac%ac%e4%b8%80%e6%ad%a5%e5%9c%a8-memfire-cloud-%e4%bb%aa%e8%a1%a8%e6%9d%bf%e4%b8%ad%e5%88%9b%e5%bb%bahttpscloudmemfiredbcomproject%e4%b8%80%e4%b8%aa%e6%96%b0%e5%ba%94%e7%94%a8)\n\n应用准备就绪后，进入应用，在左侧菜单->表编辑器选择 SQL 编辑器在 MemFire Cloud 数据库中创建一个表。使用以下 SQL 并自行运行。\n\ninfo\n\n在本地工作时，可以运行以下命令创建新的迁移文件：\n\n```\nsupabase migration new user_management_starter\n```\n\n```\n-- Create a table for public profiles\ncreate table profiles (\n  id uuid references auth.users not null primary key,\n  updated_at timestamp with time zone,\n  username text unique,\n  full_name text,\n  avatar_url text,\n  website text,\n\n  constraint username_length check (char_length(username) >= 3)\n);\n-- Set up Row Level Security (RLS)\n-- See https://supabase.com/docs/app/development_guide/auth/row-level-security for more details.\nalter table profiles\n  enable row level security;\n\ncreate policy \"Public profiles are viewable by everyone.\" on profiles\n  for select using (true);\n\ncreate policy \"Users can insert their own profile.\" on profiles\n  for insert with check (auth.uid() = id);\n\ncreate policy \"Users can update own profile.\" on profiles\n  for update using (auth.uid() = id);\n\n-- This trigger automatically creates a profile entry when a new user signs up via Supabase Auth.\n-- See https://supabase.com/docs/app/development_guide/auth/managing-user-data#using-triggers for more details.\ncreate function public.handle_new_user()\nreturns trigger as $$\nbegin\n  insert into public.profiles (id, full_name, avatar_url)\n  values (new.id, new.raw_user_meta_data->>'full_name', new.raw_user_meta_data->>'avatar_url');\n  return new;\nend;\n$$ language plpgsql security definer;\ncreate trigger on_auth_user_created\n  after insert on auth.users\n  for each row execute procedure public.handle_new_user();\n\n-- Set up Storage!\ninsert into storage.buckets (id, name)\n  values ('avatars', 'avatars');\n\n-- Set up access controls for storage.\n-- See https://supabase.com/docs/app/development_guide/storage/security/access-control#policy-examples for more details.\ncreate policy \"Avatar images are publicly accessible.\" on storage.objects\n  for select using (bucket_id = 'avatars');\n\ncreate policy \"Anyone can upload an avatar.\" on storage.objects\n  for insert with check (bucket_id = 'avatars');\n\ncreate policy \"Anyone can update their own avatar.\" on storage.objects\n  for update using (auth.uid() = owner) with check (bucket_id = 'avatars');\n```\n\n## 第二步：获取 API 密钥 [*link*](#%e7%ac%ac%e4%ba%8c%e6%ad%a5%e8%8e%b7%e5%8f%96-api-%e5%af%86%e9%92%a5)\n\n现在您已经创建了一些数据库表，可以使用自动生成的 API 插入数据了。\n\n我们只需从 API 设置中获取项目 URL 和匿名密钥。\n\n1、转到控制面板中的 API 设置页面。\n2、在此页面上找到项目 URL、anon 和 service\\_role 密钥。\n\n## 第三步：创建 Flutter 应用 [*link*](#%e7%ac%ac%e4%b8%89%e6%ad%a5%e5%88%9b%e5%bb%ba-flutter-%e5%ba%94%e7%94%a8)\n\n我们可以使用 flutter create 来初始化\n一个名为 supabase\\_quickstart 的应用程序\n\n```\nflutter create supabase_quickstart\n```\n\n## 第四步：安装 Supabase 客户端库 [*link*](#%e7%ac%ac%e5%9b%9b%e6%ad%a5%e5%ae%89%e8%a3%85-supabase-%e5%ae%a2%e6%88%b7%e7%ab%af%e5%ba%93)\n\n最快的入门方法是使用 supabase\\_flutter 客户端库，它提供了一些简便的API，用于在 Flutter 应用程序中使用 Supabase。\n在Flutter应用程序中打开pubspec.yaml文件，并将supabase\\_flutter添加为依赖项。\n\n```\nsupabase_flutter: ^2.0.0\n```\n\n运行 flutter pub get 安装依赖项。\n\n## 第五步：设置深层链接 [*link*](#%e7%ac%ac%e4%ba%94%e6%ad%a5%e8%ae%be%e7%bd%ae%e6%b7%b1%e5%b1%82%e9%93%be%e6%8e%a5)\n\n既然我们已经安装了依赖项，那就来设置深层链接吧。\n当用户点击魔法链接登录时，需要设置深层链接才能将用户带回应用程序。\n我们只需对 Flutter 应用程序稍作调整，就能设置深度链接。\n\n我们必须使用 io.supabase.flutterquickstart 作为方案。在本例中，我们将使用 login-callback 作为深度链接的主机，但您也可以根据自己的喜好进行更改。\n\n首先，在控制面板中添加 io.supabase.flutterquickstart://login-callback/ 作为新的重定向 URL。\n\n以上就是 MemFire Cloud 的设置，其余的都是特定平台的设置：\n\n编辑 ios/Runner/Info.plist 文件。\n\n添加 CFBundleURLTypes 以启用深度链接：\n\n```\n<!-- ... other tags -->\n<plist>\n<dict>\n<!-- ... other tags -->\n\n<!-- Add this array for Deep Links -->\n<key>CFBundleURLTypes</key>\n<array>\n  <dict>\n    <key>CFBundleTypeRole</key>\n    <string>Editor</string>\n    <key>CFBundleURLSchemes</key>\n    <array>\n      <string>io.supabase.flutterquickstart</string>\n    </array>\n  </dict>\n</array>\n<!-- ... other tags -->\n</dict>\n</plist>\n```\n\n编辑 android/app/src/main/AndroidManifest.xml 文件。\n\n添加意图过滤器以启用深度链接：\n\n```\n<manifest ...>\n<!-- ... other tags -->\n<application ...>\n  <activity ...>\n    <!-- ... other tags -->\n\n    <!-- Add this intent-filter for Deep Links -->\n    <intent-filter>\n      <action android:name=\"android.intent.action.VIEW\" />\n      <category android:name=\"android.intent.category.DEFAULT\" />\n      <category android:name=\"android.intent.category.BROWSABLE\" />\n      <!-- Accepts URIs that begin with YOUR_SCHEME://YOUR_HOST -->\n      <data\n        android:scheme=\"io.supabase.flutterquickstart\"\n        android:host=\"login-callback\" />\n    </intent-filter>\n\n  </activity>\n</application>\n</manifest>\n```\n\n主函数\n既然我们已经准备好了深层链接，那就用之前复制的 API 凭据在主函数中初始化 Supabase 客户端吧。\n这些变量将暴露在应用程序中，这完全没有问题，因为我们已经在数据库中启用了\n我们的数据库启用了行级安全。\n\n```\nFuture<void> main() async {\nawait Supabase.initialize(\n  url: 'YOUR_SUPABASE_URL',\n  anonKey: 'YOUR_SUPABASE_ANON_KEY',\n);\nrunApp(MyApp());\n}\n```\n\n## 第六步：设置闪屏 [*link*](#%e7%ac%ac%e5%85%ad%e6%ad%a5%e8%ae%be%e7%bd%ae%e9%97%aa%e5%b1%8f)\n\n让我们创建一个闪屏，在用户打开应用程序后立即显示。\n该屏幕会检索当前会话并相应地重定向用户。\nlib/pages/splash\\_page.dart\n\n```\nimport 'package:flutter/material.dart';\nimport 'package:supabase_quickstart/main.dart';\n\nclass SplashPage extends StatefulWidget {\nconst SplashPage({super.key});\n\n@override\n_SplashPageState createState() => _SplashPageState();\n}\n\nclass _SplashPageState extends State<SplashPage> {\n@override\nvoid initState() {\n  super.initState();\n  _redirect();\n}\n\nFuture<void> _redirect() async {\n  await Future.delayed(Duration.zero);\n  if (!mounted) {\n    return;\n  }\n\n  final session = supabase.auth.currentSession;\n  if (session != null) {\n    Navigator.of(context).pushReplacementNamed('/account');\n  } else {\n    Navigator.of(context).pushReplacementNamed('/login');\n  }\n}\n\n@override\nWidget build(BuildContext context) {\n  return const Scaffold(\n    body: Center(child: CircularProgressIndicator()),\n  );\n}\n}\n```\n\n## 第七步：设置登录页面 [*link*](#%e7%ac%ac%e4%b8%83%e6%ad%a5%e8%ae%be%e7%bd%ae%e7%99%bb%e5%bd%95%e9%a1%b5%e9%9d%a2)\n\n让我们创建一个 Flutter 部件来管理登录和注册。\n我们将使用 Magic Links，这样用户就可以使用电子邮件登录，而无需使用密码。\n请注意，该页面使用 onAuthStateChange 设置了用户认证状态的监听器。\n当用户点击魔法链接回到应用程序时，将触发一个新事件，该页面可以捕捉到该事件并相应地重定向用户。\nlib/pages/login\\_page.dart\n\n```\nimport 'dart:async';\n\nimport 'package:flutter/foundation.dart';\nimport 'package:flutter/material.dart';\nimport 'package:supabase_flutter/supabase_flutter.dart';\nimport 'package:supabase_quickstart/main.dart';\n\nclass LoginPage extends StatefulWidget {\n  const LoginPage({super.key});\n\n  @override\n  _LoginPageState createState() => _LoginPageState();\n}\n\nclass _LoginPageState extends State<LoginPage> {\n  bool _isLoading = false;\n  bool _redirecting = false;\n  late final TextEditingController _emailController = TextEditingController();\n  late final StreamSubscription<AuthState> _authStateSubscription;\n\n  Future<void> _signIn() async {\n    try {\n      setState(() {\n        _isLoading = true;\n      });\n      await supabase.auth.signInWithOtp(\n        email: _emailController.text.trim(),\n        emailRedirectTo:\n            kIsWeb ? null : 'io.supabase.flutterquickstart://login-callback/',\n      );\n      if (mounted) {\n        ScaffoldMessenger.of(context).showSnackBar(\n          const SnackBar(content: Text('Check your email for a login link!')),\n        );\n        _emailController.clear();\n      }\n    } on AuthException catch (error) {\n      SnackBar(\n        content: Text(error.message),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } catch (error) {\n      SnackBar(\n        content: const Text('Unexpected error occurred'),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } finally {\n      if (mounted) {\n        setState(() {\n          _isLoading = false;\n        });\n      }\n    }\n  }\n\n  @override\n  void initState() {\n    _authStateSubscription = supabase.auth.onAuthStateChange.listen((data) {\n      if (_redirecting) return;\n      final session = data.session;\n      if (session != null) {\n        _redirecting = true;\n        Navigator.of(context).pushReplacementNamed('/account');\n      }\n    });\n    super.initState();\n  }\n\n  @override\n  void dispose() {\n    _emailController.dispose();\n    _authStateSubscription.cancel();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: const Text('Sign In')),\n      body: ListView(\n        padding: const EdgeInsets.symmetric(vertical: 18, horizontal: 12),\n        children: [\n          const Text('Sign in via the magic link with your email below'),\n          const SizedBox(height: 18),\n          TextFormField(\n            controller: _emailController,\n            decoration: const InputDecoration(labelText: 'Email'),\n          ),\n          const SizedBox(height: 18),\n          ElevatedButton(\n            onPressed: _isLoading ? null : _signIn,\n            child: Text(_isLoading ? 'Loading' : 'Send Magic Link'),\n          ),\n        ],\n      ),\n    );\n  }\n}\n```\n\n## 第八步：设置账户页面 [*link*](#%e7%ac%ac%e5%85%ab%e6%ad%a5%e8%ae%be%e7%bd%ae%e8%b4%a6%e6%88%b7%e9%a1%b5%e9%9d%a2)\n\n用户登录后，我们可以让他们编辑个人资料详情并管理自己的账户。\n让我们为此创建一个名为 account\\_page.dart 的新部件。\nlib/pages/account\\_page.dart\n\n```\nimport 'package:flutter/material.dart';\nimport 'package:supabase_flutter/supabase_flutter.dart';\nimport 'package:supabase_quickstart/main.dart';\n\nclass AccountPage extends StatefulWidget {\n  const AccountPage({super.key});\n\n  @override\n  _AccountPageState createState() => _AccountPageState();\n}\n\nclass _AccountPageState extends State<AccountPage> {\n  final _usernameController = TextEditingController();\n  final _websiteController = TextEditingController();\n\n  var _loading = true;\n\n  /// Called once a user id is received within `onAuthenticated()`\n  Future<void> _getProfile() async {\n    setState(() {\n      _loading = true;\n    });\n\n    try {\n      final userId = supabase.auth.currentUser!.id;\n      final data =\n          await supabase.from('profiles').select().eq('id', userId).single();\n      _usernameController.text = (data['username'] ?? '') as String;\n      _websiteController.text = (data['website'] ?? '') as String;\n    } on PostgrestException catch (error) {\n      SnackBar(\n        content: Text(error.message),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } catch (error) {\n      SnackBar(\n        content: const Text('Unexpected error occurred'),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } finally {\n      if (mounted) {\n        setState(() {\n          _loading = false;\n        });\n      }\n    }\n  }\n\n  /// Called when user taps `Update` button\n  Future<void> _updateProfile() async {\n    setState(() {\n      _loading = true;\n    });\n    final userName = _usernameController.text.trim();\n    final website = _websiteController.text.trim();\n    final user = supabase.auth.currentUser;\n    final updates = {\n      'id': user!.id,\n      'username': userName,\n      'website': website,\n      'updated_at': DateTime.now().toIso8601String(),\n    };\n    try {\n      await supabase.from('profiles').upsert(updates);\n      if (mounted) {\n        const SnackBar(\n          content: Text('Successfully updated profile!'),\n        );\n      }\n    } on PostgrestException catch (error) {\n      SnackBar(\n        content: Text(error.message),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } catch (error) {\n      SnackBar(\n        content: const Text('Unexpected error occurred'),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } finally {\n      if (mounted) {\n        setState(() {\n          _loading = false;\n        });\n      }\n    }\n  }\n\n  Future<void> _signOut() async {\n    try {\n      await supabase.auth.signOut();\n    } on AuthException catch (error) {\n      SnackBar(\n        content: Text(error.message),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } catch (error) {\n      SnackBar(\n        content: const Text('Unexpected error occurred'),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } finally {\n      if (mounted) {\n        Navigator.of(context).pushReplacementNamed('/login');\n      }\n    }\n  }\n\n  @override\n  void initState() {\n    super.initState();\n    _getProfile();\n  }\n\n  @override\n  void dispose() {\n    _usernameController.dispose();\n    _websiteController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: const Text('Profile')),\n      body: _loading\n          ? const Center(child: CircularProgressIndicator())\n          : ListView(\n              padding: const EdgeInsets.symmetric(vertical: 18, horizontal: 12),\n              children: [\n                TextFormField(\n                  controller: _usernameController,\n                  decoration: const InputDecoration(labelText: 'User Name'),\n                ),\n                const SizedBox(height: 18),\n                TextFormField(\n                  controller: _websiteController,\n                  decoration: const InputDecoration(labelText: 'Website'),\n                ),\n                const SizedBox(height: 18),\n                ElevatedButton(\n                  onPressed: _loading ? null : _updateProfile,\n                  child: Text(_loading ? 'Saving...' : 'Update'),\n                ),\n                const SizedBox(height: 18),\n                TextButton(onPressed: _signOut, child: const Text('Sign Out')),\n              ],\n            ),\n    );\n  }\n}\n```\n\n## 第九步：启动 [*link*](#%e7%ac%ac%e4%b9%9d%e6%ad%a5%e5%90%af%e5%8a%a8)\n\n现在所有组件都已就位，让我们更新 lib/main.dart：\n\n```\nimport 'package:flutter/material.dart';\nimport 'package:supabase_flutter/supabase_flutter.dart';\nimport 'package:supabase_quickstart/pages/account_page.dart';\nimport 'package:supabase_quickstart/pages/login_page.dart';\nimport 'package:supabase_quickstart/pages/splash_page.dart';\n\nFuture<void> main() async {\n  await Supabase.initialize(\n    url: 'YOUR_SUPABASE_URL',\n    anonKey: 'YOUR_SUPABASE_ANON_KEY',\n  );\n  runApp(MyApp());\n}\n\nfinal supabase = Supabase.instance.client;\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      title: 'Supabase Flutter',\n      theme: ThemeData.dark().copyWith(\n        primaryColor: Colors.green,\n        textButtonTheme: TextButtonThemeData(\n          style: TextButton.styleFrom(\n            foregroundColor: Colors.green,\n          ),\n        ),\n        elevatedButtonTheme: ElevatedButtonThemeData(\n          style: ElevatedButton.styleFrom(\n            foregroundColor: Colors.white,\n            backgroundColor: Colors.green,\n          ),\n        ),\n      ),\n      initialRoute: '/',\n      routes: <String, WidgetBuilder>{\n        '/': (_) => const SplashPage(),\n        '/login': (_) => const LoginPage(),\n        '/account': (_) => const AccountPage(),\n      },\n    );\n  }\n}\n```\n\n完成后，在终端窗口中运行，即可在 Android 或 iOS 上启动：\n\n```\nflutter run\n```\n\n如果是web版，运行以下命令在 localhost:3000 上启动它\n\n```\nflutter run -d web-server --web-hostname localhost --web-port 3000\n```\n\n然后打开浏览器，登录 localhost:3000，就能看到已完成的应用程序了。\n\n## 第十步：简介照片 [*link*](#%e7%ac%ac%e5%8d%81%e6%ad%a5%e7%ae%80%e4%bb%8b%e7%85%a7%e7%89%87)\n\n每个 MemFire Cloud 项目都配置了用于管理大文件（如\n照片和视频。\n\n### 确保我们有一个公共存储桶 [*link*](#%e7%a1%ae%e4%bf%9d%e6%88%91%e4%bb%ac%e6%9c%89%e4%b8%80%e4%b8%aa%e5%85%ac%e5%85%b1%e5%ad%98%e5%82%a8%e6%a1%b6)\n\n我们将把图片存储为可公开共享的图片。\n确保你的头像邮筒设置为公开，如果不是，请点击悬停在存储桶名称上时出现的点菜单更改公开。\n如果您的存储桶已设置为公开，您应该会在邮筒名称旁边看到一个橙色的 “公开 “徽章\n\n## 第十一步：在账户页面添加图片上传功能 [*link*](#%e7%ac%ac%e5%8d%81%e4%b8%80%e6%ad%a5%e5%9c%a8%e8%b4%a6%e6%88%b7%e9%a1%b5%e9%9d%a2%e6%b7%bb%e5%8a%a0%e5%9b%be%e7%89%87%e4%b8%8a%e4%bc%a0%e5%8a%9f%e8%83%bd)\n\n我们将使用 image\\_picker 插件从设备中选择图片。\n\n在 pubspec.yaml 文件中添加以下一行以安装 image\\_picker：\n\n```\nimage_picker: ^1.0.5\n```\n\n根据平台的不同，使用 image\\_picker 还需要一些额外的准备工作。\n请按照 image\\_picker 的 README.md 中的说明，了解如何针对您使用的平台进行设置。\n\n完成上述所有步骤后，就可以开始编码了。\n\n## 第十二步：创建上传小部件 [*link*](#%e7%ac%ac%e5%8d%81%e4%ba%8c%e6%ad%a5%e5%88%9b%e5%bb%ba%e4%b8%8a%e4%bc%a0%e5%b0%8f%e9%83%a8%e4%bb%b6)\n\n让我们为用户创建一个头像，这样他们就可以上传个人照片了。\n我们可以先创建一个新的组件：\n\nlib/components/avatar.dart\n\n```\nimport 'package:flutter/material.dart';\nimport 'package:image_picker/image_picker.dart';\nimport 'package:supabase_flutter/supabase_flutter.dart';\nimport 'package:supabase_quickstart/main.dart';\n\nclass Avatar extends StatefulWidget {\n  const Avatar({\n    super.key,\n    required this.imageUrl,\n    required this.onUpload,\n  });\n\n  final String? imageUrl;\n  final void Function(String) onUpload;\n\n  @override\n  _AvatarState createState() => _AvatarState();\n}\n\nclass _AvatarState extends State<Avatar> {\n  bool _isLoading = false;\n\n  @override\n  Widget build(BuildContext context) {\n    return Column(\n      children: [\n        if (widget.imageUrl == null || widget.imageUrl!.isEmpty)\n          Container(\n            width: 150,\n            height: 150,\n            color: Colors.grey,\n            child: const Center(\n              child: Text('No Image'),\n            ),\n          )\n        else\n          Image.network(\n            widget.imageUrl!,\n            width: 150,\n            height: 150,\n            fit: BoxFit.cover,\n          ),\n        ElevatedButton(\n          onPressed: _isLoading ? null : _upload,\n          child: const Text('Upload'),\n        ),\n      ],\n    );\n  }\n\n  Future<void> _upload() async {\n    final picker = ImagePicker();\n    final imageFile = await picker.pickImage(\n      source: ImageSource.gallery,\n      maxWidth: 300,\n      maxHeight: 300,\n    );\n    if (imageFile == null) {\n      return;\n    }\n    setState(() => _isLoading = true);\n\n    try {\n      final bytes = await imageFile.readAsBytes();\n      final fileExt = imageFile.path.split('.').last;\n      final fileName = '${DateTime.now().toIso8601String()}.$fileExt';\n      final filePath = fileName;\n      await supabase.storage.from('avatars').uploadBinary(\n            filePath,\n            bytes,\n            fileOptions: FileOptions(contentType: imageFile.mimeType),\n          );\n      final imageUrlResponse = await supabase.storage\n          .from('avatars')\n          .createSignedUrl(filePath, 60 * 60 * 24 * 365 * 10);\n      widget.onUpload(imageUrlResponse);\n    } on StorageException catch (error) {\n      if (mounted) {\n        ScaffoldMessenger.of(context).showSnackBar(\n          SnackBar(\n            content: Text(error.message),\n            backgroundColor: Theme.of(context).colorScheme.error,\n          ),\n        );\n      }\n    } catch (error) {\n      if (mounted) {\n        ScaffoldMessenger.of(context).showSnackBar(\n          SnackBar(\n            content: const Text('Unexpected error occurred'),\n            backgroundColor: Theme.of(context).colorScheme.error,\n          ),\n        );\n      }\n    }\n\n    setState(() => _isLoading = false);\n  }\n}\n```\n\n## 第十三步：添加新的 widget [*link*](#%e7%ac%ac%e5%8d%81%e4%b8%89%e6%ad%a5%e6%b7%bb%e5%8a%a0%e6%96%b0%e7%9a%84-widget)\n\n然后我们就可以在账户页面中添加该 widget，并添加一些逻辑，以便在用户上传新头像时更新 avatar\\_url。\nlib/pages/account\\_page.dart\n\n```\nimport 'package:flutter/material.dart';\nimport 'package:supabase_flutter/supabase_flutter.dart';\nimport 'package:supabase_quickstart/components/avatar.dart';\nimport 'package:supabase_quickstart/main.dart';\n\nclass AccountPage extends StatefulWidget {\n  const AccountPage({super.key});\n\n  @override\n  _AccountPageState createState() => _AccountPageState();\n}\n\nclass _AccountPageState extends State<AccountPage> {\n  final _usernameController = TextEditingController();\n  final _websiteController = TextEditingController();\n\n  String? _avatarUrl;\n  var _loading = true;\n\n  /// Called once a user id is received within `onAuthenticated()`\n  Future<void> _getProfile() async {\n    setState(() {\n      _loading = true;\n    });\n\n    try {\n      final userId = supabase.auth.currentSession!.user.id;\n      final data = await supabase\n          .from('profiles')\n          .select()\n          .eq('id', userId)\n          .single();\n      _usernameController.text = (data['username'] ?? '') as String;\n      _websiteController.text = (data['website'] ?? '') as String;\n      _avatarUrl = (data['avatar_url'] ?? '') as String;\n    } on PostgrestException catch (error) {\n      SnackBar(\n        content: Text(error.message),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } catch (error) {\n      SnackBar(\n        content: const Text('Unexpected error occurred'),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } finally {\n      if (mounted) {\n        setState(() {\n          _loading = false;\n        });\n      }\n    }\n  }\n\n  /// Called when user taps `Update` button\n  Future<void> _updateProfile() async {\n    setState(() {\n      _loading = true;\n    });\n    final userName = _usernameController.text.trim();\n    final website = _websiteController.text.trim();\n    final user = supabase.auth.currentUser;\n    final updates = {\n      'id': user!.id,\n      'username': userName,\n      'website': website,\n      'updated_at': DateTime.now().toIso8601String(),\n    };\n    try {\n      await supabase.from('profiles').upsert(updates);\n      if (mounted) {\n        const SnackBar(\n          content: Text('Successfully updated profile!'),\n        );\n      }\n    } on PostgrestException catch (error) {\n      SnackBar(\n        content: Text(error.message),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } catch (error) {\n      SnackBar(\n        content: const Text('Unexpected error occurred'),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } finally {\n      if (mounted) {\n        setState(() {\n          _loading = false;\n        });\n      }\n    }\n  }\n\n  Future<void> _signOut() async {\n    try {\n      await supabase.auth.signOut();\n    } on AuthException catch (error) {\n      SnackBar(\n        content: Text(error.message),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } catch (error) {\n      SnackBar(\n        content: const Text('Unexpected error occurred'),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } finally {\n      if (mounted) {\n        Navigator.of(context).pushReplacementNamed('/login');\n      }\n    }\n  }\n\n  /// Called when image has been uploaded to Supabase storage from within Avatar widget\n  Future<void> _onUpload(String imageUrl) async {\n    try {\n      final userId = supabase.auth.currentUser!.id;\n      await supabase.from('profiles').upsert({\n        'id': userId,\n        'avatar_url': imageUrl,\n      });\n      if (mounted) {\n        const SnackBar(\n          content: Text('Updated your profile image!'),\n        );\n      }\n    } on PostgrestException catch (error) {\n      SnackBar(\n        content: Text(error.message),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    } catch (error) {\n      SnackBar(\n        content: const Text('Unexpected error occurred'),\n        backgroundColor: Theme.of(context).colorScheme.error,\n      );\n    }\n    if (!mounted) {\n      return;\n    }\n\n    setState(() {\n      _avatarUrl = imageUrl;\n    });\n  }\n\n  @override\n  void initState() {\n    super.initState();\n    _getProfile();\n  }\n\n  @override\n  void dispose() {\n    _usernameController.dispose();\n    _websiteController.dispose();\n    super.dispose();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Scaffold(\n      appBar: AppBar(title: const Text('Profile')),\n      body: _loading\n          ? const Center(child: CircularProgressIndicator())\n          : ListView(\n              padding: const EdgeInsets.symmetric(vertical: 18, horizontal: 12),\n              children: [\n                Avatar(\n                  imageUrl: _avatarUrl,\n                  onUpload: _onUpload,\n                ),\n                const SizedBox(height: 18),\n                TextFormField(\n                  controller: _usernameController,\n                  decoration: const InputDecoration(labelText: 'User Name'),\n                ),\n                const SizedBox(height: 18),\n                TextFormField(\n                  controller: _websiteController,\n                  decoration: const InputDecoration(labelText: 'Website'),\n                ),\n                const SizedBox(height: 18),\n                ElevatedButton(\n                  onPressed: _loading ? null : _updateProfile,\n                  child: Text(_loading ? 'Saving...' : 'Update'),\n                ),\n                const SizedBox(height: 18),\n                TextButton(onPressed: _signOut, child: const Text('Sign Out')),\n              ],\n            ),\n    );\n  }\n}\n```\n\n## 第十四步：存储管理 [*link*](#%e7%ac%ac%e5%8d%81%e5%9b%9b%e6%ad%a5%e5%ad%98%e5%82%a8%e7%ae%a1%e7%90%86)\n\n如果上传额外的个人资料照片，它们会累积到\n在头像桶中，因为它们的名称是随机的，只有最新的才会被从 public.profiles\npublic.profiles。\n\n要自动删除过时的存储对象，可扩展数据库触发器。请注意，仅从\n对象表中删除对象是不够的，因为这样做会使实际存储对象成为orphaned并泄漏到\nS3 后端中的实际存储对象。相反，应通过 http 扩展调用 Postgres 中的存储 API。\n\n在仪表板中为扩展模式启用 http 扩展。\n然后，在 SQL 编辑器中定义以下 SQL 函数，以便通过 API 删除\n存储对象：\n\n```\ncreate or replace function delete_storage_object(bucket text, object text, out status int, out content text)\nreturns record\nlanguage 'plpgsql'\nsecurity definer\nas $$\ndeclare\n  project_url text := '<YOURPROJECTURL>';\n  service_role_key text := '<YOURSERVICEROLEKEY>'; --  full access needed\n  url text := project_url||'/storage/v1/object/'||bucket||'/'||object;\nbegin\n  select\n      into status, content\n           result.status::int, result.content::text\n      FROM extensions.http((\n    'DELETE',\n    url,\n    ARRAY[extensions.http_header('authorization','Bearer '||service_role_key)],\n    NULL,\n    NULL)::extensions.http_request) as result;\nend;\n$$;\n\ncreate or replace function delete_avatar(avatar_url text, out status int, out content text)\nreturns record\nlanguage 'plpgsql'\nsecurity definer\nas $$\nbegin\n  select\n      into status, content\n           result.status, result.content\n      from public.delete_storage_object('avatars', avatar_url) as result;\nend;\n$$;\n```\n\n接下来，添加一个触发器，在更新或删除个人资料时删除任何过时的头像：\n\n```\ncreate or replace function delete_old_avatar()\nreturns trigger\nlanguage 'plpgsql'\nsecurity definer\nas $$\ndeclare\n  status int;\n  content text;\n  avatar_name text;\nbegin\n  if coalesce(old.avatar_url, '') <> ''\n      and (tg_op = 'DELETE' or (old.avatar_url <> coalesce(new.avatar_url, ''))) then\n    -- extract avatar name\n    avatar_name := old.avatar_url;\n    select\n      into status, content\n      result.status, result.content\n      from public.delete_avatar(avatar_name) as result;\n    if status <> 200 then\n      raise warning 'Could not delete avatar: % %', status, content;\n    end if;\n  end if;\n  if tg_op = 'DELETE' then\n    return old;\n  end if;\n  return new;\nend;\n$$;\n\ncreate trigger before_profile_changes\n  before update of avatar_url or delete on public.profiles\n  for each row execute function public.delete_old_avatar();\n```\n\n最后，在删除用户之前删除 public.profile 行。\n如果省略了这一步，那么在删除用户时就不能删除用户。\n\n```\ncreate or replace function delete_old_profile()\nreturns trigger\nlanguage 'plpgsql'\nsecurity definer\nas $$\nbegin\n  delete from public.profiles where id = old.id;\n  return old;\nend;\n$$;\n\ncreate trigger before_delete_user\n  before delete on auth.users\n  for each row execute function public.delete_old_profile();\n```\n\n恭喜您，您已经使用 Flutter 和 MemFire Cloud 构建了一个功能齐全的用户管理应用程序！\n\n---\n\n[*navigate\\_before* 快速入门: React](/docs/app/quickstart/with-react/)\n\n[快速入门: Next.js *navigate\\_next*](/docs/app/quickstart/with-nextjs/)"
}