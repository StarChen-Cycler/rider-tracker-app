{
  "url": "https://docs.memfiredb.com/docs/app/quickstart/with-redwoodjs/",
  "title": "快速入门: RedwoodJS | MemFire Cloud在线文档",
  "depth": 1,
  "timestamp": "2025-08-12 17:59:44",
  "html": "<main class=\"page-content bg-transparent\">\n<div class=\"top-header d-print-none\" id=\"top-header\">\n<div class=\"header-bar d-flex justify-content-between\">\n<div class=\"d-flex align-items-center\">\n<a alt=\"HomePage\" aria-label=\"HomePage\" class=\"logo-icon me-3\" href=\"/\">\n<div class=\"small\">\n<!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->\n<svg height=\"112px\" version=\"1.1\" viewbox=\"0 0 99 112\" width=\"99px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<title>MemFireDB备份 6</title>\n<defs>\n<lineargradient id=\"linearGradient-1\" x1=\"49.9999885%\" x2=\"49.9999885%\" y1=\"98.082503%\" y2=\"0.766550128%\">\n<stop offset=\"0%\" stop-color=\"#ED1C23\"></stop>\n<stop offset=\"100%\" stop-color=\"#FBAF3B\"></stop>\n</lineargradient>\n</defs>\n<g fill=\"none\" fill-rule=\"evenodd\" id=\"定稿\" stroke=\"none\" stroke-width=\"1\">\n<g id=\"MemFireDB备份-6\">\n<polygon fill=\"#F9AE7C\" id=\"Fill-1\" points=\"25.9728553 40.7912363 47.4268317 0.00591833831 1.15453123 26.7215251\"></polygon>\n<polygon fill=\"#F9AE7C\" id=\"Fill-3\" points=\"97.4213117 26.7267606 51.1285247 0.000910513587 72.4242993 40.8351686\"></polygon>\n<polygon fill=\"#F9904A\" id=\"Fill-5\" points=\"24.8347133 42.7618153 0.000455256793 28.682999 0.000455256793 82.1608764\"></polygon>\n<polygon fill=\"url(#linearGradient-1)\" id=\"Fill-7\" points=\"27.6634514 42.4662399 49.279044 109.05096 70.7296059 42.507213 49.2779058 1.3747617\"></polygon>\n<polygon fill=\"#F9904A\" id=\"Fill-9\" points=\"98.5660549 28.6951771 73.5622137 42.8047233 98.5660549 82.1719163\"></polygon>\n<polygon fill=\"#FB6D33\" id=\"Fill-13\" points=\"72.2987623 45.061545 50.7514582 111.900071 97.579172 84.8646465\"></polygon>\n<polygon fill=\"#FB6D33\" id=\"Fill-15\" points=\"26.1006687 45.0226206 0.987565799 84.8644188 47.8095888 111.898705\"></polygon>\n<path d=\"M60.0737516,38.507213 C59.3168872,35.669825 57.0462939,33.3514298 57.0462939,33.3514298 C57.0462939,33.3514298 57.0804382,35.8849338 56.2894295,37.513615 C55.4847631,39.1696116 53.8765685,40.3054773 53.8765685,40.3054773 C53.8765685,40.3054773 56.1016361,33.8840802 54.2715038,30.1247973 C52.0259496,25.5073552 49.1771803,23.3357803 49.1771803,23.3357803 C49.1771803,23.3357803 50.1070423,28.1319107 48.6240432,31.5065016 C47.1672215,34.8264618 42.8058614,36.7260208 40.7241997,38.7132167 C39.1865699,40.1791435 38.0814341,43.0711623 37.6068289,44.4847347 C37.5715465,44.5883056 37.560165,44.6918765 37.5533362,44.7943093 C37.584066,43.9816759 37.8890881,39.8024186 40.9654858,37.4293925 C43.8404325,35.2111538 41.2431925,30.3478731 41.2431925,30.3478731 C41.2431925,30.3478731 41.7212121,32.5638355 40.9939394,34.1401622 C40.2655285,35.7153507 38.7187936,36.5962726 38.0154218,38.259098 C37.3883056,39.7409589 37.5203301,44.1432921 37.5453692,44.8409731 C37.5453692,44.8591834 37.5476455,44.8762555 37.5476455,44.8921895 C37.5476455,44.9263338 37.5487836,44.9456822 37.5487836,44.9456822 L37.5487836,44.9115379 C37.5590269,45.2655001 37.7138142,45.6080808 37.9972116,45.8448143 L48.3713757,55.6442168 C48.8380139,56.0323232 49.5163466,56.0334614 49.9841229,55.6476312 L60.5938825,45.7105136 C60.9034571,45.4544316 61.0719021,45.0686015 61.0457249,44.6656992 C60.9546735,43.2282259 60.5699815,40.3692133 60.0737516,38.507213\" fill=\"#FFFFFF\" id=\"Fill-17\"></path>\n</g>\n</g>\n</svg>\n</div>\n<div class=\"big\">\n<svg height=\"20\" width=\"232\" xmlns=\"http://www.w3.org/2000/svg\"><defs><lineargradient id=\"a\" x1=\"50%\" x2=\"50%\" y1=\"98.083%\" y2=\".767%\"><stop offset=\"0%\" stop-color=\"#ED1C23\"></stop><stop offset=\"100%\" stop-color=\"#FBAF3B\"></stop></lineargradient></defs><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M78.622 12.384l1.596 21.94H77.49l-.847-14.154-8.98 15.523-4.899-15.53-4.416 14.162H55.6l7.085-21.871 5.712 17.174 10.224-17.244zm99.46.382l.324.01.454.036c.085.008.175.018.269.03l.61.096c1.09.203 2.518.644 3.883 1.596l.515.383-.46 3.694-.413-.62-.154-.195-.255-.285c-.765-.802-2.485-2.188-5.23-2.188-4.55 0-8.723 3.809-9.3 8.491-.287 2.311.334 4.469 1.755 6.077 1.342 1.517 3.257 2.354 5.39 2.354 2.606 0 4.58-1.225 5.606-2.04l.359-.3.424-.408.507-.552-.466 3.766-.093.06a12.622 12.622 0 01-4.577 1.842l-.629.1-.53.058-.418.027-.444.003c-2.918-.002-5.532-1.142-7.36-3.21-1.851-2.096-2.67-4.88-2.305-7.837.73-5.88 5.964-10.696 11.806-10.974l.732-.014zm18.174 9.018c1.724 0 3.344.713 4.443 1.956 1.101 1.248 1.59 2.88 1.377 4.596-.432 3.504-3.808 6.466-7.375 6.466-1.728 0-3.348-.715-4.45-1.96-1.096-1.242-1.583-2.864-1.377-4.563.44-3.52 3.818-6.495 7.382-6.495zm19.446.535l-1.486 12.02h-2.558l.16-1.292c-.936.93-2.462 1.755-4.173 1.755-1.318 0-2.48-.492-3.267-1.385-.804-.91-1.168-2.184-1.008-3.497l.9-7.274 2.597-.327-.914 7.402c-.101.785.084 1.466.525 1.968.49.552 1.27.845 2.25.845 1.526 0 3.3-1.155 3.51-2.873l.87-7.015 2.594-.327zm-63.587-.547c1.77 0 3.21.58 4.164 1.678 1.047 1.207 1.48 3.01 1.263 5.233l-.097.771h-9.914c.16 1.896 1.567 2.979 3.895 2.979 1.806 0 2.878-.434 3.868-.961l1.119-.623-.312 2.522-.106.06c-1.224.687-2.604 1.356-4.8 1.356-2.092 0-3.873-.708-5.006-1.992-.991-1.12-1.404-2.599-1.198-4.272.548-4.433 4.001-6.751 7.124-6.751zm-62.717 0c1.771 0 3.211.58 4.164 1.678 1.048 1.207 1.48 3.01 1.263 5.233l-.097.771h-9.914c.16 1.896 1.567 2.979 3.895 2.979 1.622 0 2.652-.35 3.563-.803l.594-.315.83-.466-.312 2.522-.105.06c-1.224.687-2.604 1.356-4.8 1.356-2.093 0-3.874-.708-5.007-1.992-.99-1.12-1.404-2.599-1.197-4.272.547-4.433 4-6.751 7.123-6.751zM231.476 12l-2.767 22.34h-2.556l.197-1.59c-1.104 1.191-2.882 2.021-4.471 2.021-1.781 0-3.24-.583-4.217-1.69-1.02-1.151-1.452-2.817-1.222-4.686.485-3.908 3.43-6.636 7.167-6.636 1.565 0 3.065.832 3.852 2.064l1.356-10.968 2.661-.855zm-42.07.002L186.64 34.34h-2.556l2.664-21.483 2.66-.854zm-56.632 1.268l-1.166 2.527h-9.586l-.85 6.867h6.627v.48h-.12l-.883 1.778v.24h-5.933l-1.138 9.163h-2.729l2.612-21.055h13.166zm2.715 9.038l-1.497 12.017h-2.559l1.455-11.722 2.601-.295zm-24.427-.537c1 0 1.93.427 2.616 1.204.84.95 1.224 2.29 1.053 3.677l-.955 7.673h-2.527l.922-7.445c.13-1.017-.027-1.81-.45-2.287-.326-.367-.815-.554-1.458-.554-1.954 0-3.178 1.346-3.332 2.613l-.955 7.673h-2.556l.922-7.445c.127-1.03-.024-1.826-.442-2.297-.319-.362-.801-.544-1.437-.544-1.522 0-3.3 1.166-3.516 2.901l-.912 7.385h-2.559l1.455-11.722 2.594-.295-.146 1.164c1.027-1.077 2.419-1.701 3.854-1.701 1.375 0 2.58.79 3.226 2.083.914-1.13 2.05-2.083 4.603-2.083zm29.487.532l-.206 1.73c1.082-.978 2.932-1.7 4.514-1.7h.269l-.271 2.282h-.214c-1.814 0-4.469.837-4.7 2.7l-.866 7.01h-2.558l1.45-11.693 2.582-.329zm55.47 1.865c-2.31 0-4.27 1.792-4.563 4.168-.144 1.145.15 2.196.824 2.957.64.725 1.586 1.126 2.656 1.126 2.292 0 4.241-1.78 4.532-4.14.146-1.169-.144-2.237-.821-3.003-.634-.715-1.567-1.108-2.628-1.108zm27.497-.029c-2.278 0-4.15 1.752-4.45 4.17-.149 1.187.137 2.255.8 3.006.611.692 1.526 1.076 2.57 1.076 2.294 0 4.173-1.743 4.468-4.143.152-1.21-.13-2.285-.79-3.033-.623-.704-1.52-1.076-2.598-1.076zm-134.356.045c-1.89 0-3.372 1.094-4.015 2.947h7.164a2.853 2.853 0 00-.71-1.956c-.574-.648-1.416-.991-2.439-.991zm62.715 0c-1.892 0-3.37 1.094-4.013 2.947h7.166a2.867 2.867 0 00-.713-1.956c-.573-.648-1.416-.991-2.44-.991zm-17.267-7.614c.919 0 1.706.748 1.754 1.668a1.587 1.587 0 01-1.603 1.692c-.917 0-1.704-.75-1.754-1.668a1.593 1.593 0 011.603-1.692z\" fill=\"#116\"></path><path d=\"M11.131 17.482L20.326.002.495 11.453zm30.621-6.028L21.912 0l9.127 17.5z\" fill=\"#F9AE7C\"></path><path d=\"M10.643 18.326L0 12.293v22.919z\" fill=\"#F9904A\"></path><path d=\"M11.856 18.2l9.264 28.536 9.193-28.519L21.119.59z\" fill=\"url(#a)\"></path><path d=\"M42.243 12.298l-10.716 6.047 10.716 16.872z\" fill=\"#F9904A\"></path><path d=\"M30.985 19.312l-9.234 28.645L41.82 36.371zm-19.799-.017L.423 36.37 20.49 47.957z\" fill=\"#FB6D33\"></path><path d=\"M25.746 16.503c-.324-1.216-1.298-2.21-1.298-2.21s.015 1.086-.324 1.784c-.345.71-1.034 1.197-1.034 1.197s.954-2.752.17-4.363c-.963-1.98-2.184-2.91-2.184-2.91s.398 2.056-.237 3.502c-.624 1.423-2.494 2.237-3.386 3.088-.659.629-1.132 1.868-1.336 2.474a.509.509 0 00-.023.133c.013-.349.144-2.14 1.463-3.157 1.232-.95.119-3.035.119-3.035s.205.95-.107 1.625c-.312.676-.975 1.053-1.277 1.766-.268.635-.212 2.522-.201 2.82v.023l.001.022v-.014a.54.54 0 00.193.4l4.446 4.2c.2.166.49.166.69.001l4.548-4.259a.535.535 0 00.193-.448c-.039-.616-.203-1.84-.416-2.639\" fill=\"#FFF\"></path></g></svg>\n</div>\n</a>\n<button class=\"btn btn-icon btn-soft\" id=\"close-sidebar\">\n<span class=\"material-icons size-20 menu-icon align-middle\">menu</span>\n</button>\n</div>\n<div class=\"d-flex align-items-center\">\n<ul class=\"list-unstyled mb-0\">\n</ul>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://memfiredb.com/\" target=\"_blank\" type=\"button\">官网</a>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://community.memfiredb.com/\" target=\"_blank\" type=\"button\">论坛</a>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://cloud.memfiredb.com/auth/login\" target=\"_blank\" type=\"button\">登录</a>\n<button aria-label=\"Toggle user interface mode\" class=\"btn btn-icon btn-default ms-2\" id=\"mode\" type=\"button\">\n<span class=\"toggle-dark\">\n<svg fill=\"currentColor\" height=\"30\" viewbox=\"0 0 48 48\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\n<title>Enable dark mode</title>\n<path d=\"M24 42q-7.5 0-12.75-5.25T6 24q0-7.5 5.25-12.75T24 6q.4 0 .85.025.45.025 1.15.075-1.8 1.6-2.8 3.95-1 2.35-1 4.95 0 4.5 3.15 7.65Q28.5 25.8 33 25.8q2.6 0 4.95-.925T41.9 22.3q.05.6.075.975Q42 23.65 42 24q0 7.5-5.25 12.75T24 42Zm0-3q5.45 0 9.5-3.375t5.05-7.925q-1.25.55-2.675.825Q34.45 28.8 33 28.8q-5.75 0-9.775-4.025T19.2 15q0-1.2.25-2.575.25-1.375.9-3.125-4.9 1.35-8.125 5.475Q9 18.9 9 24q0 6.25 4.375 10.625T24 39Zm-.2-14.85Z\"></path>\n</svg>\n</span>\n<span class=\"toggle-light\">\n<svg fill=\"currentColor\" height=\"30\" viewbox=\"0 0 48 48\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\n<title>Enable light mode</title>\n<path d=\"M24 31q2.9 0 4.95-2.05Q31 26.9 31 24q0-2.9-2.05-4.95Q26.9 17 24 17q-2.9 0-4.95 2.05Q17 21.1 17 24q0 2.9 2.05 4.95Q21.1 31 24 31Zm0 3q-4.15 0-7.075-2.925T14 24q0-4.15 2.925-7.075T24 14q4.15 0 7.075 2.925T34 24q0 4.15-2.925 7.075T24 34ZM3.5 25.5q-.65 0-1.075-.425Q2 24.65 2 24q0-.65.425-1.075Q2.85 22.5 3.5 22.5h5q.65 0 1.075.425Q10 23.35 10 24q0 .65-.425 1.075-.425.425-1.075.425Zm36 0q-.65 0-1.075-.425Q38 24.65 38 24q0-.65.425-1.075.425-.425 1.075-.425h5q.65 0 1.075.425Q46 23.35 46 24q0 .65-.425 1.075-.425.425-1.075.425ZM24 10q-.65 0-1.075-.425Q22.5 9.15 22.5 8.5v-5q0-.65.425-1.075Q23.35 2 24 2q.65 0 1.075.425.425.425.425 1.075v5q0 .65-.425 1.075Q24.65 10 24 10Zm0 36q-.65 0-1.075-.425-.425-.425-.425-1.075v-5q0-.65.425-1.075Q23.35 38 24 38q.65 0 1.075.425.425.425.425 1.075v5q0 .65-.425 1.075Q24.65 46 24 46ZM12 14.1l-2.85-2.8q-.45-.45-.425-1.075.025-.625.425-1.075.45-.45 1.075-.45t1.075.45L14.1 12q.4.45.4 1.05 0 .6-.4 1-.4.45-1.025.45-.625 0-1.075-.4Zm24.7 24.75L33.9 36q-.4-.45-.4-1.075t.45-1.025q.4-.45 1-.45t1.05.45l2.85 2.8q.45.45.425 1.075-.025.625-.425 1.075-.45.45-1.075.45t-1.075-.45ZM33.9 14.1q-.45-.45-.45-1.05 0-.6.45-1.05l2.8-2.85q.45-.45 1.075-.425.625.025 1.075.425.45.45.45 1.075t-.45 1.075L36 14.1q-.4.4-1.025.4-.625 0-1.075-.4ZM9.15 38.85q-.45-.45-.45-1.075t.45-1.075L12 33.9q.45-.45 1.05-.45.6 0 1.05.45.45.45.45 1.05 0 .6-.45 1.05l-2.8 2.85q-.45.45-1.075.425-.625-.025-1.075-.425ZM24 24Z\"></path>\n</svg>\n</span>\n</button>\n</div>\n</div>\n</div>\n<div class=\"container-fluid\">\n<div class=\"layout-spacing\">\n<div class=\"d-md-flex justify-content-between align-items-center\"></div>\n<div class=\"row flex-xl-nowrap\">\n<div class=\"docs-toc col-xl-3 d-xl-block\"><toc>\n<div class=\"fw-bold text-uppercase mb-2\">本页</div>\n\n</toc></div>\n<div class=\"docs-toc-mobile d-print-none d-xl-none\">\n<button aria-expanded=\"false\" class=\"btn-secondary dropdown-toggle\" data-bs-offset=\"0,0\" data-bs-toggle=\"dropdown\" id=\"toc-dropdown-btn\" type=\"button\">介绍</button>\n</div>\n<div class=\"docs-content col-12 col-xl-9 mt-0\">\n<div class=\"mb-0 d-flex\">\n<h1 class=\"content-title mb-0\">\n                                                    快速入门: RedwoodJS\n                                                    \n                                                </h1>\n</div>\n<div class=\"main-content\" data-bs-root-margin=\"0px 0px -65%\" data-bs-spy=\"scroll\" data-bs-target=\"#toc-mobile\" id=\"content\">\n<div data-prismjs-copy=\"\" data-prismjs-copy-error=\"\" data-prismjs-copy-success=\"\">\n<h2 id=\"介绍\">介绍 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%bb%8b%e7%bb%8d\"><i class=\"material-icons align-middle\">link</i></a></h2><p>为了与其他框架的Quickstart例子保持一致，我们将建立一个RedwoodJS，与正常情况下有点不同。</p>\n<p>我们不使用Prisma连接到Supabase Postgres数据库或<a href=\"https://redwoodjs.com/docs/cli-commands#prisma-migrate\" rel=\"external\" target=\"_blank\">Prisma迁移<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>，因为在Redwood应用中通常会这样做。\n相反，我们将依靠Supabase客户端在<strong>网络</strong>端做一些工作，并在<strong>API</strong>端再次使用客户端来做数据获取。</p>\n<p>这意味着你要避免运行任何 “yarn rw prisma migrate “命令，还要在部署时仔细检查你的构建命令，以确保Prisma不会重置你的数据库。</p>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>TLDR; Prisma目前不支持跨模式外键，所以由于你的Supabase <code>public</code>模式是如何引用<code>auth.users</code>的，反省模式失败。</p>\n</div>\n</div>\n<p>这个例子提供了使用Supabase和<a href=\"https://redwoodjs.com/docs/introduction\" rel=\"external\" target=\"_blank\">RedwoodJS<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>建立一个简单的用户管理应用程序的步骤（从头开始！）。它包括。</p>\n<ul>\n<li>MemFire Cloud <a data-bs-delay='{\"hide\":300,\"show\":550}' data-bs-html=\"true\" data-bs-title=\"&lt;a href='/docs/app/development_guide/database/database/'&gt;&lt;p&gt;数据库&lt;/p&gt;&lt;strong&gt;概述&lt;/strong&gt;&lt;br&gt;Use Supabase to manage your data.&lt;/a&gt;\" data-bs-toggle=\"tooltip\" href=\"/docs/app/development_guide/database/database/\">Database</a>：一个用于存储用户数据的Postgres数据库。</li>\n<li>MemFire Cloud <a data-bs-delay='{\"hide\":300,\"show\":550}' data-bs-html=\"true\" data-bs-title=\"&lt;a href='/docs/app/development_guide/auth/auth/'&gt;&lt;p&gt;认证&lt;/p&gt;&lt;strong&gt;概述&lt;/strong&gt;&lt;br&gt;使用Supabase来认证和授权你的用户。&lt;/a&gt;\" data-bs-toggle=\"tooltip\" href=\"/docs/app/development_guide/auth/auth/\">Auth</a>：用户可以用魔法链接登录（没有密码，只有电子邮件）。</li>\n<li>MemFire Cloud <a data-bs-delay='{\"hide\":300,\"show\":550}' data-bs-html=\"true\" data-bs-title=\"&lt;a href='/docs/app/development_guide/storage/storage/'&gt;&lt;p&gt;对象存储&lt;/p&gt;&lt;strong&gt;概述&lt;/strong&gt;&lt;br&gt;Use Supabase to store and serve files.&lt;/a&gt;\" data-bs-toggle=\"tooltip\" href=\"/docs/app/development_guide/storage/storage/\">Storage</a>：用户可以上传照片。</li>\n<li>Instant <a data-bs-delay='{\"hide\":300,\"show\":550}' data-bs-html=\"true\" data-bs-title=\"&lt;a href='/docs/app/development_guide/api/api/'&gt;&lt;p&gt;无服务器API&lt;/p&gt;&lt;strong&gt;概述&lt;/strong&gt;&lt;br&gt;Auto-generating and Realtime APIs.&lt;/a&gt;\" data-bs-toggle=\"tooltip\" href=\"/docs/app/development_guide/api/api/\">APIs</a>。当你创建你的数据库表时，API将自动生成。</li>\n<li><a data-bs-delay='{\"hide\":300,\"show\":550}' data-bs-html=\"true\" data-bs-title=\"&lt;a href='/docs/app/development_guide/auth/auth/'&gt;&lt;p&gt;认证&lt;/p&gt;&lt;strong&gt;概述&lt;/strong&gt;&lt;br&gt;使用Supabase来认证和授权你的用户。&lt;/a&gt;\" data-bs-toggle=\"tooltip\" href=\"/docs/app/development_guide/auth/auth/#row-level-security\">行级安全</a>：数据受到保护，个人只能访问自己的数据。</li>\n</ul>\n<p>在本指南结束时，你将拥有一个允许用户登录并更新一些基本资料细节的应用程序。</p>\n<img src=\"../../img/user-management-demo.png\"/>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>注意：对于RedwoodJS应用程序，端口将是8910。</p>\n</div>\n</div>\n<h3 id=\"github\">GitHub <a aria-hidden=\"true\" class=\"anchor\" href=\"#github\"><i class=\"material-icons align-middle\">link</i></a></h3><p>如果你在任何时候被卡住了，请看一下<a href=\"https://github.com/redwoodjs/redwoodjs-supabase-quickstart\" rel=\"external\" target=\"_blank\">这个 repo<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>。</p>\n<!-- ## Video demo\n\n即将推出。\n\n使用注释的时间线来逐步完成这个教程。\n\n## 即时部署\n\n想在不遵循指南的情况下部署这个例子的完整版本吗？\n\n[![用Vercel部署](https://vercel.com/button)](https://vercel.com/new/git/external?repository-url=https%3A%2F%2Fgithub.com%2Fsupabase%2Fsupabase%2Ftree%2Fmaster%2Fexamples%2Freact-user-management&project-name=supabase-user-management&repository-name=supabase-user-management&demo-title=Supabase%20User%20Management&demo-description=An%20example%20web%20app%20using%20Supabase%20and%20Next.js&demo-url=https%3A%2F%2Fsupabase-react-user-management.vercel.app&demo-image=https%3A%2F%2Fi.imgur.com%2FZ3HkQqe.png&integration-ids=oac_jUduyjQgOyzev1fjrW83NYOv&external-id=nextjs-user-management)\n\n点击这个按钮，应用程序将。\n\n- 在Supabase中启动并准备Postgres数据库。\n- 在Vercel中启动该应用程序。\n- 在你自己的GitHub账户中分叉这个例子。\n- 用所有必要的环境变量准备部署的应用程序。\n\n如果你想自己做，让我们开始吧。-->\n<h2 id=\"关于redwoodjs\">关于RedwoodJS <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%85%b3%e4%ba%8eredwoodjs\"><i class=\"material-icons align-middle\">link</i></a></h2><p>一个Redwood应用程序被分成两部分：一个前端和一个后端。这表现为在一个单一的monorepo中的两个node项目。</p>\n<p>前台项目被称为**<code>web</code><strong>，后台项目被称为</strong><code>api</code>**。\n它们是独立的项目，因为 “web端 “的代码最终将在用户的浏览器中运行，而 <code>api端</code>的代码将在某个服务器上运行。</p>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>重要提示：当本指南提到 <code>API</code>时，指的是Supabase API，当它提到 <code>api端</code>时，指的是RedwoodJS <code>api端</code>。</p>\n</div>\n</div>\n<p>**<code>api端</code>**是一个GraphQL API的实现。业务逻辑被组织成 <code>服务</code>，代表他们自己的内部API，可以从外部GraphQL请求和其他内部服务中调用。</p>\n<p>网络端 “***是用React构建的。Redwood的路由器可以简单地将URL路径映射到React的 <code>页面</code>组件（并在每个路径上自动分割你的应用代码）。\n页面可以包含一个 <code>Layout</code>组件来包装内容。它们还包含 <code>单元格</code>和常规的React组件。\n单元允许你声明性地管理一个获取和显示数据的组件的生命周期。</p>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>为了与其他框架的Quickstart例子保持一致，我们将建立一个RedwoodJS，与正常情况下有点不同。\n我们不使用Prisma来连接Supabase Postgres数据库或<a href=\"https://redwoodjs.com/docs/cli-commands#prisma-migrate\" rel=\"external\" target=\"_blank\">Prisma迁移<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>，因为在Redwood应用中通常会这样做。\n相反，我们将依靠Supabase客户端来完成**<code>web</code><strong>方面的一些工作，并在</strong><code>api</code>**方面再次使用客户端来进行数据获取。</p>\n</div>\n</div>\n<h2 id=\"项目设置\">项目设置 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e9%a1%b9%e7%9b%ae%e8%ae%be%e7%bd%ae\"><i class=\"material-icons align-middle\">link</i></a></h2><p>在我们开始构建之前，我们要设置我们的数据库和API。这就像在Supabase中启动一个新项目一样简单\n然后在数据库中创建一个 “模式”。</p>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>在设置Supabase时，你会与你的项目仪表板互动。然而，大多数RedwoodJS的设置步骤将与<a href=\"https://redwoodjs.com/docs/cli-commands\" rel=\"external\" target=\"_blank\">Redwood CLI<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>互动，以生成路由、页面、组件等。\n因此，请确保在你的项目目录中准备好一个终端。</p>\n</div>\n</div>\n<h3 id=\"创建一个项目\">创建一个项目 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e9%a1%b9%e7%9b%ae\"><i class=\"material-icons align-middle\">link</i></a></h3><ol>\n<li>进入<a href=\"https://cloud.memfiredb.com\" rel=\"external\" target=\"_blank\">MemFire Cloud<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>。</li>\n<li>点击 <code>新项目</code>。</li>\n<li>输入你的项目细节。</li>\n<li>等待新数据库的启动。</li>\n</ol>\n<h3 id=\"设置数据库模式\">设置数据库模式 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e8%ae%be%e7%bd%ae%e6%95%b0%e6%8d%ae%e5%ba%93%e6%a8%a1%e5%bc%8f\"><i class=\"material-icons align-middle\">link</i></a></h3><p>现在我们要设置数据库模式。我们可以使用SQL编辑器中的 <code>用户管理启动器</code>快速启动。\n或者你可以直接复制/粘贴下面的SQL，然后自己运行它。</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"befcad\" role=\"tabpanel\">\n<ol>\n<li>进入仪表版中的SQL编辑器页面。</li>\n<li>点击 <strong>用户管理</strong>的模板。</li>\n<li>点击<strong>运行</strong>。</li>\n</ol>\n<video controls=\"true\" muted=\"\" playsinline=\"\" width=\"99%\">\n<source muted=\"\" playsinline=\"\" src=\"../../videos/sql-user-management-starter.mp4\" type=\"video/mp4\"/>\n</video>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"fecbad\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-sql\" id=\"0a8a93b\" tabindex=\"0\"><code class=\"language-sql\"><span class=\"token comment\">-- Create a table for public \"profiles\"</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> profiles <span class=\"token punctuation\">(</span>\n  id uuid <span class=\"token keyword\">references</span> auth<span class=\"token punctuation\">.</span>users <span class=\"token operator\">not</span> <span class=\"token boolean\">null</span><span class=\"token punctuation\">,</span>\n  updated_at <span class=\"token keyword\">timestamp</span> <span class=\"token keyword\">with</span> <span class=\"token keyword\">time</span> zone<span class=\"token punctuation\">,</span>\n  username <span class=\"token keyword\">text</span> <span class=\"token keyword\">unique</span><span class=\"token punctuation\">,</span>\n  avatar_url <span class=\"token keyword\">text</span><span class=\"token punctuation\">,</span>\n  website <span class=\"token keyword\">text</span><span class=\"token punctuation\">,</span>\n\n  <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">unique</span><span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token keyword\">constraint</span> username_length <span class=\"token keyword\">check</span> <span class=\"token punctuation\">(</span>char_length<span class=\"token punctuation\">(</span>username<span class=\"token punctuation\">)</span> <span class=\"token operator\">&gt;=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> profiles <span class=\"token keyword\">enable</span> <span class=\"token keyword\">row</span> <span class=\"token keyword\">level</span> security<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> policy <span class=\"token string\">\"Public profiles are viewable by everyone.\"</span>\n  <span class=\"token keyword\">on</span> profiles <span class=\"token keyword\">for</span> <span class=\"token keyword\">select</span>\n  <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> policy <span class=\"token string\">\"Users can insert their own profile.\"</span>\n  <span class=\"token keyword\">on</span> profiles <span class=\"token keyword\">for</span> <span class=\"token keyword\">insert</span>\n  <span class=\"token keyword\">with</span> <span class=\"token keyword\">check</span> <span class=\"token punctuation\">(</span> auth<span class=\"token punctuation\">.</span>uid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> id <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> policy <span class=\"token string\">\"Users can update own profile.\"</span>\n  <span class=\"token keyword\">on</span> profiles <span class=\"token keyword\">for</span> <span class=\"token keyword\">update</span>\n  <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span> auth<span class=\"token punctuation\">.</span>uid<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> id <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- Set up Realtime!</span>\n<span class=\"token keyword\">begin</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">drop</span> publication <span class=\"token keyword\">if</span> <span class=\"token keyword\">exists</span> supabase_realtime<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">create</span> publication supabase_realtime<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">commit</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">alter</span> publication supabase_realtime <span class=\"token keyword\">add</span> <span class=\"token keyword\">table</span> profiles<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- Set up Storage!</span>\n<span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> storage<span class=\"token punctuation\">.</span>buckets <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">values</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'avatars'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'avatars'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> policy <span class=\"token string\">\"Avatar images are publicly accessible.\"</span>\n  <span class=\"token keyword\">on</span> storage<span class=\"token punctuation\">.</span>objects <span class=\"token keyword\">for</span> <span class=\"token keyword\">select</span>\n  <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span> bucket_id <span class=\"token operator\">=</span> <span class=\"token string\">'avatars'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">create</span> policy <span class=\"token string\">\"Anyone can upload an avatar.\"</span>\n  <span class=\"token keyword\">on</span> storage<span class=\"token punctuation\">.</span>objects <span class=\"token keyword\">for</span> <span class=\"token keyword\">insert</span>\n  <span class=\"token keyword\">with</span> <span class=\"token keyword\">check</span> <span class=\"token punctuation\">(</span> bucket_id <span class=\"token operator\">=</span> <span class=\"token string\">'avatars'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h4 id=\"关于prisma和迁移的重要说明\">关于Prisma和迁移的重要说明 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%85%b3%e4%ba%8eprisma%e5%92%8c%e8%bf%81%e7%a7%bb%e7%9a%84%e9%87%8d%e8%a6%81%e8%af%b4%e6%98%8e\"><i class=\"material-icons align-middle\">link</i></a></h4><div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>因为这个快速入门并没有使用Prisma来管理数据库模式、播种或运行迁移，所以在运行一些典型的Redwood CLI命令时，你***需要格外小心。</p>\n</div>\n</div>\n<h3 id=\"获取api密钥\">获取API密钥 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e8%8e%b7%e5%8f%96api%e5%af%86%e9%92%a5\"><i class=\"material-icons align-middle\">link</i></a></h3><p>现在你已经创建了一些数据库表，你已经准备好使用自动生成的API插入数据。\n我们只需要从API设置中获得URL以及<code>anon</code>、<code>service_role</code>和<code>JWT_SECRET</code>键。</p>\n<ol>\n<li>进入仪表板中的<code>应用设置</code>-&gt;<code>API</code>页面。</li>\n<li>在这个页面上找到你的API <code>URL</code>, <code>anon</code>, 和 <code>service_role</code>键。</li>\n</ol>\n<video controls=\"true\" muted=\"\" playsinline=\"\" width=\"99%\">\n<source muted=\"\" playsinline=\"\" src=\"../../videos/api/api-url-and-key.mp4\" type=\"video/mp4\"/>\n</video>\n<h2 id=\"构建应用程序\">构建应用程序 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e6%9e%84%e5%bb%ba%e5%ba%94%e7%94%a8%e7%a8%8b%e5%ba%8f\"><i class=\"material-icons align-middle\">link</i></a></h2><p>让我们开始从头开始构建RedwoodJS应用程序。</p>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>RedwoodJS需要Node.js（&gt;=14.x &lt;=16.x）和Yarn（&gt;=1.15）。</p>\n</div>\n</div>\n<p>确保你已经安装了yarn，因为RedwoodJS依靠它来<a href=\"https://classic.yarnpkg.com/lang/en/docs/workspaces/\" rel=\"external\" target=\"_blank\">在工作空间中管理它的包<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>，用于其<code>web</code>和<code>api</code>“side”。</p>\n<h3 id=\"初始化一个redwoodjs应用程序\">初始化一个RedwoodJS应用程序 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%88%9d%e5%a7%8b%e5%8c%96%e4%b8%80%e4%b8%aaredwoodjs%e5%ba%94%e7%94%a8%e7%a8%8b%e5%ba%8f\"><i class=\"material-icons align-middle\">link</i></a></h3><p>我们可以使用<a href=\"https://redwoodjs.com/docs/quick-start\" rel=\"external\" target=\"_blank\">Create Redwood App<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>命令来初始化\n一个名为<code>supabase-redwoodjs</code>的应用程序。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"f70d967\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> create redwood-app supabase-redwoodjs\n<span class=\"token builtin class-name\">cd</span> supabase-redwoodjs</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>当应用程序正在安装时，你应该看到。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"03bc9cb\" tabindex=\"0\"><code class=\"language-bash\">✔ Creating Redwood app\n  ✔ Checking <span class=\"token function\">node</span> and <span class=\"token function\">yarn</span> compatibility\n  ✔ Creating directory <span class=\"token string\">'supabase-redwoodjs'</span>\n✔ Installing packages\n  ✔ Running <span class=\"token string\">'yarn install'</span><span class=\"token punctuation\">..</span>. <span class=\"token punctuation\">(</span>This could take a <span class=\"token keyword\">while</span><span class=\"token punctuation\">)</span>\n✔ Convert TypeScript files to JavaScript\n✔ Generating types\n\nThanks <span class=\"token keyword\">for</span> trying out Redwood<span class=\"token operator\">!</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>然后让我们通过运行<code>setup auth</code>命令来安装唯一的额外依赖<a href=\"https://github.com/supabase/supabase-js\" rel=\"external\" target=\"_blank\">supabase-js<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"10c7a64\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> redwood setup auth supabase</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>当被提示时。</p>\n<blockquote>\n<p>覆盖现有的/api/src/lib/auth.[jt]s？</p>\n</blockquote>\n<p>说，<strong>是</strong>，它将在你的应用程序中设置Supabase客户端，并提供用于Supabase验证的钩子。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"f585380\" tabindex=\"0\"><code class=\"language-bash\">✔ Generating auth lib<span class=\"token punctuation\">..</span>.\n✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./api/src/lib/auth.js<span class=\"token variable\">`</span></span>\n✔ Adding auth config to web<span class=\"token punctuation\">..</span>.\n✔ Adding auth config to GraphQL API<span class=\"token punctuation\">..</span>.\n✔ Adding required web packages<span class=\"token punctuation\">..</span>.\n✔ Installing packages<span class=\"token punctuation\">..</span>.\n✔ One <span class=\"token function\">more</span> thing<span class=\"token punctuation\">..</span>.\n\nYou will need to <span class=\"token function\">add</span> your Supabase URL <span class=\"token punctuation\">(</span>SUPABASE_URL<span class=\"token punctuation\">)</span>, public API KEY,\nand JWT SECRET <span class=\"token punctuation\">(</span>SUPABASE_KEY, and SUPABASE_JWT_SECRET<span class=\"token punctuation\">)</span> to your .env file.</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>接下来，我们要在<code>.env</code>中保存环境变量。\n我们需要<code>API URL</code>以及你[早些时候]复制的<code>anon</code>和<code>jwt_secret</code>键(#get-theapi-keys)。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"c1a4f09\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token assign-left variable\">SUPABASE_URL</span><span class=\"token operator\">=</span>YOUR_SUPABASE_URL\n<span class=\"token assign-left variable\">SUPABASE_KEY</span><span class=\"token operator\">=</span>YOUR_SUPABASE_ANON_KEY\n<span class=\"token assign-left variable\">SUPABASE_JWT_SECRET</span><span class=\"token operator\">=</span>YOUR_SUPABASE_JWT_SECRET</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>最后，你还需要把***的 <code>网络端</code>环境变量保存到 <code>redwood.toml</code>中。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"cd667c3\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token punctuation\">[</span>web<span class=\"token punctuation\">]</span>\n  title <span class=\"token operator\">=</span> <span class=\"token string\">\"Supabase Redwood Quickstart\"</span>\n  port <span class=\"token operator\">=</span> <span class=\"token number\">8910</span>\n  apiProxyPath <span class=\"token operator\">=</span> <span class=\"token string\">\"/.redwood/functions\"</span>\n  includeEnvironmentVariables <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"SUPABASE_URL\"</span>, <span class=\"token string\">\"SUPABASE_KEY\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span>api<span class=\"token punctuation\">]</span>\n  port <span class=\"token operator\">=</span> <span class=\"token number\">8911</span>\n<span class=\"token punctuation\">[</span>browser<span class=\"token punctuation\">]</span>\n  <span class=\"token function\">open</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>这些变量将暴露在浏览器上，这完全没有问题。\n它们允许你的Web应用程序使用你的公共匿名密钥初始化Supabase客户端因为我们在数据库中启用了 <a data-bs-delay='{\"hide\":300,\"show\":550}' data-bs-html=\"true\" data-bs-title=\"&lt;a href='/docs/app/development_guide/auth/auth/'&gt;&lt;p&gt;认证&lt;/p&gt;&lt;strong&gt;概述&lt;/strong&gt;&lt;br&gt;使用Supabase来认证和授权你的用户。&lt;/a&gt;\" data-bs-toggle=\"tooltip\" href=\"/docs/app/development_guide/auth/auth/#row-level-security\">行级安全</a> 。</p>\n<p>你会看到这些被用来在<code>web/src/App.js</code>中配置你的Supabase客户端。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"f63aef8\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token comment\">// ... Redwood imports</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> AuthProvider <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@redwoodjs/auth'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/supabase-js'</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SUPABASE_URL</span><span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SUPABASE_KEY</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">App</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>FatalErrorBoundary page<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>FatalErrorPage<span class=\"token punctuation\">}</span><span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>RedwoodProvider titleTemplate<span class=\"token operator\">=</span><span class=\"token string\">\"%PageTitle | %AppTitle\"</span><span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>AuthProvider client<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>supabase<span class=\"token punctuation\">}</span> type<span class=\"token operator\">=</span><span class=\"token string\">\"supabase\"</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span>RedwoodApolloProvider<span class=\"token operator\">&gt;</span>\n          <span class=\"token operator\">&lt;</span>Routes <span class=\"token operator\">/</span><span class=\"token operator\">&gt;</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>RedwoodApolloProvider<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>AuthProvider<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>RedwoodProvider<span class=\"token operator\">&gt;</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>FatalErrorBoundary<span class=\"token operator\">&gt;</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>还有一个可选的步骤是更新CSS文件<code>web/src/index.css</code>以使应用程序看起来漂亮。\n你可以找到这个文件的全部内容<a href=\"https://raw.githubusercontent.com/supabase/supabase/master/examples/user-management/react-user-management/src/index.css\" rel=\"external\" target=\"_blank\">这里<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>。</p>\n<h3 id=\"启动redwoodjs和你的第一个页面\">启动RedwoodJS和你的第一个页面 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%90%af%e5%8a%a8redwoodjs%e5%92%8c%e4%bd%a0%e7%9a%84%e7%ac%ac%e4%b8%80%e4%b8%aa%e9%a1%b5%e9%9d%a2\"><i class=\"material-icons align-middle\">link</i></a></h3><p>让我们通过启动应用程序来测试我们此刻的设置。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"4d9acff\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> rw dev</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>注意：你也可以用<code>rw</code>来表示<code>redwood</code>，如<code>yarn rw</code>来运行Redwood CLI命令。</p>\n</div>\n</div>\n<p>你应该看到一个 <code>欢迎来到RedwoodJS</code>的页面和一个关于还没有任何页面的信息。</p>\n<p>因此，让我们创建一个 <code>主页</code>。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"c4e137e\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> rw generate page home /\n\n✔ Generating page files<span class=\"token punctuation\">..</span>.\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/pages/HomePage/HomePage.stories.js<span class=\"token variable\">`</span></span>\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/pages/HomePage/HomePage.test.js<span class=\"token variable\">`</span></span>\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/pages/HomePage/HomePage.js<span class=\"token variable\">`</span></span>\n✔ Updating routes file<span class=\"token punctuation\">..</span>.\n✔ Generating types <span class=\"token punctuation\">..</span>.</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>注意：这里的斜线<code>/</code>很重要，因为它创建了一个根级路由。</p>\n</div>\n</div>\n<p>如果你想的话，你可以停止<code>dev</code>服务器；要看到你的改变，只要确保再次运行<code>yarn rw dev</code>。</p>\n<p>你应该在<code>web/src/Routes.js</code>中看到<code>Home</code>页面路由。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"41083dc\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">import</span> <span class=\"token punctuation\">{</span> Router, Route <span class=\"token punctuation\">}</span> from <span class=\"token string\">'@redwoodjs/router'</span>\n\nconst Routes <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin class-name\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Router<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>Route <span class=\"token assign-left variable\">path</span><span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> <span class=\"token assign-left variable\">page</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>HomePage<span class=\"token punctuation\">}</span> <span class=\"token assign-left variable\">name</span><span class=\"token operator\">=</span><span class=\"token string\">\"home\"</span> /<span class=\"token operator\">&gt;</span>\n      <span class=\"token operator\">&lt;</span>Route notfound <span class=\"token assign-left variable\">page</span><span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>NotFoundPage<span class=\"token punctuation\">}</span> /<span class=\"token operator\">&gt;</span>\n    <span class=\"token operator\">&lt;</span>/Router<span class=\"token operator\">&gt;</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token builtin class-name\">export</span> default Routes</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h3 id=\"设置一个登录组件\">设置一个登录组件 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e8%ae%be%e7%bd%ae%e4%b8%80%e4%b8%aa%e7%99%bb%e5%bd%95%e7%bb%84%e4%bb%b6\"><i class=\"material-icons align-middle\">link</i></a></h3><p>让我们建立一个Redwood组件来管理登录和注册。我们将使用Magic Links，所以用户可以用他们的电子邮件登录，而不需要使用密码。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"cdef9a8\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> rw g component auth\n\n✔ Generating component files<span class=\"token punctuation\">..</span>.\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/components/Auth/Auth.test.js<span class=\"token variable\">`</span></span>\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/components/Auth/Auth.stories.js<span class=\"token variable\">`</span></span>\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/components/Auth/Auth.js<span class=\"token variable\">`</span></span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>现在，更新<code>Auth.js</code>组件，包含。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"659a573\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useAuth <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@redwoodjs/auth'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Auth</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> logIn <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>loading<span class=\"token punctuation\">,</span> setLoading<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>email<span class=\"token punctuation\">,</span> setEmail<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleLogin</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">email</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> error <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">logIn</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> email <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> error\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Check your email for the login link!'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>error_description <span class=\"token operator\">||</span> error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>row flex-center flex<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>col-6 form-widget<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Supabase + RedwoodJS</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Sign in via magic link with your email below</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n            <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inputField<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">placeholder</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Your email<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>email<span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setEmail</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n            <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n              e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n              <span class=\"token function\">handleLogin</span><span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">className</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'button block'</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>loading<span class=\"token punctuation\">}</span></span>\n          <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n            </span><span class=\"token punctuation\">{</span>loading <span class=\"token operator\">?</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Loading</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span> <span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Send magic link</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Auth</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h3 id=\"设置一个账户组件\">设置一个账户组件 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e8%ae%be%e7%bd%ae%e4%b8%80%e4%b8%aa%e8%b4%a6%e6%88%b7%e7%bb%84%e4%bb%b6\"><i class=\"material-icons align-middle\">link</i></a></h3><p>在用户登录后，我们可以让他们编辑他们的个人资料细节和管理他们的账户。</p>\n<p>让我们为其创建一个新的组件，名为<code>Account.js</code>。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"f74d0ae\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> rw g component account\n\n✔ Generating component files<span class=\"token punctuation\">..</span>.\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/components/Account/Account.test.js<span class=\"token variable\">`</span></span>\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/components/Account/Account.stories.js<span class=\"token variable\">`</span></span>\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/components/Account/Account.js<span class=\"token variable\">`</span></span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>然后更新文件，使其包含：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"3759c16\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useState<span class=\"token punctuation\">,</span> useEffect <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useAuth <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@redwoodjs/auth'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Account</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">client</span><span class=\"token operator\">:</span> supabase<span class=\"token punctuation\">,</span> currentUser<span class=\"token punctuation\">,</span> logOut <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>loading<span class=\"token punctuation\">,</span> setLoading<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">,</span> setUsername<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>website<span class=\"token punctuation\">,</span> setWebsite<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>avatar_url<span class=\"token punctuation\">,</span> setAvatarUrl<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getProfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span>session<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getProfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">,</span> status <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase\n        <span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'profiles'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">select</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">username, website, avatar_url</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">eq</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">single</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error <span class=\"token operator\">&amp;&amp;</span> status <span class=\"token operator\">!==</span> <span class=\"token number\">406</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> error\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">setWebsite</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>website<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">setAvatarUrl</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span>avatar_url<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">updateProfile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> username<span class=\"token punctuation\">,</span> website<span class=\"token punctuation\">,</span> avatar_url <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> user <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">user</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">const</span> updates <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">id</span><span class=\"token operator\">:</span> user<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>\n        username<span class=\"token punctuation\">,</span>\n        website<span class=\"token punctuation\">,</span>\n        avatar_url<span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">updated_at</span><span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> error <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'profiles'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">upsert</span><span class=\"token punctuation\">(</span>updates<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">returning</span><span class=\"token operator\">:</span> <span class=\"token string\">'minimal'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Don't return the value after inserting</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> error\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Updated profile!'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setLoading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>row flex-center flex<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>col-6 form-widget<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Supabase + RedwoodJS</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>description<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Your profile</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-widget<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">htmlFor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Email</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>currentUser<span class=\"token punctuation\">.</span>email<span class=\"token punctuation\">}</span></span> <span class=\"token attr-name\">disabled</span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">htmlFor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Name</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n              <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>username<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>username <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">htmlFor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>website<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">Website</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n              <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>website<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>website<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">value</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>website <span class=\"token operator\">||</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">setWebsite</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n            <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span>\n              <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button primary block<span class=\"token punctuation\">\"</span></span>\n              <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">updateProfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> username<span class=\"token punctuation\">,</span> website<span class=\"token punctuation\">,</span> avatar_url <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span>\n              <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>loading<span class=\"token punctuation\">}</span></span>\n            <span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n              </span><span class=\"token punctuation\">{</span>loading <span class=\"token operator\">?</span> <span class=\"token string\">'Loading ...'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Update'</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button block<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onClick</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token function\">logOut</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n              Sign Out\n            </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Account</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>注意：你会在快速入门中多次看到<code>useAuth()</code>的使用。Redwood的<code>useAuth</code>钩子提供了方便的方法来访问\nlogIn, logOut, currentUser，以及访问<code>supabase</code>验证客户端。我们将使用它来获得一个\n的实例来与你的API交互。</p>\n</div>\n</div>\n<h3 id=\"更新主页\">更新主页 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e6%9b%b4%e6%96%b0%e4%b8%bb%e9%a1%b5\"><i class=\"material-icons align-middle\">link</i></a></h3><p>现在我们已经有了所有的组件，让我们更新你的<code>HomePage</code>页面来使用它们。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"988f71d\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useAuth <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@redwoodjs/auth'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> MetaTags <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@redwoodjs/web'</span>\n\n<span class=\"token keyword\">import</span> Account <span class=\"token keyword\">from</span> <span class=\"token string\">'src/components/Account'</span>\n<span class=\"token keyword\">import</span> Auth <span class=\"token keyword\">from</span> <span class=\"token string\">'src/components/Auth'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">HomePage</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> isAuthenticated <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MetaTags</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Welcome<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span><span class=\"token operator\">!</span>isAuthenticated <span class=\"token operator\">?</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Auth</span></span> <span class=\"token punctuation\">/&gt;</span></span> <span class=\"token operator\">:</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Account</span></span> <span class=\"token punctuation\">/&gt;</span></span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> HomePage</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<blockquote>\n<p>我们在这里做的是，如果你没有登录，就显示登录表，如果你登录了，就显示你的账户资料。</p>\n</blockquote>\n<h3 id=\"启动\">启动 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%90%af%e5%8a%a8\"><i class=\"material-icons align-middle\">link</i></a></h3><p>一旦完成，在终端窗口运行这个程序，启动<code>dev</code>服务器。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"69eeb8b\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> rw dev</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>然后打开浏览器到<a href=\"http://localhost:8910\" rel=\"external\" target=\"_blank\">localhost:8910<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>，你应该看到完成的应用程序。</p>\n<img src=\"../../img/supabase-redwoodjs-demo.png\"/>\n<h2 id=\"个人照片\">个人照片 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%b8%aa%e4%ba%ba%e7%85%a7%e7%89%87\"><i class=\"material-icons align-middle\">link</i></a></h2><p>每个Supabase项目都配置了<a data-bs-delay='{\"hide\":300,\"show\":550}' data-bs-html=\"true\" data-bs-title=\"&lt;a href='/docs/app/development_guide/storage/storage/'&gt;&lt;p&gt;对象存储&lt;/p&gt;&lt;strong&gt;概述&lt;/strong&gt;&lt;br&gt;Use Supabase to store and serve files.&lt;/a&gt;\" data-bs-toggle=\"tooltip\" href=\"/docs/app/development_guide/storage/storage/\">存储</a>，用于管理照片和视频等大文件。</p>\n<h3 id=\"创建一个上传小组件\">创建一个上传小组件 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e4%b8%8a%e4%bc%a0%e5%b0%8f%e7%bb%84%e4%bb%b6\"><i class=\"material-icons align-middle\">link</i></a></h3><p>让我们为用户创建一个头像，以便他们可以上传个人资料照片。我们可以从创建一个新的组件开始。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"603487a\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">yarn</span> rw g component avatar\n✔ Generating component files<span class=\"token punctuation\">..</span>.\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/components/Avatar/Avatar.test.js<span class=\"token variable\">`</span></span>\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/components/Avatar/Avatar.stories.js<span class=\"token variable\">`</span></span>\n  ✔ Successfully wrote <span class=\"token function\">file</span> <span class=\"token variable\"><span class=\"token variable\">`</span>./web/src/components/Avatar/Avatar.js<span class=\"token variable\">`</span></span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<p>现在，更新你的 “头像 “组件，使其包含以下小部件。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"a96e766\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useEffect<span class=\"token punctuation\">,</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useAuth <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@redwoodjs/auth'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Avatar</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> url<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> onUpload <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">client</span><span class=\"token operator\">:</span> supabase <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useAuth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>avatarUrl<span class=\"token punctuation\">,</span> setAvatarUrl<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>uploading<span class=\"token punctuation\">,</span> setUploading<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span> <span class=\"token function\">downloadImage</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>url<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">downloadImage</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data<span class=\"token punctuation\">,</span> error <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>storage<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'avatars'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">download</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> error\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n      <span class=\"token function\">setAvatarUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Error downloading image: '</span><span class=\"token punctuation\">,</span> error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">uploadAvatar</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setUploading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files <span class=\"token operator\">||</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'You must select an image to upload.'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token keyword\">const</span> file <span class=\"token operator\">=</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>files<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">const</span> fileExt <span class=\"token operator\">=</span> file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> fileName <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>fileExt<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n      <span class=\"token keyword\">const</span> filePath <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>fileName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n\n      <span class=\"token keyword\">let</span> <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">error</span><span class=\"token operator\">:</span> uploadError <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> supabase<span class=\"token punctuation\">.</span>storage<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span><span class=\"token string\">'avatars'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">upload</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">)</span>\n\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>uploadError<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">throw</span> uploadError\n      <span class=\"token punctuation\">}</span>\n\n      <span class=\"token function\">onUpload</span><span class=\"token punctuation\">(</span>filePath<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">setUploading</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token punctuation\">{</span>avatarUrl <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span>\n          <span class=\"token attr-name\">src</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatarUrl<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>Avatar<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>avatar image<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> size<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> size <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>avatar no-image<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">height</span><span class=\"token operator\">:</span> size<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> size <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">width</span><span class=\"token operator\">:</span> size <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>button primary block<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">htmlFor</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>single<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n          </span><span class=\"token punctuation\">{</span>uploading <span class=\"token operator\">?</span> <span class=\"token string\">'Uploading ...'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'Upload'</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n        </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span>\n          <span class=\"token attr-name\">style</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>\n            <span class=\"token literal-property property\">visibility</span><span class=\"token operator\">:</span> <span class=\"token string\">'hidden'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token literal-property property\">position</span><span class=\"token operator\">:</span> <span class=\"token string\">'absolute'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>file<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>single<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">accept</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>image/*<span class=\"token punctuation\">\"</span></span>\n          <span class=\"token attr-name\">onChange</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>uploadAvatar<span class=\"token punctuation\">}</span></span>\n          <span class=\"token attr-name\">disabled</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>uploading<span class=\"token punctuation\">}</span></span>\n        <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n      </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Avatar</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h3 id=\"添加新的小组件\">添加新的小组件 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e6%b7%bb%e5%8a%a0%e6%96%b0%e7%9a%84%e5%b0%8f%e7%bb%84%e4%bb%b6\"><i class=\"material-icons align-middle\">link</i></a></h3><p>然后我们就可以把这个小部件添加到账户组件中。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-jsx\" id=\"cb88c9e\" tabindex=\"0\"><code class=\"language-jsx\"><span class=\"token comment\">// Import the new component</span>\n<span class=\"token keyword\">import</span> Avatar <span class=\"token keyword\">from</span> <span class=\"token string\">'src/components/Avatar'</span>\n\n<span class=\"token comment\">// ...</span>\n\n<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">className</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>form-widget<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* Add to the body */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n    </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Avatar</span></span>\n      <span class=\"token attr-name\">url</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span>avatar_url<span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">size</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">150</span><span class=\"token punctuation\">}</span></span>\n      <span class=\"token attr-name\">onUpload</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setAvatarUrl</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n        <span class=\"token function\">updateProfile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> username<span class=\"token punctuation\">,</span> website<span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">avatar_url</span><span class=\"token operator\">:</span> url <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span>\n    <span class=\"token punctuation\">/&gt;</span></span><span class=\"token plain-text\">\n    </span><span class=\"token punctuation\">{</span><span class=\"token comment\">/* ... */</span><span class=\"token punctuation\">}</span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"下一步\">下一步 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%b8%8b%e4%b8%80%e6%ad%a5\"><i class=\"material-icons align-middle\">link</i></a></h2><p>在这个阶段，你已经有了一个功能完备的应用程序!</p>\n<ul>\n<li>有问题吗？<a href=\"https://community.memfiredb.com/\" rel=\"external\" target=\"_blank\">在此提问<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>.</li>\n<li>请登录<a href=\"https://cloud.memfiredb.com/\" rel=\"external\" target=\"_blank\">MemFire Cloud<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a></li>\n<li>了解更多关于<a href=\"https://redwoodjs.com\" rel=\"external\" target=\"_blank\">RedwoodJS<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a></li>\n<li>访问<a href=\"https://community.redwoodjs.com\" rel=\"external\" target=\"_blank\">RedwoodJS论述社区<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a></li>\n</ul>\n</div>\n</div>\n<div><hr class=\"doc-hr\"/>\n<div class=\"d-print-none\" id=\"doc-nav\">\n<div class=\"row flex-xl-nowrap\">\n<div class=\"col-sm-6 pt-2 doc-next\">\n<a href=\"/docs/app/quickstart/with-ionic-react/\">\n<div class=\"card h-100 my-1\">\n<div class=\"card-body py-2\">\n<p class=\"card-title fs-5 fw-semibold lh-base mb-0\"><i class=\"material-icons align-middle\">navigate_before</i> 快速入门: Ionic React</p>\n</div>\n</div>\n</a>\n</div>\n<div class=\"col-sm-6 pt-2 doc-prev\">\n<a class=\"ms-auto\" href=\"/docs/app/quickstart/with-solidjs/\">\n<div class=\"card h-100 my-1 text-end\">\n<div class=\"card-body py-2\">\n<p class=\"card-title fs-5 fw-semibold lh-base mb-0\">快速入门: SolidJS <i class=\"material-icons align-middle\">navigate_next</i></p>\n</div>\n</div>\n</a>\n</div>\n</div>\n</div></div>\n</div>\n</div>\n</div>\n</div>\n\n</main>",
  "markdown": "[MemFireDB备份 6](/)\n\nmenu\n\n[官网](https://memfiredb.com/)\n[论坛](https://community.memfiredb.com/)\n[登录](https://cloud.memfiredb.com/auth/login)\n\nEnable dark mode\n\nEnable light mode\n\n本页\n\n介绍\n\n# 快速入门: RedwoodJS\n\n## 介绍 [*link*](#%e4%bb%8b%e7%bb%8d)\n\n为了与其他框架的Quickstart例子保持一致，我们将建立一个RedwoodJS，与正常情况下有点不同。\n\n我们不使用Prisma连接到Supabase Postgres数据库或[Prisma迁移](https://redwoodjs.com/docs/cli-commands#prisma-migrate)，因为在Redwood应用中通常会这样做。\n相反，我们将依靠Supabase客户端在**网络**端做一些工作，并在**API**端再次使用客户端来做数据获取。\n\n这意味着你要避免运行任何 “yarn rw prisma migrate “命令，还要在部署时仔细检查你的构建命令，以确保Prisma不会重置你的数据库。\n\ninfo\n\nTLDR; Prisma目前不支持跨模式外键，所以由于你的Supabase `public`模式是如何引用`auth.users`的，反省模式失败。\n\n这个例子提供了使用Supabase和[RedwoodJS](https://redwoodjs.com/docs/introduction)建立一个简单的用户管理应用程序的步骤（从头开始！）。它包括。\n\n* MemFire Cloud [Database](/docs/app/development_guide/database/database/)：一个用于存储用户数据的Postgres数据库。\n* MemFire Cloud [Auth](/docs/app/development_guide/auth/auth/)：用户可以用魔法链接登录（没有密码，只有电子邮件）。\n* MemFire Cloud [Storage](/docs/app/development_guide/storage/storage/)：用户可以上传照片。\n* Instant [APIs](/docs/app/development_guide/api/api/)。当你创建你的数据库表时，API将自动生成。\n* [行级安全](/docs/app/development_guide/auth/auth/#row-level-security)：数据受到保护，个人只能访问自己的数据。\n\n在本指南结束时，你将拥有一个允许用户登录并更新一些基本资料细节的应用程序。\n\n![](../../img/user-management-demo.png)\n\ninfo\n\n注意：对于RedwoodJS应用程序，端口将是8910。\n\n### GitHub [*link*](#github)\n\n如果你在任何时候被卡住了，请看一下[这个 repo](https://github.com/redwoodjs/redwoodjs-supabase-quickstart)。\n\n## 关于RedwoodJS [*link*](#%e5%85%b3%e4%ba%8eredwoodjs)\n\n一个Redwood应用程序被分成两部分：一个前端和一个后端。这表现为在一个单一的monorepo中的两个node项目。\n\n前台项目被称为\\*\\*`web`**，后台项目被称为**`api`\\*\\*。\n它们是独立的项目，因为 “web端 “的代码最终将在用户的浏览器中运行，而 `api端`的代码将在某个服务器上运行。\n\ninfo\n\n重要提示：当本指南提到 `API`时，指的是Supabase API，当它提到 `api端`时，指的是RedwoodJS `api端`。\n\n\\*\\*`api端`\\*\\*是一个GraphQL API的实现。业务逻辑被组织成 `服务`，代表他们自己的内部API，可以从外部GraphQL请求和其他内部服务中调用。\n\n网络端 “\\*\\*\\*是用React构建的。Redwood的路由器可以简单地将URL路径映射到React的 `页面`组件（并在每个路径上自动分割你的应用代码）。\n页面可以包含一个 `Layout`组件来包装内容。它们还包含 `单元格`和常规的React组件。\n单元允许你声明性地管理一个获取和显示数据的组件的生命周期。\n\ninfo\n\n为了与其他框架的Quickstart例子保持一致，我们将建立一个RedwoodJS，与正常情况下有点不同。\n我们不使用Prisma来连接Supabase Postgres数据库或[Prisma迁移](https://redwoodjs.com/docs/cli-commands#prisma-migrate)，因为在Redwood应用中通常会这样做。\n相反，我们将依靠Supabase客户端来完成\\*\\*`web`**方面的一些工作，并在**`api`\\*\\*方面再次使用客户端来进行数据获取。\n\n## 项目设置 [*link*](#%e9%a1%b9%e7%9b%ae%e8%ae%be%e7%bd%ae)\n\n在我们开始构建之前，我们要设置我们的数据库和API。这就像在Supabase中启动一个新项目一样简单\n然后在数据库中创建一个 “模式”。\n\ninfo\n\n在设置Supabase时，你会与你的项目仪表板互动。然而，大多数RedwoodJS的设置步骤将与[Redwood CLI](https://redwoodjs.com/docs/cli-commands)互动，以生成路由、页面、组件等。\n因此，请确保在你的项目目录中准备好一个终端。\n\n### 创建一个项目 [*link*](#%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e9%a1%b9%e7%9b%ae)\n\n1. 进入[MemFire Cloud](https://cloud.memfiredb.com)。\n2. 点击 `新项目`。\n3. 输入你的项目细节。\n4. 等待新数据库的启动。\n\n### 设置数据库模式 [*link*](#%e8%ae%be%e7%bd%ae%e6%95%b0%e6%8d%ae%e5%ba%93%e6%a8%a1%e5%bc%8f)\n\n现在我们要设置数据库模式。我们可以使用SQL编辑器中的 `用户管理启动器`快速启动。\n或者你可以直接复制/粘贴下面的SQL，然后自己运行它。\n\n1. 进入仪表版中的SQL编辑器页面。\n2. 点击 **用户管理**的模板。\n3. 点击**运行**。\n\n[\n\n](../../videos/sql-user-management-starter.mp4)\n\n```\n-- Create a table for public \"profiles\"\ncreate table profiles (\n  id uuid references auth.users not null,\n  updated_at timestamp with time zone,\n  username text unique,\n  avatar_url text,\n  website text,\n\n  primary key (id),\n  unique(username),\n  constraint username_length check (char_length(username) >= 3)\n);\n\nalter table profiles enable row level security;\n\ncreate policy \"Public profiles are viewable by everyone.\"\n  on profiles for select\n  using ( true );\n\ncreate policy \"Users can insert their own profile.\"\n  on profiles for insert\n  with check ( auth.uid() = id );\n\ncreate policy \"Users can update own profile.\"\n  on profiles for update\n  using ( auth.uid() = id );\n\n-- Set up Realtime!\nbegin;\n  drop publication if exists supabase_realtime;\n  create publication supabase_realtime;\ncommit;\nalter publication supabase_realtime add table profiles;\n\n-- Set up Storage!\ninsert into storage.buckets (id, name)\nvalues ('avatars', 'avatars');\n\ncreate policy \"Avatar images are publicly accessible.\"\n  on storage.objects for select\n  using ( bucket_id = 'avatars' );\n\ncreate policy \"Anyone can upload an avatar.\"\n  on storage.objects for insert\n  with check ( bucket_id = 'avatars' );\n```\n\n#### 关于Prisma和迁移的重要说明 [*link*](#%e5%85%b3%e4%ba%8eprisma%e5%92%8c%e8%bf%81%e7%a7%bb%e7%9a%84%e9%87%8d%e8%a6%81%e8%af%b4%e6%98%8e)\n\ninfo\n\n因为这个快速入门并没有使用Prisma来管理数据库模式、播种或运行迁移，所以在运行一些典型的Redwood CLI命令时，你\\*\\*\\*需要格外小心。\n\n### 获取API密钥 [*link*](#%e8%8e%b7%e5%8f%96api%e5%af%86%e9%92%a5)\n\n现在你已经创建了一些数据库表，你已经准备好使用自动生成的API插入数据。\n我们只需要从API设置中获得URL以及`anon`、`service_role`和`JWT_SECRET`键。\n\n1. 进入仪表板中的`应用设置`->`API`页面。\n2. 在这个页面上找到你的API `URL`, `anon`, 和 `service_role`键。\n\n[\n\n](../../videos/api/api-url-and-key.mp4)\n\n## 构建应用程序 [*link*](#%e6%9e%84%e5%bb%ba%e5%ba%94%e7%94%a8%e7%a8%8b%e5%ba%8f)\n\n让我们开始从头开始构建RedwoodJS应用程序。\n\ninfo\n\nRedwoodJS需要Node.js（>=14.x <=16.x）和Yarn（>=1.15）。\n\n确保你已经安装了yarn，因为RedwoodJS依靠它来[在工作空间中管理它的包](https://classic.yarnpkg.com/lang/en/docs/workspaces/)，用于其`web`和`api`“side”。\n\n### 初始化一个RedwoodJS应用程序 [*link*](#%e5%88%9d%e5%a7%8b%e5%8c%96%e4%b8%80%e4%b8%aaredwoodjs%e5%ba%94%e7%94%a8%e7%a8%8b%e5%ba%8f)\n\n我们可以使用[Create Redwood App](https://redwoodjs.com/docs/quick-start)命令来初始化\n一个名为`supabase-redwoodjs`的应用程序。\n\n```\nyarn create redwood-app supabase-redwoodjs\ncd supabase-redwoodjs\n```\n\n当应用程序正在安装时，你应该看到。\n\n```\n✔ Creating Redwood app\n  ✔ Checking node and yarn compatibility\n  ✔ Creating directory 'supabase-redwoodjs'\n✔ Installing packages\n  ✔ Running 'yarn install'... (This could take a while)\n✔ Convert TypeScript files to JavaScript\n✔ Generating types\n\nThanks for trying out Redwood!\n```\n\n然后让我们通过运行`setup auth`命令来安装唯一的额外依赖[supabase-js](https://github.com/supabase/supabase-js)：\n\n```\nyarn redwood setup auth supabase\n```\n\n当被提示时。\n\n> 覆盖现有的/api/src/lib/auth.[jt]s？\n\n说，**是**，它将在你的应用程序中设置Supabase客户端，并提供用于Supabase验证的钩子。\n\n```\n✔ Generating auth lib...\n✔ Successfully wrote file `./api/src/lib/auth.js`\n✔ Adding auth config to web...\n✔ Adding auth config to GraphQL API...\n✔ Adding required web packages...\n✔ Installing packages...\n✔ One more thing...\n\nYou will need to add your Supabase URL (SUPABASE_URL), public API KEY,\nand JWT SECRET (SUPABASE_KEY, and SUPABASE_JWT_SECRET) to your .env file.\n```\n\n接下来，我们要在`.env`中保存环境变量。\n我们需要`API URL`以及你[早些时候]复制的`anon`和`jwt_secret`键(#get-theapi-keys)。\n\n```\nSUPABASE_URL=YOUR_SUPABASE_URL\nSUPABASE_KEY=YOUR_SUPABASE_ANON_KEY\nSUPABASE_JWT_SECRET=YOUR_SUPABASE_JWT_SECRET\n```\n\n最后，你还需要把\\*\\*\\*的 `网络端`环境变量保存到 `redwood.toml`中。\n\n```\n[web]\n  title = \"Supabase Redwood Quickstart\"\n  port = 8910\n  apiProxyPath = \"/.redwood/functions\"\n  includeEnvironmentVariables = [\"SUPABASE_URL\", \"SUPABASE_KEY\"]\n[api]\n  port = 8911\n[browser]\n  open = true\n```\n\n这些变量将暴露在浏览器上，这完全没有问题。\n它们允许你的Web应用程序使用你的公共匿名密钥初始化Supabase客户端因为我们在数据库中启用了 [行级安全](/docs/app/development_guide/auth/auth/#row-level-security) 。\n\n你会看到这些被用来在`web/src/App.js`中配置你的Supabase客户端。\n\n```\n// ... Redwood imports\nimport { AuthProvider } from '@redwoodjs/auth'\nimport { createClient } from '@supabase/supabase-js'\n\n// ...\n\nconst supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY)\n\nconst App = () => (\n  <FatalErrorBoundary page={FatalErrorPage}>\n    <RedwoodProvider titleTemplate=\"%PageTitle | %AppTitle\">\n      <AuthProvider client={supabase} type=\"supabase\">\n        <RedwoodApolloProvider>\n          <Routes />\n        </RedwoodApolloProvider>\n      </AuthProvider>\n    </RedwoodProvider>\n  </FatalErrorBoundary>\n)\n\nexport default App\n```\n\n还有一个可选的步骤是更新CSS文件`web/src/index.css`以使应用程序看起来漂亮。\n你可以找到这个文件的全部内容[这里](https://raw.githubusercontent.com/supabase/supabase/master/examples/user-management/react-user-management/src/index.css)。\n\n### 启动RedwoodJS和你的第一个页面 [*link*](#%e5%90%af%e5%8a%a8redwoodjs%e5%92%8c%e4%bd%a0%e7%9a%84%e7%ac%ac%e4%b8%80%e4%b8%aa%e9%a1%b5%e9%9d%a2)\n\n让我们通过启动应用程序来测试我们此刻的设置。\n\n```\nyarn rw dev\n```\n\ninfo\n\n注意：你也可以用`rw`来表示`redwood`，如`yarn rw`来运行Redwood CLI命令。\n\n你应该看到一个 `欢迎来到RedwoodJS`的页面和一个关于还没有任何页面的信息。\n\n因此，让我们创建一个 `主页`。\n\n```\nyarn rw generate page home /\n\n✔ Generating page files...\n  ✔ Successfully wrote file `./web/src/pages/HomePage/HomePage.stories.js`\n  ✔ Successfully wrote file `./web/src/pages/HomePage/HomePage.test.js`\n  ✔ Successfully wrote file `./web/src/pages/HomePage/HomePage.js`\n✔ Updating routes file...\n✔ Generating types ...\n```\n\ninfo\n\n注意：这里的斜线`/`很重要，因为它创建了一个根级路由。\n\n如果你想的话，你可以停止`dev`服务器；要看到你的改变，只要确保再次运行`yarn rw dev`。\n\n你应该在`web/src/Routes.js`中看到`Home`页面路由。\n\n```\nimport { Router, Route } from '@redwoodjs/router'\n\nconst Routes = () => {\n  return (\n    <Router>\n      <Route path=\"/\" page={HomePage} name=\"home\" />\n      <Route notfound page={NotFoundPage} />\n    </Router>\n  )\n}\n\nexport default Routes\n```\n\n### 设置一个登录组件 [*link*](#%e8%ae%be%e7%bd%ae%e4%b8%80%e4%b8%aa%e7%99%bb%e5%bd%95%e7%bb%84%e4%bb%b6)\n\n让我们建立一个Redwood组件来管理登录和注册。我们将使用Magic Links，所以用户可以用他们的电子邮件登录，而不需要使用密码。\n\n```\nyarn rw g component auth\n\n✔ Generating component files...\n  ✔ Successfully wrote file `./web/src/components/Auth/Auth.test.js`\n  ✔ Successfully wrote file `./web/src/components/Auth/Auth.stories.js`\n  ✔ Successfully wrote file `./web/src/components/Auth/Auth.js`\n```\n\n现在，更新`Auth.js`组件，包含。\n\n```\nimport { useState } from 'react'\nimport { useAuth } from '@redwoodjs/auth'\n\nconst Auth = () => {\n  const { logIn } = useAuth()\n  const [loading, setLoading] = useState(false)\n  const [email, setEmail] = useState('')\n\n  const handleLogin = async (email) => {\n    try {\n      setLoading(true)\n      const { error } = await logIn({ email })\n      if (error) throw error\n      alert('Check your email for the login link!')\n    } catch (error) {\n      alert(error.error_description || error.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"row flex-center flex\">\n      <div className=\"col-6 form-widget\">\n        <h1 className=\"header\">Supabase + RedwoodJS</h1>\n        <p className=\"description\">Sign in via magic link with your email below</p>\n        <div>\n          <input\n            className=\"inputField\"\n            type=\"email\"\n            placeholder=\"Your email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n        </div>\n        <div>\n          <button\n            onClick={(e) => {\n              e.preventDefault()\n              handleLogin(email)\n            }}\n            className={'button block'}\n            disabled={loading}\n          >\n            {loading ? <span>Loading</span> : <span>Send magic link</span>}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Auth\n```\n\n### 设置一个账户组件 [*link*](#%e8%ae%be%e7%bd%ae%e4%b8%80%e4%b8%aa%e8%b4%a6%e6%88%b7%e7%bb%84%e4%bb%b6)\n\n在用户登录后，我们可以让他们编辑他们的个人资料细节和管理他们的账户。\n\n让我们为其创建一个新的组件，名为`Account.js`。\n\n```\nyarn rw g component account\n\n✔ Generating component files...\n  ✔ Successfully wrote file `./web/src/components/Account/Account.test.js`\n  ✔ Successfully wrote file `./web/src/components/Account/Account.stories.js`\n  ✔ Successfully wrote file `./web/src/components/Account/Account.js`\n```\n\n然后更新文件，使其包含：\n\n```\nimport { useState, useEffect } from 'react'\nimport { useAuth } from '@redwoodjs/auth'\n\nconst Account = () => {\n  const { client: supabase, currentUser, logOut } = useAuth()\n  const [loading, setLoading] = useState(true)\n  const [username, setUsername] = useState(null)\n  const [website, setWebsite] = useState(null)\n  const [avatar_url, setAvatarUrl] = useState(null)\n\n  useEffect(() => {\n    getProfile()\n  }, [supabase.auth.session])\n\n  async function getProfile() {\n    try {\n      setLoading(true)\n      const user = supabase.auth.user()\n\n      let { data, error, status } = await supabase\n        .from('profiles')\n        .select(`username, website, avatar_url`)\n        .eq('id', user.id)\n        .single()\n\n      if (error && status !== 406) {\n        throw error\n      }\n\n      if (data) {\n        setUsername(data.username)\n        setWebsite(data.website)\n        setAvatarUrl(data.avatar_url)\n      }\n    } catch (error) {\n      alert(error.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  async function updateProfile({ username, website, avatar_url }) {\n    try {\n      setLoading(true)\n      const user = supabase.auth.user()\n\n      const updates = {\n        id: user.id,\n        username,\n        website,\n        avatar_url,\n        updated_at: new Date(),\n      }\n\n      let { error } = await supabase.from('profiles').upsert(updates, {\n        returning: 'minimal', // Don't return the value after inserting\n      })\n\n      if (error) {\n        throw error\n      }\n\n      alert('Updated profile!')\n    } catch (error) {\n      alert(error.message)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <div className=\"row flex-center flex\">\n      <div className=\"col-6 form-widget\">\n        <h1 className=\"header\">Supabase + RedwoodJS</h1>\n        <p className=\"description\">Your profile</p>\n        <div className=\"form-widget\">\n          <div>\n            <label htmlFor=\"email\">Email</label>\n            <input id=\"email\" type=\"text\" value={currentUser.email} disabled />\n          </div>\n          <div>\n            <label htmlFor=\"username\">Name</label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              value={username || ''}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n          </div>\n          <div>\n            <label htmlFor=\"website\">Website</label>\n            <input\n              id=\"website\"\n              type=\"website\"\n              value={website || ''}\n              onChange={(e) => setWebsite(e.target.value)}\n            />\n          </div>\n\n          <div>\n            <button\n              className=\"button primary block\"\n              onClick={() => updateProfile({ username, website, avatar_url })}\n              disabled={loading}\n            >\n              {loading ? 'Loading ...' : 'Update'}\n            </button>\n          </div>\n\n          <div>\n            <button className=\"button block\" onClick={() => logOut()}>\n              Sign Out\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Account\n```\n\ninfo\n\n注意：你会在快速入门中多次看到`useAuth()`的使用。Redwood的`useAuth`钩子提供了方便的方法来访问\nlogIn, logOut, currentUser，以及访问`supabase`验证客户端。我们将使用它来获得一个\n的实例来与你的API交互。\n\n### 更新主页 [*link*](#%e6%9b%b4%e6%96%b0%e4%b8%bb%e9%a1%b5)\n\n现在我们已经有了所有的组件，让我们更新你的`HomePage`页面来使用它们。\n\n```\nimport { useAuth } from '@redwoodjs/auth'\nimport { MetaTags } from '@redwoodjs/web'\n\nimport Account from 'src/components/Account'\nimport Auth from 'src/components/Auth'\n\nconst HomePage = () => {\n  const { isAuthenticated } = useAuth()\n\n  return (\n    <>\n      <MetaTags title=\"Welcome\" />\n      {!isAuthenticated ? <Auth /> : <Account />}\n    </>\n  )\n}\n\nexport default HomePage\n```\n\n> 我们在这里做的是，如果你没有登录，就显示登录表，如果你登录了，就显示你的账户资料。\n\n### 启动 [*link*](#%e5%90%af%e5%8a%a8)\n\n一旦完成，在终端窗口运行这个程序，启动`dev`服务器。\n\n```\nyarn rw dev\n```\n\n然后打开浏览器到[localhost:8910](http://localhost:8910)，你应该看到完成的应用程序。\n\n![](../../img/supabase-redwoodjs-demo.png)\n\n## 个人照片 [*link*](#%e4%b8%aa%e4%ba%ba%e7%85%a7%e7%89%87)\n\n每个Supabase项目都配置了[存储](/docs/app/development_guide/storage/storage/)，用于管理照片和视频等大文件。\n\n### 创建一个上传小组件 [*link*](#%e5%88%9b%e5%bb%ba%e4%b8%80%e4%b8%aa%e4%b8%8a%e4%bc%a0%e5%b0%8f%e7%bb%84%e4%bb%b6)\n\n让我们为用户创建一个头像，以便他们可以上传个人资料照片。我们可以从创建一个新的组件开始。\n\n```\nyarn rw g component avatar\n✔ Generating component files...\n  ✔ Successfully wrote file `./web/src/components/Avatar/Avatar.test.js`\n  ✔ Successfully wrote file `./web/src/components/Avatar/Avatar.stories.js`\n  ✔ Successfully wrote file `./web/src/components/Avatar/Avatar.js`\n```\n\n现在，更新你的 “头像 “组件，使其包含以下小部件。\n\n```\nimport { useEffect, useState } from 'react'\nimport { useAuth } from '@redwoodjs/auth'\n\nconst Avatar = ({ url, size, onUpload }) => {\n  const { client: supabase } = useAuth()\n\n  const [avatarUrl, setAvatarUrl] = useState(null)\n  const [uploading, setUploading] = useState(false)\n\n  useEffect(() => {\n    if (url) downloadImage(url)\n  }, [url])\n\n  async function downloadImage(path) {\n    try {\n      const { data, error } = await supabase.storage.from('avatars').download(path)\n      if (error) {\n        throw error\n      }\n      const url = URL.createObjectURL(data)\n      setAvatarUrl(url)\n    } catch (error) {\n      console.log('Error downloading image: ', error.message)\n    }\n  }\n\n  async function uploadAvatar(event) {\n    try {\n      setUploading(true)\n\n      if (!event.target.files || event.target.files.length === 0) {\n        throw new Error('You must select an image to upload.')\n      }\n\n      const file = event.target.files[0]\n      const fileExt = file.name.split('.').pop()\n      const fileName = `${Math.random()}.${fileExt}`\n      const filePath = `${fileName}`\n\n      let { error: uploadError } = await supabase.storage.from('avatars').upload(filePath, file)\n\n      if (uploadError) {\n        throw uploadError\n      }\n\n      onUpload(filePath)\n    } catch (error) {\n      alert(error.message)\n    } finally {\n      setUploading(false)\n    }\n  }\n\n  return (\n    <div>\n      {avatarUrl ? (\n        <img\n          src={avatarUrl}\n          alt=\"Avatar\"\n          className=\"avatar image\"\n          style={{ height: size, width: size }}\n        />\n      ) : (\n        <div className=\"avatar no-image\" style={{ height: size, width: size }} />\n      )}\n      <div style={{ width: size }}>\n        <label className=\"button primary block\" htmlFor=\"single\">\n          {uploading ? 'Uploading ...' : 'Upload'}\n        </label>\n        <input\n          style={{\n            visibility: 'hidden',\n            position: 'absolute',\n          }}\n          type=\"file\"\n          id=\"single\"\n          accept=\"image/*\"\n          onChange={uploadAvatar}\n          disabled={uploading}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Avatar\n```\n\n### 添加新的小组件 [*link*](#%e6%b7%bb%e5%8a%a0%e6%96%b0%e7%9a%84%e5%b0%8f%e7%bb%84%e4%bb%b6)\n\n然后我们就可以把这个小部件添加到账户组件中。\n\n```\n// Import the new component\nimport Avatar from 'src/components/Avatar'\n\n// ...\n\nreturn (\n  <div className=\"form-widget\">\n    {/* Add to the body */}\n    <Avatar\n      url={avatar_url}\n      size={150}\n      onUpload={(url) => {\n        setAvatarUrl(url)\n        updateProfile({ username, website, avatar_url: url })\n      }}\n    />\n    {/* ... */}\n  </div>\n)\n```\n\n## 下一步 [*link*](#%e4%b8%8b%e4%b8%80%e6%ad%a5)\n\n在这个阶段，你已经有了一个功能完备的应用程序!\n\n* 有问题吗？[在此提问](https://community.memfiredb.com/).\n* 请登录[MemFire Cloud](https://cloud.memfiredb.com/)\n* 了解更多关于[RedwoodJS](https://redwoodjs.com)\n* 访问[RedwoodJS论述社区](https://community.redwoodjs.com)\n\n---\n\n[*navigate\\_before* 快速入门: Ionic React](/docs/app/quickstart/with-ionic-react/)\n\n[快速入门: SolidJS *navigate\\_next*](/docs/app/quickstart/with-solidjs/)"
}