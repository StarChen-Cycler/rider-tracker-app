{
  "url": "https://docs.memfiredb.com/docs/app/development_guide/realtime/guides/postgres-changes/",
  "title": "Postgres 更改 | MemFire Cloud在线文档",
  "depth": 1,
  "timestamp": "2025-08-12 17:43:21",
  "html": "<main class=\"page-content bg-transparent\">\n<div class=\"top-header d-print-none\" id=\"top-header\">\n<div class=\"header-bar d-flex justify-content-between\">\n<div class=\"d-flex align-items-center\">\n<a alt=\"HomePage\" aria-label=\"HomePage\" class=\"logo-icon me-3\" href=\"/\">\n<div class=\"small\">\n<!--?xml version=\"1.0\" encoding=\"UTF-8\"?-->\n<svg height=\"112px\" version=\"1.1\" viewbox=\"0 0 99 112\" width=\"99px\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n<title>MemFireDB备份 6</title>\n<defs>\n<lineargradient id=\"linearGradient-1\" x1=\"49.9999885%\" x2=\"49.9999885%\" y1=\"98.082503%\" y2=\"0.766550128%\">\n<stop offset=\"0%\" stop-color=\"#ED1C23\"></stop>\n<stop offset=\"100%\" stop-color=\"#FBAF3B\"></stop>\n</lineargradient>\n</defs>\n<g fill=\"none\" fill-rule=\"evenodd\" id=\"定稿\" stroke=\"none\" stroke-width=\"1\">\n<g id=\"MemFireDB备份-6\">\n<polygon fill=\"#F9AE7C\" id=\"Fill-1\" points=\"25.9728553 40.7912363 47.4268317 0.00591833831 1.15453123 26.7215251\"></polygon>\n<polygon fill=\"#F9AE7C\" id=\"Fill-3\" points=\"97.4213117 26.7267606 51.1285247 0.000910513587 72.4242993 40.8351686\"></polygon>\n<polygon fill=\"#F9904A\" id=\"Fill-5\" points=\"24.8347133 42.7618153 0.000455256793 28.682999 0.000455256793 82.1608764\"></polygon>\n<polygon fill=\"url(#linearGradient-1)\" id=\"Fill-7\" points=\"27.6634514 42.4662399 49.279044 109.05096 70.7296059 42.507213 49.2779058 1.3747617\"></polygon>\n<polygon fill=\"#F9904A\" id=\"Fill-9\" points=\"98.5660549 28.6951771 73.5622137 42.8047233 98.5660549 82.1719163\"></polygon>\n<polygon fill=\"#FB6D33\" id=\"Fill-13\" points=\"72.2987623 45.061545 50.7514582 111.900071 97.579172 84.8646465\"></polygon>\n<polygon fill=\"#FB6D33\" id=\"Fill-15\" points=\"26.1006687 45.0226206 0.987565799 84.8644188 47.8095888 111.898705\"></polygon>\n<path d=\"M60.0737516,38.507213 C59.3168872,35.669825 57.0462939,33.3514298 57.0462939,33.3514298 C57.0462939,33.3514298 57.0804382,35.8849338 56.2894295,37.513615 C55.4847631,39.1696116 53.8765685,40.3054773 53.8765685,40.3054773 C53.8765685,40.3054773 56.1016361,33.8840802 54.2715038,30.1247973 C52.0259496,25.5073552 49.1771803,23.3357803 49.1771803,23.3357803 C49.1771803,23.3357803 50.1070423,28.1319107 48.6240432,31.5065016 C47.1672215,34.8264618 42.8058614,36.7260208 40.7241997,38.7132167 C39.1865699,40.1791435 38.0814341,43.0711623 37.6068289,44.4847347 C37.5715465,44.5883056 37.560165,44.6918765 37.5533362,44.7943093 C37.584066,43.9816759 37.8890881,39.8024186 40.9654858,37.4293925 C43.8404325,35.2111538 41.2431925,30.3478731 41.2431925,30.3478731 C41.2431925,30.3478731 41.7212121,32.5638355 40.9939394,34.1401622 C40.2655285,35.7153507 38.7187936,36.5962726 38.0154218,38.259098 C37.3883056,39.7409589 37.5203301,44.1432921 37.5453692,44.8409731 C37.5453692,44.8591834 37.5476455,44.8762555 37.5476455,44.8921895 C37.5476455,44.9263338 37.5487836,44.9456822 37.5487836,44.9456822 L37.5487836,44.9115379 C37.5590269,45.2655001 37.7138142,45.6080808 37.9972116,45.8448143 L48.3713757,55.6442168 C48.8380139,56.0323232 49.5163466,56.0334614 49.9841229,55.6476312 L60.5938825,45.7105136 C60.9034571,45.4544316 61.0719021,45.0686015 61.0457249,44.6656992 C60.9546735,43.2282259 60.5699815,40.3692133 60.0737516,38.507213\" fill=\"#FFFFFF\" id=\"Fill-17\"></path>\n</g>\n</g>\n</svg>\n</div>\n<div class=\"big\">\n<svg height=\"20\" width=\"232\" xmlns=\"http://www.w3.org/2000/svg\"><defs><lineargradient id=\"a\" x1=\"50%\" x2=\"50%\" y1=\"98.083%\" y2=\".767%\"><stop offset=\"0%\" stop-color=\"#ED1C23\"></stop><stop offset=\"100%\" stop-color=\"#FBAF3B\"></stop></lineargradient></defs><g fill=\"none\" fill-rule=\"evenodd\"><path d=\"M78.622 12.384l1.596 21.94H77.49l-.847-14.154-8.98 15.523-4.899-15.53-4.416 14.162H55.6l7.085-21.871 5.712 17.174 10.224-17.244zm99.46.382l.324.01.454.036c.085.008.175.018.269.03l.61.096c1.09.203 2.518.644 3.883 1.596l.515.383-.46 3.694-.413-.62-.154-.195-.255-.285c-.765-.802-2.485-2.188-5.23-2.188-4.55 0-8.723 3.809-9.3 8.491-.287 2.311.334 4.469 1.755 6.077 1.342 1.517 3.257 2.354 5.39 2.354 2.606 0 4.58-1.225 5.606-2.04l.359-.3.424-.408.507-.552-.466 3.766-.093.06a12.622 12.622 0 01-4.577 1.842l-.629.1-.53.058-.418.027-.444.003c-2.918-.002-5.532-1.142-7.36-3.21-1.851-2.096-2.67-4.88-2.305-7.837.73-5.88 5.964-10.696 11.806-10.974l.732-.014zm18.174 9.018c1.724 0 3.344.713 4.443 1.956 1.101 1.248 1.59 2.88 1.377 4.596-.432 3.504-3.808 6.466-7.375 6.466-1.728 0-3.348-.715-4.45-1.96-1.096-1.242-1.583-2.864-1.377-4.563.44-3.52 3.818-6.495 7.382-6.495zm19.446.535l-1.486 12.02h-2.558l.16-1.292c-.936.93-2.462 1.755-4.173 1.755-1.318 0-2.48-.492-3.267-1.385-.804-.91-1.168-2.184-1.008-3.497l.9-7.274 2.597-.327-.914 7.402c-.101.785.084 1.466.525 1.968.49.552 1.27.845 2.25.845 1.526 0 3.3-1.155 3.51-2.873l.87-7.015 2.594-.327zm-63.587-.547c1.77 0 3.21.58 4.164 1.678 1.047 1.207 1.48 3.01 1.263 5.233l-.097.771h-9.914c.16 1.896 1.567 2.979 3.895 2.979 1.806 0 2.878-.434 3.868-.961l1.119-.623-.312 2.522-.106.06c-1.224.687-2.604 1.356-4.8 1.356-2.092 0-3.873-.708-5.006-1.992-.991-1.12-1.404-2.599-1.198-4.272.548-4.433 4.001-6.751 7.124-6.751zm-62.717 0c1.771 0 3.211.58 4.164 1.678 1.048 1.207 1.48 3.01 1.263 5.233l-.097.771h-9.914c.16 1.896 1.567 2.979 3.895 2.979 1.622 0 2.652-.35 3.563-.803l.594-.315.83-.466-.312 2.522-.105.06c-1.224.687-2.604 1.356-4.8 1.356-2.093 0-3.874-.708-5.007-1.992-.99-1.12-1.404-2.599-1.197-4.272.547-4.433 4-6.751 7.123-6.751zM231.476 12l-2.767 22.34h-2.556l.197-1.59c-1.104 1.191-2.882 2.021-4.471 2.021-1.781 0-3.24-.583-4.217-1.69-1.02-1.151-1.452-2.817-1.222-4.686.485-3.908 3.43-6.636 7.167-6.636 1.565 0 3.065.832 3.852 2.064l1.356-10.968 2.661-.855zm-42.07.002L186.64 34.34h-2.556l2.664-21.483 2.66-.854zm-56.632 1.268l-1.166 2.527h-9.586l-.85 6.867h6.627v.48h-.12l-.883 1.778v.24h-5.933l-1.138 9.163h-2.729l2.612-21.055h13.166zm2.715 9.038l-1.497 12.017h-2.559l1.455-11.722 2.601-.295zm-24.427-.537c1 0 1.93.427 2.616 1.204.84.95 1.224 2.29 1.053 3.677l-.955 7.673h-2.527l.922-7.445c.13-1.017-.027-1.81-.45-2.287-.326-.367-.815-.554-1.458-.554-1.954 0-3.178 1.346-3.332 2.613l-.955 7.673h-2.556l.922-7.445c.127-1.03-.024-1.826-.442-2.297-.319-.362-.801-.544-1.437-.544-1.522 0-3.3 1.166-3.516 2.901l-.912 7.385h-2.559l1.455-11.722 2.594-.295-.146 1.164c1.027-1.077 2.419-1.701 3.854-1.701 1.375 0 2.58.79 3.226 2.083.914-1.13 2.05-2.083 4.603-2.083zm29.487.532l-.206 1.73c1.082-.978 2.932-1.7 4.514-1.7h.269l-.271 2.282h-.214c-1.814 0-4.469.837-4.7 2.7l-.866 7.01h-2.558l1.45-11.693 2.582-.329zm55.47 1.865c-2.31 0-4.27 1.792-4.563 4.168-.144 1.145.15 2.196.824 2.957.64.725 1.586 1.126 2.656 1.126 2.292 0 4.241-1.78 4.532-4.14.146-1.169-.144-2.237-.821-3.003-.634-.715-1.567-1.108-2.628-1.108zm27.497-.029c-2.278 0-4.15 1.752-4.45 4.17-.149 1.187.137 2.255.8 3.006.611.692 1.526 1.076 2.57 1.076 2.294 0 4.173-1.743 4.468-4.143.152-1.21-.13-2.285-.79-3.033-.623-.704-1.52-1.076-2.598-1.076zm-134.356.045c-1.89 0-3.372 1.094-4.015 2.947h7.164a2.853 2.853 0 00-.71-1.956c-.574-.648-1.416-.991-2.439-.991zm62.715 0c-1.892 0-3.37 1.094-4.013 2.947h7.166a2.867 2.867 0 00-.713-1.956c-.573-.648-1.416-.991-2.44-.991zm-17.267-7.614c.919 0 1.706.748 1.754 1.668a1.587 1.587 0 01-1.603 1.692c-.917 0-1.704-.75-1.754-1.668a1.593 1.593 0 011.603-1.692z\" fill=\"#116\"></path><path d=\"M11.131 17.482L20.326.002.495 11.453zm30.621-6.028L21.912 0l9.127 17.5z\" fill=\"#F9AE7C\"></path><path d=\"M10.643 18.326L0 12.293v22.919z\" fill=\"#F9904A\"></path><path d=\"M11.856 18.2l9.264 28.536 9.193-28.519L21.119.59z\" fill=\"url(#a)\"></path><path d=\"M42.243 12.298l-10.716 6.047 10.716 16.872z\" fill=\"#F9904A\"></path><path d=\"M30.985 19.312l-9.234 28.645L41.82 36.371zm-19.799-.017L.423 36.37 20.49 47.957z\" fill=\"#FB6D33\"></path><path d=\"M25.746 16.503c-.324-1.216-1.298-2.21-1.298-2.21s.015 1.086-.324 1.784c-.345.71-1.034 1.197-1.034 1.197s.954-2.752.17-4.363c-.963-1.98-2.184-2.91-2.184-2.91s.398 2.056-.237 3.502c-.624 1.423-2.494 2.237-3.386 3.088-.659.629-1.132 1.868-1.336 2.474a.509.509 0 00-.023.133c.013-.349.144-2.14 1.463-3.157 1.232-.95.119-3.035.119-3.035s.205.95-.107 1.625c-.312.676-.975 1.053-1.277 1.766-.268.635-.212 2.522-.201 2.82v.023l.001.022v-.014a.54.54 0 00.193.4l4.446 4.2c.2.166.49.166.69.001l4.548-4.259a.535.535 0 00.193-.448c-.039-.616-.203-1.84-.416-2.639\" fill=\"#FFF\"></path></g></svg>\n</div>\n</a>\n<button class=\"btn btn-icon btn-soft\" id=\"close-sidebar\">\n<span class=\"material-icons size-20 menu-icon align-middle\">menu</span>\n</button>\n</div>\n<div class=\"d-flex align-items-center\">\n<ul class=\"list-unstyled mb-0\">\n</ul>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://memfiredb.com/\" target=\"_blank\" type=\"button\">官网</a>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://community.memfiredb.com/\" target=\"_blank\" type=\"button\">论坛</a>\n<a class=\"btn btn-icon btn-default ms-4\" href=\"https://cloud.memfiredb.com/auth/login\" target=\"_blank\" type=\"button\">登录</a>\n<button aria-label=\"Toggle user interface mode\" class=\"btn btn-icon btn-default ms-2\" id=\"mode\" type=\"button\">\n<span class=\"toggle-dark\">\n<svg fill=\"currentColor\" height=\"30\" viewbox=\"0 0 48 48\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\n<title>Enable dark mode</title>\n<path d=\"M24 42q-7.5 0-12.75-5.25T6 24q0-7.5 5.25-12.75T24 6q.4 0 .85.025.45.025 1.15.075-1.8 1.6-2.8 3.95-1 2.35-1 4.95 0 4.5 3.15 7.65Q28.5 25.8 33 25.8q2.6 0 4.95-.925T41.9 22.3q.05.6.075.975Q42 23.65 42 24q0 7.5-5.25 12.75T24 42Zm0-3q5.45 0 9.5-3.375t5.05-7.925q-1.25.55-2.675.825Q34.45 28.8 33 28.8q-5.75 0-9.775-4.025T19.2 15q0-1.2.25-2.575.25-1.375.9-3.125-4.9 1.35-8.125 5.475Q9 18.9 9 24q0 6.25 4.375 10.625T24 39Zm-.2-14.85Z\"></path>\n</svg>\n</span>\n<span class=\"toggle-light\">\n<svg fill=\"currentColor\" height=\"30\" viewbox=\"0 0 48 48\" width=\"30\" xmlns=\"http://www.w3.org/2000/svg\">\n<title>Enable light mode</title>\n<path d=\"M24 31q2.9 0 4.95-2.05Q31 26.9 31 24q0-2.9-2.05-4.95Q26.9 17 24 17q-2.9 0-4.95 2.05Q17 21.1 17 24q0 2.9 2.05 4.95Q21.1 31 24 31Zm0 3q-4.15 0-7.075-2.925T14 24q0-4.15 2.925-7.075T24 14q4.15 0 7.075 2.925T34 24q0 4.15-2.925 7.075T24 34ZM3.5 25.5q-.65 0-1.075-.425Q2 24.65 2 24q0-.65.425-1.075Q2.85 22.5 3.5 22.5h5q.65 0 1.075.425Q10 23.35 10 24q0 .65-.425 1.075-.425.425-1.075.425Zm36 0q-.65 0-1.075-.425Q38 24.65 38 24q0-.65.425-1.075.425-.425 1.075-.425h5q.65 0 1.075.425Q46 23.35 46 24q0 .65-.425 1.075-.425.425-1.075.425ZM24 10q-.65 0-1.075-.425Q22.5 9.15 22.5 8.5v-5q0-.65.425-1.075Q23.35 2 24 2q.65 0 1.075.425.425.425.425 1.075v5q0 .65-.425 1.075Q24.65 10 24 10Zm0 36q-.65 0-1.075-.425-.425-.425-.425-1.075v-5q0-.65.425-1.075Q23.35 38 24 38q.65 0 1.075.425.425.425.425 1.075v5q0 .65-.425 1.075Q24.65 46 24 46ZM12 14.1l-2.85-2.8q-.45-.45-.425-1.075.025-.625.425-1.075.45-.45 1.075-.45t1.075.45L14.1 12q.4.45.4 1.05 0 .6-.4 1-.4.45-1.025.45-.625 0-1.075-.4Zm24.7 24.75L33.9 36q-.4-.45-.4-1.075t.45-1.025q.4-.45 1-.45t1.05.45l2.85 2.8q.45.45.425 1.075-.025.625-.425 1.075-.45.45-1.075.45t-1.075-.45ZM33.9 14.1q-.45-.45-.45-1.05 0-.6.45-1.05l2.8-2.85q.45-.45 1.075-.425.625.025 1.075.425.45.45.45 1.075t-.45 1.075L36 14.1q-.4.4-1.025.4-.625 0-1.075-.4ZM9.15 38.85q-.45-.45-.45-1.075t.45-1.075L12 33.9q.45-.45 1.05-.45.6 0 1.05.45.45.45.45 1.05 0 .6-.45 1.05l-2.8 2.85q-.45.45-1.075.425-.625-.025-1.075-.425ZM24 24Z\"></path>\n</svg>\n</span>\n</button>\n</div>\n</div>\n</div>\n<div class=\"container-fluid\">\n<div class=\"layout-spacing\">\n<div class=\"d-md-flex justify-content-between align-items-center\"></div>\n<div class=\"row flex-xl-nowrap\">\n<div class=\"docs-toc col-xl-3 d-xl-block\"><toc>\n<div class=\"fw-bold text-uppercase mb-2\">本页</div>\n\n</toc></div>\n<div class=\"docs-toc-mobile d-print-none d-xl-none\">\n<button aria-expanded=\"false\" class=\"btn-secondary dropdown-toggle\" data-bs-offset=\"0,0\" data-bs-toggle=\"dropdown\" id=\"toc-dropdown-btn\" type=\"button\">快速入门</button>\n</div>\n<div class=\"docs-content col-12 col-xl-9 mt-0\">\n<div class=\"mb-0 d-flex\">\n<h1 class=\"content-title mb-0\">\n                                                    Postgres 更改\n                                                    \n                                                </h1>\n</div>\n<div class=\"main-content\" data-bs-root-margin=\"0px 0px -65%\" data-bs-spy=\"scroll\" data-bs-target=\"#toc-mobile\" id=\"content\">\n<div data-prismjs-copy=\"\" data-prismjs-copy-error=\"\" data-prismjs-copy-success=\"\">\n<p>让我们探讨如何使用 Realtime 的 Postgres Changes 功能来监听数据库事件。</p>\n<h2 id=\"快速入门\">快速入门 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%bf%ab%e9%80%9f%e5%85%a5%e9%97%a8\"><i class=\"material-icons align-middle\">link</i></a></h2><p>在此示例中，我们将设置一个数据库表，使用行级别安全性保护它，并使用 MemFire Cloud 客户端库订阅所有更改。</p>\n<h2 id=\"step1使用todos表设置-memfire-cloud-项目\">step1:使用“todos”表设置 MemFire Cloud 项目 <a aria-hidden=\"true\" class=\"anchor\" href=\"#step1%e4%bd%bf%e7%94%a8todos%e8%a1%a8%e8%ae%be%e7%bd%ae-memfire-cloud-%e9%a1%b9%e7%9b%ae\"><i class=\"material-icons align-middle\">link</i></a></h2><p><a href=\"https://cloud.memfiredb.com/project\" rel=\"external\" target=\"_blank\">创建一个新项目<svg height=\"16\" viewbox=\"0 0 24 24\" width=\"16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M14 5c-.552 0-1-.448-1-1s.448-1 1-1h6c.552 0 1 .448 1 1v6c0 .552-.448 1-1 1s-1-.448-1-1v-3.586l-7.293 7.293c-.391.39-1.024.39-1.414 0-.391-.391-.391-1.024 0-1.414l7.293-7.293h-3.586zm-9 2c-.552 0-1 .448-1 1v11c0 .552.448 1 1 1h11c.552 0 1-.448 1-1v-4.563c0-.552.448-1 1-1s1 .448 1 1v4.563c0 1.657-1.343 3-3 3h-11c-1.657 0-3-1.343-3-3v-11c0-1.657 1.343-3 3-3h4.563c.552 0 1 .448 1 1s-.448 1-1 1h-4.563z\" fill=\"currentColor\"></path></svg></a>.</p>\n<p>项目准备就绪后，在MemFire Cloud数据库中创建一个表。您可以使用 Table 接口或 SQL 编辑器执行此操作。</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"deafbc\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-sql\" id=\"40b5f99\" tabindex=\"0\"><code class=\"language-sql\"><span class=\"token comment\">-- Create a table called \"todos\"</span>\n<span class=\"token comment\">-- with a column to store tasks.</span>\n<span class=\"token keyword\">create</span> <span class=\"token keyword\">table</span> todos <span class=\"token punctuation\">(</span>\n  id <span class=\"token keyword\">serial</span> <span class=\"token keyword\">primary</span> <span class=\"token keyword\">key</span><span class=\"token punctuation\">,</span>\n  task <span class=\"token keyword\">text</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"faedcb\" role=\"tabpanel\">\n<video controls=\"{true}\" muted=\"\" playsinline=\"\" width=\"99%\">\n<source src=\"https://xguihxuzqibwxjnimxev.supabase.co/storage/v1/object/public/videos/docs/api/api-create-table-sm.mp4\" type=\"video/mp4\"/>\n</video>\n</div>\n</div>\n<h2 id=\"step2允许匿名访问\">step2:允许匿名访问 <a aria-hidden=\"true\" class=\"anchor\" href=\"#step2%e5%85%81%e8%ae%b8%e5%8c%bf%e5%90%8d%e8%ae%bf%e9%97%ae\"><i class=\"material-icons align-middle\">link</i></a></h2><p>在此示例中，我们将为此表启用<a data-bs-delay='{\"hide\":300,\"show\":550}' data-bs-html=\"true\" data-bs-title=\"&lt;a href='/docs/app/development_guide/auth/mandates/row-level-security/'&gt;&lt;p&gt;授权&lt;/p&gt;&lt;strong&gt;行级别安全性&lt;/strong&gt;&lt;br&gt;使用Postgres行级安全保护您的数据。&lt;/a&gt;\" data-bs-toggle=\"tooltip\" href=\"/docs/app/development_guide/auth/mandates/row-level-security/\">行级别安全</a>性并允许匿名访问。在生产环境中，请务必使用适当的权限保护应用程序。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-sql\" id=\"ff2cad0\" tabindex=\"0\"><code class=\"language-sql\"><span class=\"token comment\">-- Turn on security</span>\n<span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span> <span class=\"token string\">\"todos\"</span>\n<span class=\"token keyword\">enable</span> <span class=\"token keyword\">row</span> <span class=\"token keyword\">level</span> security<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">-- Allow anonymous access</span>\n<span class=\"token keyword\">create</span> policy <span class=\"token string\">\"Allow anonymous access\"</span>\n<span class=\"token keyword\">on</span> todos\n<span class=\"token keyword\">for</span> <span class=\"token keyword\">select</span>\n<span class=\"token keyword\">to</span> anon\n<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"step3启用-postgres-复制\">step3:启用 Postgres 复制 <a aria-hidden=\"true\" class=\"anchor\" href=\"#step3%e5%90%af%e7%94%a8-postgres-%e5%a4%8d%e5%88%b6\"><i class=\"material-icons align-middle\">link</i></a></h2><p>转到项目的’数据库’-&gt;[Replication]设置，然后在<code>supabase_realtime</code>下，打开要收听的表。</p>\n<h2 id=\"step4安装客户端\">step4:安装客户端 <a aria-hidden=\"true\" class=\"anchor\" href=\"#step4%e5%ae%89%e8%a3%85%e5%ae%a2%e6%88%b7%e7%ab%af\"><i class=\"material-icons align-middle\">link</i></a></h2><p>安装 Supabase JavaScript 客户端。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-bash\" id=\"6de869e\" tabindex=\"0\"><code class=\"language-bash\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> @supabase/supabase-js</code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"step5创建客户端\">step5:创建客户端 <a aria-hidden=\"true\" class=\"anchor\" href=\"#step5%e5%88%9b%e5%bb%ba%e5%ae%a2%e6%88%b7%e7%ab%af\"><i class=\"material-icons align-middle\">link</i></a></h2><p>此客户端将用于侦听 Postgres 更改。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"45dc962\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createClient <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'@supabase/supabase-js'</span>\n\n<span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'https://&lt;project&gt;.supabase.co'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'&lt;your-anon-key&gt;'</span>\n<span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"step6按schemas侦听更改\">step6:按schemas侦听更改 <a aria-hidden=\"true\" class=\"anchor\" href=\"#step6%e6%8c%89schemas%e4%be%a6%e5%90%ac%e6%9b%b4%e6%94%b9\"><i class=\"material-icons align-middle\">link</i></a></h2><p>通过将 <code>schema</code> 属性设置为 ‘public’ 并将事件名称设置为 <code>*</code>，侦听 public 架构中所有表的更改。事件名称可以是以下项之一：</p>\n<ul>\n<li><code>INSERT</code></li>\n<li><code>UPDATE</code></li>\n<li><code>DELETE</code></li>\n<li><code>*</code></li>\n</ul>\n<p>通道名称可以是除“realtime”之外的任何字符串。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"bf0dbd3\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> channelA <span class=\"token operator\">=</span> client\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'schema-db-changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"step7插入虚拟数据\">step7:插入虚拟数据 <a aria-hidden=\"true\" class=\"anchor\" href=\"#step7%e6%8f%92%e5%85%a5%e8%99%9a%e6%8b%9f%e6%95%b0%e6%8d%ae\"><i class=\"material-icons align-middle\">link</i></a></h2><p>现在我们可以向表中添加一些数据，这些数据将触发 <code>channelA</code> 事件处理程序。</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-sql\" id=\"7627917\" tabindex=\"0\"><code class=\"language-sql\"><span class=\"token keyword\">insert</span> <span class=\"token keyword\">into</span> todos <span class=\"token punctuation\">(</span>task<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">values</span>\n  <span class=\"token punctuation\">(</span><span class=\"token string\">'Change!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<h2 id=\"用法\">用法 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%94%a8%e6%b3%95\"><i class=\"material-icons align-middle\">link</i></a></h2><p>您可以使用 Supabase 客户端库来订阅数据库更改。</p>\n<h3 id=\"侦听特定schemas\">侦听特定schemas <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%be%a6%e5%90%ac%e7%89%b9%e5%ae%9aschemas\"><i class=\"material-icons align-middle\">link</i></a></h3><p>使用 schema 参数订阅特定架构事件：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"bdafce\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"56aa0e9\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> changes <span class=\"token operator\">=</span> client\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'schema-db-changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Subscribes to the \"public\" schema in Postgres</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span>       <span class=\"token comment\">// Listen to all changes</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"edcabf\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"4174fe0\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'schema-db-changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Subscribes to the \"public\" schema in Postgres</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">,</span> <span class=\"token comment\">// Listen to all changes</span>\n\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"dfebca\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"cff3f3e\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"schema-db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">when</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">//You can also check for &lt;is PostgresAction.Insert&gt;, etc.. manually</span>\n            <span class=\"token keyword\">is</span> HasRecord <span class=\"token operator\">-&gt;</span> <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">is</span> HasOldRecord <span class=\"token operator\">-&gt;</span> <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>oldRecord<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">else</span> <span class=\"token operator\">-&gt;</span> <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>通道名称可以是除“realtime”之外的任何字符串。</p>\n<h3 id=\"侦听-insert-事件\">侦听 INSERT 事件 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%be%a6%e5%90%ac-insert-%e4%ba%8b%e4%bb%b6\"><i class=\"material-icons align-middle\">link</i></a></h3>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"ebacdf\" role=\"tabpanel\">\n<p>使用 event 参数仅侦听数据库 INSERT：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"3684c4d\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> changes <span class=\"token operator\">=</span> client\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'schema-db-changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'INSERT'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Listen only to INSERTs</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"daefcb\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"9e29e38\" tabindex=\"0\"><code class=\"language-dart\"><span class=\"token keyword\">final</span> changes <span class=\"token operator\">=</span> supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'schema-db-changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"ecdbfa\" role=\"tabpanel\">\n<p>使用 PostgresAction.Insert 作为类型以仅侦听数据库 INSERT：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"92edb05\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Insert<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>通道名称可以是除“realtime”之外的任何字符串。</p>\n<h3 id=\"侦听-update-事件\">侦听 UPDATE 事件 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%be%a6%e5%90%ac-update-%e4%ba%8b%e4%bb%b6\"><i class=\"material-icons align-middle\">link</i></a></h3>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"bfaecd\" role=\"tabpanel\">\n<p>使用 event 参数仅侦听数据库 UPDATE：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"6962110\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> changes <span class=\"token operator\">=</span> client\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'schema-db-changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'UPDATE'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Listen only to UPDATEs</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"cedabf\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"360ae5e\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'schema-db-changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">,</span> <span class=\"token comment\">// Listen only to UPDATEs</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"abedcf\" role=\"tabpanel\">\n<p>使用 PostgresAction.Update 作为类型以仅侦听数据库 UPDATE：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"7ce7141\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Update<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>通道名称可以是除“realtime”之外的任何字符串。</p>\n<h3 id=\"侦听-delete-事件\">侦听 DELETE 事件 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%be%a6%e5%90%ac-delete-%e4%ba%8b%e4%bb%b6\"><i class=\"material-icons align-middle\">link</i></a></h3>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"ecbdaf\" role=\"tabpanel\">\n<p>使用 event 参数仅侦听数据库 DELETE：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"d366848\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> changes <span class=\"token operator\">=</span> client\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'schema-db-changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'DELETE'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Listen only to DELETEs</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"eafdcb\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"19673a0\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'schema-db-changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>delete<span class=\"token punctuation\">,</span> <span class=\"token comment\">// Listen only to DELETEs</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"aedcfb\" role=\"tabpanel\">\n<p>使用 PostgresAction.Delete 作为类型以仅侦听数据库 DELETE：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"15ccc59\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Delete<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>oldRecord<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>通道名称可以是除“realtime”之外的任何字符串。</p>\n<h3 id=\"监听特定表\">监听特定表 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%9b%91%e5%90%ac%e7%89%b9%e5%ae%9a%e8%a1%a8\"><i class=\"material-icons align-middle\">link</i></a></h3><p>使用 table 参数订阅特定表事件：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"efcabd\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"8311165\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> changes <span class=\"token operator\">=</span> client\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'table-db-changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'todos'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"dfcbea\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"b5490e7\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'table-db-changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'todos'</span></span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"beacdf\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"9d94224\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"todos\"</span></span>\n<span class=\"token punctuation\">}</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>通道名称可以是除“realtime”之外的任何字符串。</p>\n<h3 id=\"监听多个更改\">监听多个更改 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%9b%91%e5%90%ac%e5%a4%9a%e4%b8%aa%e6%9b%b4%e6%94%b9\"><i class=\"material-icons align-middle\">link</i></a></h3><p>要侦听同一频道的不同事件和架构/表/筛选器组合，请执行以下操作：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"dcfaeb\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"19a3e61\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> channel <span class=\"token operator\">=</span> supabase\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'db-changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'messages'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'INSERT'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'users'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"cbeadf\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"cd906cf\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'db-changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'messages'</span></span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'users'</span></span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"bcafde\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"addf0c5\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">val</span> messageChanges <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"messages\"</span></span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">val</span> userChanges <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Insert<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"users\"</span></span>\n<span class=\"token punctuation\">}</span>\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h3 id=\"筛选特定更改\">筛选特定更改 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ad%9b%e9%80%89%e7%89%b9%e5%ae%9a%e6%9b%b4%e6%94%b9\"><i class=\"material-icons align-middle\">link</i></a></h3><p>使用 <code>filter</code> 参数进行精细更改：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"abfdce\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"bc8fb7b\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> changes <span class=\"token operator\">=</span> client\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'table-filter-changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'INSERT'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'todos'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">filter</span><span class=\"token operator\">:</span> <span class=\"token string\">'id=eq.1'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"cdefba\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"e95af8b\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'table-filter-changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'todos'</span></span><span class=\"token punctuation\">,</span>\n      filter<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilter</span><span class=\"token punctuation\">(</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilterType</span><span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">,</span>\n        column<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'id'</span></span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"efacbd\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"48693d0\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Insert<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"todos\"</span></span>\n    filter <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"id=eq.1\"</span></span>\n<span class=\"token punctuation\">}</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h2 id=\"可用的过滤器\">可用的过滤器 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%8f%af%e7%94%a8%e7%9a%84%e8%bf%87%e6%bb%a4%e5%99%a8\"><i class=\"material-icons align-middle\">link</i></a></h2><p>Realtime 提供过滤器，因此您可以更精细地指定客户端接收的数据。</p>\n<h3 id=\"等于-eq\">等于 （eq） <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%ad%89%e4%ba%8e-eq\"><i class=\"material-icons align-middle\">link</i></a></h3><p>当表中的列值等于客户端指定的值时侦听更改，请执行以下操作：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"bcfade\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"2ae18b0\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> channel <span class=\"token operator\">=</span> supabase\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'UPDATE'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'messages'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">filter</span><span class=\"token operator\">:</span> <span class=\"token string\">'body=eq.hey'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"adcbef\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"866f28c\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>update<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'messages'</span></span><span class=\"token punctuation\">,</span>\n      filter<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilter</span><span class=\"token punctuation\">(</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilterType</span><span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">,</span>\n        column<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'body'</span></span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'hey'</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"ebcafd\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"fcb12e1\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Update<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"messages\"</span></span>\n    filter <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"body=eq.hey\"</span></span>\n<span class=\"token punctuation\">}</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>此过滤器使用 Postgres 的 = 过滤器。</p>\n<h3 id=\"不等于-neq\">不等于 （neq） <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e4%b8%8d%e7%ad%89%e4%ba%8e-neq\"><i class=\"material-icons align-middle\">link</i></a></h3><p>当表中的列值不等于客户端指定的值时侦听更改，请执行以下操作：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"debafc\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"5426bb3\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> channel <span class=\"token operator\">=</span> supabase\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'INSERT'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'messages'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">filter</span><span class=\"token operator\">:</span> <span class=\"token string\">'body=neq.bye'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"bfcade\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"7405312\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'messages'</span></span><span class=\"token punctuation\">,</span>\n      filter<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilter</span><span class=\"token punctuation\">(</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilterType</span><span class=\"token punctuation\">.</span>neq<span class=\"token punctuation\">,</span>\n        column<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'body'</span></span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'bye'</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"fcdeba\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"f18877c\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span>realtime<span class=\"token punctuation\">.</span><span class=\"token function\">createChannel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Update<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"messages\"</span></span>\n    filter <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"body=neq.bye\"</span></span>\n<span class=\"token punctuation\">}</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nsupabase<span class=\"token punctuation\">.</span>realtime<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>此筛选器使用 Postgres 的 ！= 筛选器。</p>\n<h3 id=\"小于-lt\">小于 （lt） <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%b0%8f%e4%ba%8e-lt\"><i class=\"material-icons align-middle\">link</i></a></h3><p>当表中的列值小于客户端指定的值时侦听更改：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"fecadb\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"b2c9f4b\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> channel <span class=\"token operator\">=</span> supabase\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'INSERT'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'profiles'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">filter</span><span class=\"token operator\">:</span> <span class=\"token string\">'age=lt.65'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"fbaced\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"bedf151\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'profiles'</span></span><span class=\"token punctuation\">,</span>\n      filter<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilter</span><span class=\"token punctuation\">(</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilterType</span><span class=\"token punctuation\">.</span>lt<span class=\"token punctuation\">,</span>\n        column<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'age'</span></span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"cafedb\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"97fc01c\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Insert<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"profiles\"</span></span>\n    filter <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"age=lt.65\"</span></span>\n<span class=\"token punctuation\">}</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>此筛选器使用 Postgres 的&lt;筛选器，因此它适用于非数值类型。请务必检查比较数据类型的预期行为。</p>\n<h3 id=\"小于或等于-lte\">小于或等于 （lte） <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%b0%8f%e4%ba%8e%e6%88%96%e7%ad%89%e4%ba%8e-lte\"><i class=\"material-icons align-middle\">link</i></a></h3><p>当表中的列值小于或等于客户端指定的值时侦听更改：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"cbdafe\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"adb8fec\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> channel <span class=\"token operator\">=</span> supabase\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'UPDATE'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'profiles'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">filter</span><span class=\"token operator\">:</span> <span class=\"token string\">'age=lte.65'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"efcdba\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"8c88ad2\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'profiles'</span></span><span class=\"token punctuation\">,</span>\n      filter<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilter</span><span class=\"token punctuation\">(</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilterType</span><span class=\"token punctuation\">.</span>lte<span class=\"token punctuation\">,</span>\n        column<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'age'</span></span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token number\">65</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"bcaefd\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"ca2c9eb\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Update<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"profiles\"</span></span>\n    filter <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"age=lte.65\"</span></span>\n<span class=\"token punctuation\">}</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>此筛选器使用 Postgres 的 &lt;= 筛选器，因此它适用于非数值类型。请务必检查比较数据类型的预期行为。</p>\n<h3 id=\"大于-gt\">大于 （gt） <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%a4%a7%e4%ba%8e-gt\"><i class=\"material-icons align-middle\">link</i></a></h3><p>当表中的列值大于客户端指定的值时侦听更改：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"dfbeca\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"b3923bd\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> channel <span class=\"token operator\">=</span> supabase\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'INSERT'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'products'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">filter</span><span class=\"token operator\">:</span> <span class=\"token string\">'quantity=gt.10'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"ecfbad\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"e656ed1\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'products'</span></span><span class=\"token punctuation\">,</span>\n      filter<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilter</span><span class=\"token punctuation\">(</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilterType</span><span class=\"token punctuation\">.</span>gt<span class=\"token punctuation\">,</span>\n        column<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'quantity'</span></span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"dbacfe\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"c3caf9a\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Update<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"products\"</span></span>\n    filter <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"quantity=gt.10\"</span></span>\n<span class=\"token punctuation\">}</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>此筛选器使用 Postgres 的&gt;筛选器，因此它适用于非数字类型。请务必检查比较数据类型的预期行为。</p>\n<h3 id=\"大于或等于-gte\">大于或等于 （gte） <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%a4%a7%e4%ba%8e%e6%88%96%e7%ad%89%e4%ba%8e-gte\"><i class=\"material-icons align-middle\">link</i></a></h3><p>当表中的列值大于或等于客户端指定的值时侦听更改：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"abcdfe\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"7855909\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> channel <span class=\"token operator\">=</span> supabase\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'INSERT'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'products'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">filter</span><span class=\"token operator\">:</span> <span class=\"token string\">'quantity=gte.10'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"dbacfe\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"e542f97\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'products'</span></span><span class=\"token punctuation\">,</span>\n      filter<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilter</span><span class=\"token punctuation\">(</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilterType</span><span class=\"token punctuation\">.</span>gte<span class=\"token punctuation\">,</span>\n        column<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'quantity'</span></span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"fbdeac\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"9a55864\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Update<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"products\"</span></span>\n    filter <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"quantity=gte.10\"</span></span>\n<span class=\"token punctuation\">}</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>此筛选器使用 Postgres 的 &gt;= 筛选器，因此它适用于非数值类型。请务必检查比较数据类型的预期行为。</p>\n<h3 id=\"包含在清单中-in\">包含在清单中 （in） <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%8c%85%e5%90%ab%e5%9c%a8%e6%b8%85%e5%8d%95%e4%b8%ad-in\"><i class=\"material-icons align-middle\">link</i></a></h3><p>当表中的列值等于任何客户端指定的值时侦听更改：</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"bafcde\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"a286c76\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> channel <span class=\"token operator\">=</span> supabase\n<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'changes'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'INSERT'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'colors'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">filter</span><span class=\"token operator\">:</span> <span class=\"token string\">'name=in.(red, blue, yellow)'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"badfec\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"692107a\" tabindex=\"0\"><code class=\"language-dart\">supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'changes'</span></span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'colors'</span></span><span class=\"token punctuation\">,</span>\n      filter<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilter</span><span class=\"token punctuation\">(</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilterType</span><span class=\"token punctuation\">.</span>lte<span class=\"token punctuation\">,</span>\n        column<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'name'</span></span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string-literal\"><span class=\"token string\">'red'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'blue'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string-literal\"><span class=\"token string\">'yellow'</span></span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"debcaf\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"41daa07\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Update<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"products\"</span></span>\n    filter <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"name=in.(red, blue, yellow)\"</span></span>\n<span class=\"token punctuation\">}</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<p>此筛选器使用 Postgres 的 = ANY。实时允许此筛选器最多 100 个值。</p>\n<h2 id=\"接收旧-记录\">接收<code>旧 </code>记录 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e6%8e%a5%e6%94%b6%e6%97%a7-%e8%ae%b0%e5%bd%95\"><i class=\"material-icons align-middle\">link</i></a></h2><p>默认情况下，仅发送新记录更改，但如果要在更新或删除记录时接收旧记录（以前的值），则可以将表的副本标识设置为完整：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-sql\" id=\"4ca83c2\" tabindex=\"0\"><code class=\"language-sql\"><span class=\"token keyword\">alter</span> <span class=\"token keyword\">table</span>\nmessages replica <span class=\"token keyword\">identity</span> <span class=\"token keyword\">full</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>RLS 策略不适用于 DELETE 语句，因为 Postgres 无法验证用户是否有权访问已删除的记录。启用 RLS 并将表上的副本标识设置为完整时，旧记录仅包含主键。</p>\n</div>\n</div>\n<h2 id=\"私有-schemas\">私有 schemas <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e7%a7%81%e6%9c%89-schemas\"><i class=\"material-icons align-middle\">link</i></a></h2><p>Postgres Changes 适用于公共架构中的表。您可以通过向访问令牌中找到的数据库角色授予表 SELECT 权限来侦听私有架构中的表。您可以运行类似于以下内容的查询：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-sql\" id=\"2724d0c\" tabindex=\"0\"><code class=\"language-sql\"><span class=\"token keyword\">grant</span> <span class=\"token keyword\">select</span> <span class=\"token keyword\">on</span> <span class=\"token string\">\"non_private_schema\"</span><span class=\"token punctuation\">.</span><span class=\"token string\">\"some_table\"</span> <span class=\"token keyword\">to</span> authenticated<span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>我们强烈建议您启用 RLS 并为私有架构中的表创建策略。否则，您授予访问权限的任何角色都将拥有对表的不受限制的读取访问权限。</p>\n</div>\n</div>\n<h2 id=\"自定义令牌\">自定义令牌 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e8%87%aa%e5%ae%9a%e4%b9%89%e4%bb%a4%e7%89%8c\"><i class=\"material-icons align-middle\">link</i></a></h2><p>可以选择对自己的令牌进行签名，以自定义可在 RLS 策略中检查的声明。</p>\n<p>项目 JWT 密钥可在仪表板中找到，其中包含项目 API 密钥。</p>\n<div class=\"alert alert-info d-flex\" role=\"alert\">\n<div class=\"flex-shrink-1 alert-icon\">\n<span class=\"material-icons size-20 me-2\">\n  info\n  </span></div>\n<div class=\"w-100\">\n<p>不要在客户端上公开 service_role 令牌，因为该角色有权绕过行级安全性。</p>\n</div>\n</div>\n<p>要将您自己的 JWT 与 Realtime 一起使用，请确保在实例化 Supabase 客户端之后和连接到 Channel 之前设置令牌。</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"dbcfea\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"fa6c728\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> createClient <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@supabase/supabase-js'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createClient</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SUPABASE_URL</span><span class=\"token punctuation\">,</span> process<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span><span class=\"token constant\">SUPABASE_KEY</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// Set your custom JWT here</span>\nsupabase<span class=\"token punctuation\">.</span>realtime<span class=\"token punctuation\">.</span><span class=\"token function\">setAuth</span><span class=\"token punctuation\">(</span><span class=\"token string\">'your-custom-jwt'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> channel <span class=\"token operator\">=</span> supabase\n  <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string\">'db-changes'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span>\n    <span class=\"token string\">'postgres_changes'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">event</span><span class=\"token operator\">:</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">schema</span><span class=\"token operator\">:</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">table</span><span class=\"token operator\">:</span> <span class=\"token string\">'messages'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">filter</span><span class=\"token operator\">:</span> <span class=\"token string\">'body=eq.bye'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span><span class=\"token parameter\">payload</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"bfdace\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"73de1cd\" tabindex=\"0\"><code class=\"language-dart\">supabase<span class=\"token punctuation\">.</span>realtime<span class=\"token punctuation\">.</span><span class=\"token function\">setAuth</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'your-custom-jwt'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nsupabase\n    <span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'db-changes'</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onPostgresChanges</span><span class=\"token punctuation\">(</span>\n      event<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeEvent</span><span class=\"token punctuation\">.</span>all<span class=\"token punctuation\">,</span>\n      schema<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'public'</span></span><span class=\"token punctuation\">,</span>\n      table<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'messages'</span></span><span class=\"token punctuation\">,</span>\n      filter<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilter</span><span class=\"token punctuation\">(</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token class-name\">PostgresChangeFilterType</span><span class=\"token punctuation\">.</span>eq<span class=\"token punctuation\">,</span>\n        column<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'body'</span></span><span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">:</span> <span class=\"token string-literal\"><span class=\"token string\">'bye'</span></span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      callback<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span><span class=\"token operator\">&gt;</span> <span class=\"token function\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"dacebf\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"995b96c\" tabindex=\"0\"><code class=\"language-kotlin\"><span class=\"token keyword\">val</span> supabase <span class=\"token operator\">=</span> <span class=\"token function\">createSupabaseClient</span><span class=\"token punctuation\">(</span>supabaseUrl<span class=\"token punctuation\">,</span> supabaseKey<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">install</span><span class=\"token punctuation\">(</span>Realtime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tjwtToken <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"your-custom-jwt\"</span></span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">val</span> myChannel <span class=\"token operator\">=</span> supabase<span class=\"token punctuation\">.</span><span class=\"token function\">channel</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"db-changes\"</span></span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">val</span> changes <span class=\"token operator\">=</span> myChannel<span class=\"token punctuation\">.</span>postgresChangeFlow<span class=\"token operator\">&lt;</span>PostgresAction<span class=\"token punctuation\">.</span>Update<span class=\"token operator\">&gt;</span><span class=\"token punctuation\">(</span>schema <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"public\"</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    table <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"products\"</span></span>\n    filter <span class=\"token operator\">=</span> <span class=\"token string-literal singleline\"><span class=\"token string\">\"name=in.(red, blue, yellow)\"</span></span>\n<span class=\"token punctuation\">}</span>\n\nchanges\n    <span class=\"token punctuation\">.</span><span class=\"token function\">onEach</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">println</span><span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span>record<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">launchIn</span><span class=\"token punctuation\">(</span>yourCoroutineScope<span class=\"token punctuation\">)</span>\n\nmyChannel<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h3 id=\"刷新的令牌\">刷新的令牌 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%88%b7%e6%96%b0%e7%9a%84%e4%bb%a4%e7%89%8c\"><i class=\"material-icons align-middle\">link</i></a></h3><p>您需要自行刷新令牌，但一旦生成，您可以将其传递给 Realtime。</p>\n\n<div class=\"tab-content\" id=\"nav-tab-content\">\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade show active\" id=\"bcafed\" role=\"tabpanel\">\n<p>例如，如果你使用的是 supabase-js v2 客户端，那么你可以像这样传递你的令牌：</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-js\" id=\"fb6fb3f\" tabindex=\"0\"><code class=\"language-js\"><span class=\"token comment\">// Client setup</span>\n\nsupabase<span class=\"token punctuation\">.</span>realtime<span class=\"token punctuation\">.</span><span class=\"token function\">setAuth</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fresh-token'</span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"edbfca\" role=\"tabpanel\">\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-dart\" id=\"4b2c772\" tabindex=\"0\"><code class=\"language-dart\">supabase<span class=\"token punctuation\">.</span>realtime<span class=\"token punctuation\">.</span><span class=\"token function\">setAuth</span><span class=\"token punctuation\">(</span><span class=\"token string-literal\"><span class=\"token string\">'fresh-token'</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n<div aria-labelledby=\"nav-1\" class=\"tab-pane fade\" id=\"edbafc\" role=\"tabpanel\">\n<p>In Kotlin, you have to update the token manually per channel:</p>\n<div class=\"prism-codeblock\">\n<div class=\"code-toolbar\"><pre class=\"language-kotlin\" id=\"df7c169\" tabindex=\"0\"><code class=\"language-kotlin\">myChannel<span class=\"token punctuation\">.</span><span class=\"token function\">updateAuth</span><span class=\"token punctuation\">(</span><span class=\"token string-literal singleline\"><span class=\"token string\">\"fresh-token\"</span></span><span class=\"token punctuation\">)</span></code></pre><div class=\"toolbar\"><div class=\"toolbar-item\"><button aria-label=\"copy\" class=\"copy-to-clipboard-button\" data-copy-state=\"copy\" type=\"button\"><span></span></button></div></div></div>\n</div>\n</div>\n</div>\n<h2 id=\"局限性\">局限性 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%b1%80%e9%99%90%e6%80%a7\"><i class=\"material-icons align-middle\">link</i></a></h2><h3 id=\"删除事件不可筛选\">删除事件不可筛选 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e5%88%a0%e9%99%a4%e4%ba%8b%e4%bb%b6%e4%b8%8d%e5%8f%af%e7%ad%9b%e9%80%89\"><i class=\"material-icons align-middle\">link</i></a></h3><p>在跟踪 Postgres 更改时，您无法过滤删除事件。此限制是由于从 Postgres 中提取更改的方式所致。</p>\n<h3 id=\"表名中的空格\">表名中的空格 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e8%a1%a8%e5%90%8d%e4%b8%ad%e7%9a%84%e7%a9%ba%e6%a0%bc\"><i class=\"material-icons align-middle\">link</i></a></h3><p>当表名包含空格时，实时当前不起作用。</p>\n<h3 id=\"数据库实例和实时性能\">数据库实例和实时性能 <a aria-hidden=\"true\" class=\"anchor\" href=\"#%e6%95%b0%e6%8d%ae%e5%ba%93%e5%ae%9e%e4%be%8b%e5%92%8c%e5%ae%9e%e6%97%b6%e6%80%a7%e8%83%bd\"><i class=\"material-icons align-middle\">link</i></a></h3><p>实时系统通常需要深思熟虑，因为它们具有扩展动态。对于 Postgres 更改功能，必须检查每个更改事件，以查看订阅用户是否具有访问权限。例如，如果您有 100 个用户订阅了您进行单个插入的表，它将触发 100 次“读取”：每个用户一次。</p>\n<p>可能存在限制消息吞吐量的数据库瓶颈。如果数据库无法足够快地授权更改，则更改将延迟，直到您收到超时。</p>\n<p>数据库更改在单个线程上处理，以维护变更单。这意味着计算升级不会对 Postgres 更改订阅的性能产生很大影响。您可以在下面估算数据库的预期最大吞吐量。</p>\n<p>如果大规模使用 Postgres 更改，则应考虑使用单独的“公共”表，而不使用 RLS 和过滤器。或者，您可以仅使用实时服务器端，然后使用实时广播将更改重新流式传输到客户端。</p>\n<p>输入您的数据库设置以估计实例的最大吞吐量：</p>\n<realtimelimitsestimator>\n<p>不要忘记运行您自己的基准测试，以确保性能对于您的用例来说是可以接受的。</p>\n<p>我们正在对 Realtime 的 Postgres 更改进行许多改进。如果您不确定用例的性能，请使用支持表单与我们联系，我们将很乐意为您提供帮助。我们拥有一支工程师团队，可以为您的用例提供最佳解决方案建议。</p>\n</realtimelimitsestimator></div>\n</div>\n<div><hr class=\"doc-hr\"/>\n<div class=\"d-print-none\" id=\"doc-nav\">\n<div class=\"row flex-xl-nowrap\">\n<div class=\"col-sm-6 pt-2 doc-next\">\n<a href=\"/docs/app/development_guide/realtime/guides/client-side-throttling/\">\n<div class=\"card h-100 my-1\">\n<div class=\"card-body py-2\">\n<p class=\"card-title fs-5 fw-semibold lh-base mb-0\"><i class=\"material-icons align-middle\">navigate_before</i> 限制消息</p>\n</div>\n</div>\n</a>\n</div>\n<div class=\"col-sm-6 pt-2 doc-prev\">\n<a class=\"ms-auto\" href=\"/docs/app/development_guide/realtime/guides/realtime-with-nextjs/\">\n<div class=\"card h-100 my-1 text-end\">\n<div class=\"card-body py-2\">\n<p class=\"card-title fs-5 fw-semibold lh-base mb-0\">将 Realtime 与 Next.js 结合使用 <i class=\"material-icons align-middle\">navigate_next</i></p>\n</div>\n</div>\n</a>\n</div>\n</div>\n</div></div>\n</div>\n</div>\n</div>\n</div>\n\n</main>",
  "markdown": "[MemFireDB备份 6](/)\n\nmenu\n\n[官网](https://memfiredb.com/)\n[论坛](https://community.memfiredb.com/)\n[登录](https://cloud.memfiredb.com/auth/login)\n\nEnable dark mode\n\nEnable light mode\n\n本页\n\n快速入门\n\n# Postgres 更改\n\n让我们探讨如何使用 Realtime 的 Postgres Changes 功能来监听数据库事件。\n\n## 快速入门 [*link*](#%e5%bf%ab%e9%80%9f%e5%85%a5%e9%97%a8)\n\n在此示例中，我们将设置一个数据库表，使用行级别安全性保护它，并使用 MemFire Cloud 客户端库订阅所有更改。\n\n## step1:使用“todos”表设置 MemFire Cloud 项目 [*link*](#step1%e4%bd%bf%e7%94%a8todos%e8%a1%a8%e8%ae%be%e7%bd%ae-memfire-cloud-%e9%a1%b9%e7%9b%ae)\n\n[创建一个新项目](https://cloud.memfiredb.com/project).\n\n项目准备就绪后，在MemFire Cloud数据库中创建一个表。您可以使用 Table 接口或 SQL 编辑器执行此操作。\n\n```\n-- Create a table called \"todos\"\n-- with a column to store tasks.\ncreate table todos (\n  id serial primary key,\n  task text\n);\n```\n\n[\n\n](https://xguihxuzqibwxjnimxev.supabase.co/storage/v1/object/public/videos/docs/api/api-create-table-sm.mp4)\n\n## step2:允许匿名访问 [*link*](#step2%e5%85%81%e8%ae%b8%e5%8c%bf%e5%90%8d%e8%ae%bf%e9%97%ae)\n\n在此示例中，我们将为此表启用[行级别安全](/docs/app/development_guide/auth/mandates/row-level-security/)性并允许匿名访问。在生产环境中，请务必使用适当的权限保护应用程序。\n\n```\n-- Turn on security\nalter table \"todos\"\nenable row level security;\n\n-- Allow anonymous access\ncreate policy \"Allow anonymous access\"\non todos\nfor select\nto anon\nusing (true);\n```\n\n## step3:启用 Postgres 复制 [*link*](#step3%e5%90%af%e7%94%a8-postgres-%e5%a4%8d%e5%88%b6)\n\n转到项目的’数据库’->[Replication]设置，然后在`supabase_realtime`下，打开要收听的表。\n\n## step4:安装客户端 [*link*](#step4%e5%ae%89%e8%a3%85%e5%ae%a2%e6%88%b7%e7%ab%af)\n\n安装 Supabase JavaScript 客户端。\n\n```\nnpm install @supabase/supabase-js\n```\n\n## step5:创建客户端 [*link*](#step5%e5%88%9b%e5%bb%ba%e5%ae%a2%e6%88%b7%e7%ab%af)\n\n此客户端将用于侦听 Postgres 更改。\n\n```\nimport { createClient } from '@supabase/supabase-js'\n\nconst client = createClient(\n  'https://<project>.supabase.co',\n  '<your-anon-key>'\n)\n```\n\n## step6:按schemas侦听更改 [*link*](#step6%e6%8c%89schemas%e4%be%a6%e5%90%ac%e6%9b%b4%e6%94%b9)\n\n通过将 `schema` 属性设置为 ‘public’ 并将事件名称设置为 `*`，侦听 public 架构中所有表的更改。事件名称可以是以下项之一：\n\n* `INSERT`\n* `UPDATE`\n* `DELETE`\n* `*`\n\n通道名称可以是除“realtime”之外的任何字符串。\n\n```\nconst channelA = client\n.channel('schema-db-changes')\n.on(\n  'postgres_changes',\n  {\n    event: '*',\n    schema: 'public',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n## step7:插入虚拟数据 [*link*](#step7%e6%8f%92%e5%85%a5%e8%99%9a%e6%8b%9f%e6%95%b0%e6%8d%ae)\n\n现在我们可以向表中添加一些数据，这些数据将触发 `channelA` 事件处理程序。\n\n```\ninsert into todos (task)\nvalues\n  ('Change!');\n```\n\n## 用法 [*link*](#%e7%94%a8%e6%b3%95)\n\n您可以使用 Supabase 客户端库来订阅数据库更改。\n\n### 侦听特定schemas [*link*](#%e4%be%a6%e5%90%ac%e7%89%b9%e5%ae%9aschemas)\n\n使用 schema 参数订阅特定架构事件：\n\n```\nconst changes = client\n.channel('schema-db-changes')\n.on(\n  'postgres_changes',\n  {\n    schema: 'public', // Subscribes to the \"public\" schema in Postgres\n    event: '*',       // Listen to all changes\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('schema-db-changes')\n  .onPostgresChanges(\n      schema: 'public', // Subscribes to the \"public\" schema in Postgres\n      event: PostgresChangeEvent.all, // Listen to all changes\n\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n```\nval myChannel = supabase.channel(\"schema-db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction>(schema = \"public\")\n\nchanges\n    .onEach {\n        when(it) { //You can also check for <is PostgresAction.Insert>, etc.. manually\n            is HasRecord -> println(it.record)\n            is HasOldRecord -> println(it.oldRecord)\n            else -> println(it)\n        }\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n通道名称可以是除“realtime”之外的任何字符串。\n\n### 侦听 INSERT 事件 [*link*](#%e4%be%a6%e5%90%ac-insert-%e4%ba%8b%e4%bb%b6)\n\n使用 event 参数仅侦听数据库 INSERT：\n\n```\nconst changes = client\n.channel('schema-db-changes')\n.on(\n  'postgres_changes',\n  {\n    event: 'INSERT', // Listen only to INSERTs\n    schema: 'public',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nfinal changes = supabase\n  .channel('schema-db-changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.insert,\n      schema: 'public',\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n使用 PostgresAction.Insert 作为类型以仅侦听数据库 INSERT：\n\n```\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Insert>(schema = \"public\")\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n通道名称可以是除“realtime”之外的任何字符串。\n\n### 侦听 UPDATE 事件 [*link*](#%e4%be%a6%e5%90%ac-update-%e4%ba%8b%e4%bb%b6)\n\n使用 event 参数仅侦听数据库 UPDATE：\n\n```\nconst changes = client\n.channel('schema-db-changes')\n.on(\n  'postgres_changes',\n  {\n    event: 'UPDATE', // Listen only to UPDATEs\n    schema: 'public',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('schema-db-changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.update, // Listen only to UPDATEs\n      schema: 'public',\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n使用 PostgresAction.Update 作为类型以仅侦听数据库 UPDATE：\n\n```\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Update>(schema = \"public\")\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n通道名称可以是除“realtime”之外的任何字符串。\n\n### 侦听 DELETE 事件 [*link*](#%e4%be%a6%e5%90%ac-delete-%e4%ba%8b%e4%bb%b6)\n\n使用 event 参数仅侦听数据库 DELETE：\n\n```\nconst changes = client\n.channel('schema-db-changes')\n.on(\n  'postgres_changes',\n  {\n    event: 'DELETE', // Listen only to DELETEs\n    schema: 'public',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('schema-db-changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.delete, // Listen only to DELETEs\n      schema: 'public',\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n使用 PostgresAction.Delete 作为类型以仅侦听数据库 DELETE：\n\n```\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Delete>(schema = \"public\")\n\nchanges\n    .onEach {\n        println(it.oldRecord)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n通道名称可以是除“realtime”之外的任何字符串。\n\n### 监听特定表 [*link*](#%e7%9b%91%e5%90%ac%e7%89%b9%e5%ae%9a%e8%a1%a8)\n\n使用 table 参数订阅特定表事件：\n\n```\nconst changes = client\n.channel('table-db-changes')\n.on(\n  'postgres_changes',\n  {\n    event: '*',\n    schema: 'public',\n    table: 'todos',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('table-db-changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.all,\n      schema: 'public',\n      table: 'todos',\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n```\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction>(schema = \"public\") {\n    table = \"todos\"\n}\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n通道名称可以是除“realtime”之外的任何字符串。\n\n### 监听多个更改 [*link*](#%e7%9b%91%e5%90%ac%e5%a4%9a%e4%b8%aa%e6%9b%b4%e6%94%b9)\n\n要侦听同一频道的不同事件和架构/表/筛选器组合，请执行以下操作：\n\n```\nconst channel = supabase\n.channel('db-changes')\n.on(\n  'postgres_changes',\n  {\n    event: '*',\n    schema: 'public',\n    table: 'messages',\n  },\n  (payload) => console.log(payload)\n)\n.on(\n  'postgres_changes',\n  {\n    event: 'INSERT',\n    schema: 'public',\n    table: 'users',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('db-changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.all,\n      schema: 'public',\n      table: 'messages',\n      callback: (payload) => print(payload))\n  .onPostgresChanges(\n      event: PostgresChangeEvent.insert,\n      schema: 'public',\n      table: 'users',\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n```\nval myChannel = supabase.channel(\"db-changes\")\nval messageChanges = myChannel.postgresChangeFlow<PostgresAction>(schema = \"public\") {\n    table = \"messages\"\n}\nval userChanges = myChannel.postgresChangeFlow<PostgresAction.Insert>(schema = \"public\") {\n    table = \"users\"\n}\nmyChannel.subscribe()\n```\n\n### 筛选特定更改 [*link*](#%e7%ad%9b%e9%80%89%e7%89%b9%e5%ae%9a%e6%9b%b4%e6%94%b9)\n\n使用 `filter` 参数进行精细更改：\n\n```\nconst changes = client\n.channel('table-filter-changes')\n.on(\n  'postgres_changes',\n  {\n    event: 'INSERT',\n    schema: 'public',\n    table: 'todos',\n    filter: 'id=eq.1',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('table-filter-changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.insert,\n      schema: 'public',\n      table: 'todos',\n      filter: PostgresChangeFilter(\n        type: PostgresChangeFilterType.eq,\n        column: 'id',\n        value: 1,\n      ),\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n```\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Insert>(schema = \"public\") {\n    table = \"todos\"\n    filter = \"id=eq.1\"\n}\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n## 可用的过滤器 [*link*](#%e5%8f%af%e7%94%a8%e7%9a%84%e8%bf%87%e6%bb%a4%e5%99%a8)\n\nRealtime 提供过滤器，因此您可以更精细地指定客户端接收的数据。\n\n### 等于 （eq） [*link*](#%e7%ad%89%e4%ba%8e-eq)\n\n当表中的列值等于客户端指定的值时侦听更改，请执行以下操作：\n\n```\nconst channel = supabase\n.channel('changes')\n.on(\n  'postgres_changes',\n  {\n    event: 'UPDATE',\n    schema: 'public',\n    table: 'messages',\n    filter: 'body=eq.hey',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.update,\n      schema: 'public',\n      table: 'messages',\n      filter: PostgresChangeFilter(\n        type: PostgresChangeFilterType.eq,\n        column: 'body',\n        value: 'hey',\n      ),\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n```\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Update>(schema = \"public\") {\n    table = \"messages\"\n    filter = \"body=eq.hey\"\n}\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n此过滤器使用 Postgres 的 = 过滤器。\n\n### 不等于 （neq） [*link*](#%e4%b8%8d%e7%ad%89%e4%ba%8e-neq)\n\n当表中的列值不等于客户端指定的值时侦听更改，请执行以下操作：\n\n```\nconst channel = supabase\n.channel('changes')\n.on(\n  'postgres_changes',\n  {\n    event: 'INSERT',\n    schema: 'public',\n    table: 'messages',\n    filter: 'body=neq.bye',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.insert,\n      schema: 'public',\n      table: 'messages',\n      filter: PostgresChangeFilter(\n        type: PostgresChangeFilterType.neq,\n        column: 'body',\n        value: 'bye',\n      ),\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n```\nval myChannel = supabase.realtime.createChannel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Update>(schema = \"public\") {\n    table = \"messages\"\n    filter = \"body=neq.bye\"\n}\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nsupabase.realtime.connect()\nmyChannel.join()\n```\n\n此筛选器使用 Postgres 的 ！= 筛选器。\n\n### 小于 （lt） [*link*](#%e5%b0%8f%e4%ba%8e-lt)\n\n当表中的列值小于客户端指定的值时侦听更改：\n\n```\nconst channel = supabase\n.channel('changes')\n.on(\n  'postgres_changes',\n  {\n    event: 'INSERT',\n    schema: 'public',\n    table: 'profiles',\n    filter: 'age=lt.65',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.insert,\n      schema: 'public',\n      table: 'profiles',\n      filter: PostgresChangeFilter(\n        type: PostgresChangeFilterType.lt,\n        column: 'age',\n        value: 65,\n      ),\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n```\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Insert>(schema = \"public\") {\n    table = \"profiles\"\n    filter = \"age=lt.65\"\n}\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n此筛选器使用 Postgres 的<筛选器，因此它适用于非数值类型。请务必检查比较数据类型的预期行为。\n\n### 小于或等于 （lte） [*link*](#%e5%b0%8f%e4%ba%8e%e6%88%96%e7%ad%89%e4%ba%8e-lte)\n\n当表中的列值小于或等于客户端指定的值时侦听更改：\n\n```\nconst channel = supabase\n.channel('changes')\n.on(\n  'postgres_changes',\n  {\n    event: 'UPDATE',\n    schema: 'public',\n    table: 'profiles',\n    filter: 'age=lte.65',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.insert,\n      schema: 'public',\n      table: 'profiles',\n      filter: PostgresChangeFilter(\n        type: PostgresChangeFilterType.lte,\n        column: 'age',\n        value: 65,\n      ),\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n```\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Update>(schema = \"public\") {\n    table = \"profiles\"\n    filter = \"age=lte.65\"\n}\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n此筛选器使用 Postgres 的 <= 筛选器，因此它适用于非数值类型。请务必检查比较数据类型的预期行为。\n\n### 大于 （gt） [*link*](#%e5%a4%a7%e4%ba%8e-gt)\n\n当表中的列值大于客户端指定的值时侦听更改：\n\n```\nconst channel = supabase\n.channel('changes')\n.on(\n  'postgres_changes',\n  {\n    event: 'INSERT',\n    schema: 'public',\n    table: 'products',\n    filter: 'quantity=gt.10',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.insert,\n      schema: 'public',\n      table: 'products',\n      filter: PostgresChangeFilter(\n        type: PostgresChangeFilterType.gt,\n        column: 'quantity',\n        value: 10,\n      ),\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n```\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Update>(schema = \"public\") {\n    table = \"products\"\n    filter = \"quantity=gt.10\"\n}\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n此筛选器使用 Postgres 的>筛选器，因此它适用于非数字类型。请务必检查比较数据类型的预期行为。\n\n### 大于或等于 （gte） [*link*](#%e5%a4%a7%e4%ba%8e%e6%88%96%e7%ad%89%e4%ba%8e-gte)\n\n当表中的列值大于或等于客户端指定的值时侦听更改：\n\n```\nconst channel = supabase\n.channel('changes')\n.on(\n  'postgres_changes',\n  {\n    event: 'INSERT',\n    schema: 'public',\n    table: 'products',\n    filter: 'quantity=gte.10',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.insert,\n      schema: 'public',\n      table: 'products',\n      filter: PostgresChangeFilter(\n        type: PostgresChangeFilterType.gte,\n        column: 'quantity',\n        value: 10,\n      ),\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n```\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Update>(schema = \"public\") {\n    table = \"products\"\n    filter = \"quantity=gte.10\"\n}\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n此筛选器使用 Postgres 的 >= 筛选器，因此它适用于非数值类型。请务必检查比较数据类型的预期行为。\n\n### 包含在清单中 （in） [*link*](#%e5%8c%85%e5%90%ab%e5%9c%a8%e6%b8%85%e5%8d%95%e4%b8%ad-in)\n\n当表中的列值等于任何客户端指定的值时侦听更改：\n\n```\nconst channel = supabase\n.channel('changes')\n.on(\n  'postgres_changes',\n  {\n    event: 'INSERT',\n    schema: 'public',\n    table: 'colors',\n    filter: 'name=in.(red, blue, yellow)',\n  },\n  (payload) => console.log(payload)\n)\n.subscribe()\n```\n\n```\nsupabase\n  .channel('changes')\n  .onPostgresChanges(\n      event: PostgresChangeEvent.insert,\n      schema: 'public',\n      table: 'colors',\n      filter: PostgresChangeFilter(\n        type: PostgresChangeFilterType.lte,\n        column: 'name',\n        value: ['red', 'blue', 'yellow'],\n      ),\n      callback: (payload) => print(payload))\n  .subscribe();\n```\n\n```\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Update>(schema = \"public\") {\n    table = \"products\"\n    filter = \"name=in.(red, blue, yellow)\"\n}\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n此筛选器使用 Postgres 的 = ANY。实时允许此筛选器最多 100 个值。\n\n## 接收`旧` 记录 [*link*](#%e6%8e%a5%e6%94%b6%e6%97%a7-%e8%ae%b0%e5%bd%95)\n\n默认情况下，仅发送新记录更改，但如果要在更新或删除记录时接收旧记录（以前的值），则可以将表的副本标识设置为完整：\n\n```\nalter table\nmessages replica identity full;\n```\n\ninfo\n\nRLS 策略不适用于 DELETE 语句，因为 Postgres 无法验证用户是否有权访问已删除的记录。启用 RLS 并将表上的副本标识设置为完整时，旧记录仅包含主键。\n\n## 私有 schemas [*link*](#%e7%a7%81%e6%9c%89-schemas)\n\nPostgres Changes 适用于公共架构中的表。您可以通过向访问令牌中找到的数据库角色授予表 SELECT 权限来侦听私有架构中的表。您可以运行类似于以下内容的查询：\n\n```\ngrant select on \"non_private_schema\".\"some_table\" to authenticated;\n```\n\ninfo\n\n我们强烈建议您启用 RLS 并为私有架构中的表创建策略。否则，您授予访问权限的任何角色都将拥有对表的不受限制的读取访问权限。\n\n## 自定义令牌 [*link*](#%e8%87%aa%e5%ae%9a%e4%b9%89%e4%bb%a4%e7%89%8c)\n\n可以选择对自己的令牌进行签名，以自定义可在 RLS 策略中检查的声明。\n\n项目 JWT 密钥可在仪表板中找到，其中包含项目 API 密钥。\n\ninfo\n\n不要在客户端上公开 service\\_role 令牌，因为该角色有权绕过行级安全性。\n\n要将您自己的 JWT 与 Realtime 一起使用，请确保在实例化 Supabase 客户端之后和连接到 Channel 之前设置令牌。\n\n```\nconst { createClient } = require('@supabase/supabase-js')\n\nconst supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_KEY, {})\n\n// Set your custom JWT here\nsupabase.realtime.setAuth('your-custom-jwt')\n\nconst channel = supabase\n  .channel('db-changes')\n  .on(\n    'postgres_changes',\n    {\n      event: '*',\n      schema: 'public',\n      table: 'messages',\n      filter: 'body=eq.bye',\n    },\n    (payload) => console.log(payload)\n  )\n  .subscribe()\n```\n\n```\nsupabase.realtime.setAuth('your-custom-jwt');\n\nsupabase\n    .channel('db-changes')\n    .onPostgresChanges(\n      event: PostgresChangeEvent.all,\n      schema: 'public',\n      table: 'messages',\n      filter: PostgresChangeFilter(\n        type: PostgresChangeFilterType.eq,\n        column: 'body',\n        value: 'bye',\n      ),\n      callback: (payload) => print(payload),\n    )\n    .subscribe();\n```\n\n```\nval supabase = createSupabaseClient(supabaseUrl, supabaseKey) {\n\tinstall(Realtime) {\n\t\tjwtToken = \"your-custom-jwt\"\n\t}\n}\nval myChannel = supabase.channel(\"db-changes\")\n\nval changes = myChannel.postgresChangeFlow<PostgresAction.Update>(schema = \"public\") {\n    table = \"products\"\n    filter = \"name=in.(red, blue, yellow)\"\n}\n\nchanges\n    .onEach {\n        println(it.record)\n    }\n    .launchIn(yourCoroutineScope)\n\nmyChannel.subscribe()\n```\n\n### 刷新的令牌 [*link*](#%e5%88%b7%e6%96%b0%e7%9a%84%e4%bb%a4%e7%89%8c)\n\n您需要自行刷新令牌，但一旦生成，您可以将其传递给 Realtime。\n\n例如，如果你使用的是 supabase-js v2 客户端，那么你可以像这样传递你的令牌：\n\n```\n// Client setup\n\nsupabase.realtime.setAuth('fresh-token')\n```\n\n```\nsupabase.realtime.setAuth('fresh-token');\n```\n\nIn Kotlin, you have to update the token manually per channel:\n\n```\nmyChannel.updateAuth(\"fresh-token\")\n```\n\n## 局限性 [*link*](#%e5%b1%80%e9%99%90%e6%80%a7)\n\n### 删除事件不可筛选 [*link*](#%e5%88%a0%e9%99%a4%e4%ba%8b%e4%bb%b6%e4%b8%8d%e5%8f%af%e7%ad%9b%e9%80%89)\n\n在跟踪 Postgres 更改时，您无法过滤删除事件。此限制是由于从 Postgres 中提取更改的方式所致。\n\n### 表名中的空格 [*link*](#%e8%a1%a8%e5%90%8d%e4%b8%ad%e7%9a%84%e7%a9%ba%e6%a0%bc)\n\n当表名包含空格时，实时当前不起作用。\n\n### 数据库实例和实时性能 [*link*](#%e6%95%b0%e6%8d%ae%e5%ba%93%e5%ae%9e%e4%be%8b%e5%92%8c%e5%ae%9e%e6%97%b6%e6%80%a7%e8%83%bd)\n\n实时系统通常需要深思熟虑，因为它们具有扩展动态。对于 Postgres 更改功能，必须检查每个更改事件，以查看订阅用户是否具有访问权限。例如，如果您有 100 个用户订阅了您进行单个插入的表，它将触发 100 次“读取”：每个用户一次。\n\n可能存在限制消息吞吐量的数据库瓶颈。如果数据库无法足够快地授权更改，则更改将延迟，直到您收到超时。\n\n数据库更改在单个线程上处理，以维护变更单。这意味着计算升级不会对 Postgres 更改订阅的性能产生很大影响。您可以在下面估算数据库的预期最大吞吐量。\n\n如果大规模使用 Postgres 更改，则应考虑使用单独的“公共”表，而不使用 RLS 和过滤器。或者，您可以仅使用实时服务器端，然后使用实时广播将更改重新流式传输到客户端。\n\n输入您的数据库设置以估计实例的最大吞吐量：\n\n不要忘记运行您自己的基准测试，以确保性能对于您的用例来说是可以接受的。\n\n我们正在对 Realtime 的 Postgres 更改进行许多改进。如果您不确定用例的性能，请使用支持表单与我们联系，我们将很乐意为您提供帮助。我们拥有一支工程师团队，可以为您的用例提供最佳解决方案建议。\n\n---\n\n[*navigate\\_before* 限制消息](/docs/app/development_guide/realtime/guides/client-side-throttling/)\n\n[将 Realtime 与 Next.js 结合使用 *navigate\\_next*](/docs/app/development_guide/realtime/guides/realtime-with-nextjs/)"
}